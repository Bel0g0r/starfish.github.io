{"version":3,"sources":["panels/catalog/ButtonInCart.js","panels/catalog/OneProduct.js","panels/Cart/CartHome.js","StartPageVKapp.js","panels/ProfileUser/UserOrderList.js","panels/ProfileUser/OrderTypeList.js","panels/ProfileUser/OrderShowDeail.js","panels/Notice/index.js","panels/ProfileUser/UserInfo.js","panels/catalog/CatalogProduct.js","panels/catalog/CategoryList.js","panels/Cart/Dilivery.js","panels/Cart/DiliveryAddress.js","panels/Cart/GetOneAddress.js","panels/Cart/GetOneAddressOff.js","panels/Cart/AffiliateList.js","panels/Cart/GetOneAffiliateAddress.js","panels/preorder/index.js","panels/noPreorder/index.js","panels/Cart/PaymentsPage.js","panels/Cart/NewOrderServer.js","panels/SearchResultProductBlock.js","panels/Persik.js","panels/Nopersik.js","panels/Profile.js","index.js","panels/global/index.js","img/persik.png","panels/catalog/ProductList.js","panels/Cart/FormNewAddress.js"],"names":["ButtonInCart","CartProducts","getInCarts","typeProduct","setCart","onClick","ButOk","id_CartPr","map","data","key","id_Product","type_product","counts","className","getCountButton","getButtonInCartProduct","typeProduct2","setCarts","escapeHtmlDecode","text","replace","OneProduct","product","idCategory","number_format","number","decimals","dec_point","separator","n","isFinite","prec","Math","abs","sep","dec","s","k","pow","round","toFixed","toFixedFix","split","length","Array","join","productList","ClickProduct","setProductModal","ProductCat","idTypeProduct","id","ArrayMod","ListMod","Object","keys","VisualList","datas","src","mod_img","getModyficateBlock","modyficate","href","id_Category","e","preventDefault","alt","title","img","console","log","global","Metrika","Markers","active","ym","marker","Product_Weight","weight","Product_WeightType","weight_type","description","type_info","price_discount","style","fontWeight","fontSize","marginRight","old_price","new_price","price","getPriceProducts","getProductDiv","osName","platform","GetCartHome","props","state","activePanel","popout","LoadDopProduct","this","setState","LoadStatus","setPopout","a","PopupLoadDop","bind","PresetsDopProductList","list","ListPresets","count","typeCount","textAlign","overflow","float","width","marginLeft","paddingRight","DopProductList","ListDopProduct","URLAPI","getButtonDopProduct","setDopProduct","getCountDopProductIcon","DopProductUserSet","display","paddingBottom","height","minWidth","Prod","alls","idProduct","Buttons","margin","getCartVisual","Products","results","cartProduct","idProducts","marginBottom","clear","color","bottom","getButtonNavigation","typeNav","action","ButtonBlock","data-to","IOS","header","ProductList","icon","sumCart","GetPresetsVisual","theme","size","getOneStepCart","DopProductListVisual","userSystemInfo","userInfo","getUserSystemInfo","addressDefault","setAddressDefault","AffiliateDefault","setAffiliateDefault","checkedTypeDilivery","setTypeDilivery","commentary","setComment","countPerson","setStates","setDeliveryDataItogs","getDeliveryDataPriceItogAffiliate","showModal","hideModals","DataDeliveryInfo","DataDeliveryInfoPay","stretched","level","SalePoints","getReloadInfODeliveryPay","setOkNewOrderView","React","Component","require","App","parseQueryString","string","slice","queryParam","kvp","value","reduce","query","AudioInfo","ReloadBasket","Audio","URL","countReloadBasket","Notice","CountNotice","CountNoticeNoView","typeOrderGetText","typeOrderGet","numberOrderShow","listOrderUser","ParamStart","products","loadingCatalog","activeStory","activePanelOrders","loadingPage","user","error","dataUser","cart","countCartProduct","dopPresets","imgListPresets","typePay","activeModal","formNewAddressData","formEditAddressData","listAddressGlobal","listAffiliateGlobal","priceDelivery","minSumOrder","minSumFreeDelivery","errorOrderFinal","DeliveryPriceItog","DeliveryAddressOKCity","addressOrderInfoUser","newOrderStats","StatusLoadSlide","slideHeaderArray","slideIndex","StatusNotification","CityListBind","typeOrderDate","SelectDatePreorder","SelectTimePreorder","settingsFilterSearch","typeSearch","activeHashPageProduct","activeProductHash","activeCategoryHash","activefilter","onStoryChange","onChange","search","axios","method","url","ApiKey","responseType","then","ListCitySelect","catch","err","idUsers","CountNoticeNoCheck","result","type","idNotice","getNotice","getCartDB","as","bs","currentTarget","dataset","story","aa","sumCartItog","CPr","getSumCartOnDiscount","SumDopsProduct","document","cookie","vk_platform","headers","typeSlide","getTypeSlideGet","setSlideArray","listSlide","ArraySlide","status","StatusReloadBasketData","JSON","stringify","ArraySlides","Bullets","AutoPlays","SliderVisual","maxWidth","autoplay","slideWidth","bullets","getSlideHeaderArray","setTimeout","reloadSlideHeaderSetTime","connect","sendPromise","response","is_allowed","PushClick","AllNotice","setNotice","setNoticeServer","DeleteNotifi","OffPushNotyfication","OnPushNotyfication","getStatusNotificate","setUser","getCityUser","MetrikaAction","fetchData","setInterval","getIntervalCart","setHashDataReload","setModalsPay","setModal","setModalsPayError","setOkNewOrderViewHandl","setFailNewOrderViewHandl","setFailNewOrderView","window","addEventListener","task","i","dataOld","dataNew","ListProduct","setCountCartVisal","ListDopPresets","listPresetProduct","imgPresetProduct","id_user","loading","ia","listProduct","errorInfo","ListOld","ListNew","ListPresetsOld","ListPresetsNew","DopPresetsData","statusBasket","statusPresets","ReloadBasketDataFN","PlayInfoAudio","ListDopOld","ListDopNew","ReloadBasketDataDopPresets","audio","stop","play","setUserSystem","JsonBasket","basketJson","tE","push","countPlus","setcountCartProduct","noAdd","cartProducts","setcountCartProductVar","splice","setDataServer","btoa","encodeURI","setCartServer","HashParam","location","hash","newHeight","screen","send","setHashNew","setPageModalProductHash","ProductArray","def","defaultChecked","name","some","queryParams","modal","onClose","right","dynamicContentHeight","caption","actions","getFilterBlockModal","settlingHeight","background","osname","tabbar","selected","data-story","label","getSuccesOrderPage","getFailOrderPage","userData","setTypeOrderList","left","addon","setOrderShowNumber","listOrderUserSet","idOrderDetail","OrderDatas","ProductsLists","sliderHeader","getSliderGalery","ClickOneFilter","ClickOneFilterDeleted","asideContent","after","arrayProduct","varSearch","noShadow","getDeliveryDataPriceItog","setTypeOrderDate","comments","getNotificationPage","go","dataUsers","setStatusNotification","setShowUserOrderList","UserOrderList","loadOrders","before","getAllGroups","OrderTypeList","getOrderUserSystem","countOrder","Pr","reduceRight","arr","last","index","coll","concat","typeNumber","iconsD","countOrders","ListOrder","ReverceList","dataOrder","keyOrder","CurrentOrder","statusY","status_order","delete_order","summaOrders","sum_order","date","time","id_order","getOrderType","getNowOrder","getOldOrder","getCancelledOrder","getOneTypeOrders","OrderShowDetail","ststusReturn","statusOld","statusReal","ststusReturns","Order","pre_order","date_pre_order","m","sale_price","product_price","Price_sales","discount_amount","Discount","indicator","cost","product_title","price_product","title_product","title_gift_product","dilivery","dilivery_type","Address","dilivery_adres","PriceDeli","dilivery_price","TextDel","affiliate","affiliate_info","promo_status","PromoInfo","promo_code","promo_info","point_out","point_in","OrderId","padding","setRepeatOrder","alert","StatusIcon","getStatusIconText","detailText","getStatusOrderReal","getStatusOrderText","status_order_real","payment","type_pay","getPerson","person","getInfoPointsOrder","getInfoPreorderBlock","getInfoPromokod","promo","getOrderComposition","getOrderDopComposition","dopProductList","getOrderGiftComposition","giftProductList","getOrderDeliveryInfo","getComment","Comment","getRepeatOrder","statusView","Data","setNoticeData","getImagesNotice","dangerouslySetInnerHTML","__html","NoteNotice","UserInfo","them","fetchedUser","photo_200","city","first_name","last_name","checked","textDecoration","linkSocSeti","target","getPanelProfil","CatalogProduct","OPT","useEffect","CategoryList","hndlClick","aP","productModal","setActiveCategory","ActiveCategory","panelCategory","searchProduct","getHashProductPageActive","DataKombo","AllProduct","res","ArrK","d","dp","ip","arrp","marginTop","multiline","FeaturesData","defs","getFeaturesData","Features","getWeightProduct","ModalProductInfo","Loadings","ClickBack","ProductInfo","position","komboPoduct","getKomboProductData","getFeaturesBlock","featuresProduct","GetCategorys","ClickCategory","ShowCategory","Title","onClickProduct","productsLists","filterCategorys","filterCategory","idCategorys","nameCategory","compareUnitaz","b","GetBrandPanels","NewSort","kk","sort","Categorys","imgCategory","backgroundPosition","phonenumberCollVisual","phonenumberColl","classNameDivCategory","blueBackground","backgroundColor","Dilivery","UserCard","phone","email","CheckSMSCode","phoneValue","codeValue","resultVerificationCode","tooltip","snackbar","showBTNNewAddress","showFormNewAddress","openBase","phone_number","getPhoneUserVK","layout","fill","phoneVerification","VerificationCode","idUserVK","event","types","values_count","justifyContent","getDataCountPerson","readOnly","top","placeholder","getValueInputCode","checkVerificationCode","defaultValue","getValueInputPhone","setVerificationPhone","getButtonTypeOrder","typeDelivery","DataInfos","getButtonTypeDilivery","getListAddress","getListAffiliate","getPreorderBlock","getCountPersonInput","getCommentsTextarea","setShowBTNNewAddress","showModals","getCommentsData","Param","getNoneCartProduct","getInfoUserAuth","getInfoUserNoneAuth","getOkListAddress","DiliveryAddress","listAddress","listAddressOff","addressOk","dataAddress","getAddressUserSystem","AddressEdit","delUpdate","id_UserVK","getFormNewAddress","ListAddressNoDelivery","listAddressGlobalOff","getAddressUsers","listAddressU","DataSetAddress","street","home","diliveryData","priceDilivery","min_sum_order","min_sum_free_dilivery","setDataDiliveryPrice","setAddressInfoUsers","keyId","setDataDeliveryPrice","setAddressEdit","AddresInfo","NumberAddress","dataAddressOff","dataAddress2","keyId2","getListAddressVisual","GetOneAddress","AddressN","closePopout","comment","addressInfo","result_add","autoclose","deletedAddress","podezd","etaj","kvartira","openDefault","getAddressFull","getAddressTitle","defaultCheckedR","GetOneAddressOff","disabled","AffiliateList","listAffiliate","addressAffiliateOk","dataAffiliate","id_City","listOffAffiliate","getAddressAffiliate","GetOneAffiliateAddress","operating_mode","Preorder","loadBlockPreorder","listDatePreorder","onChangeS","getDateList","ListDate","getSelectTime","ListTimes","timeList","ListTime","times","false","getSelectDate","getBlockPreorder","NoPreorder","loadBlockOrder","getBlocknoPreorder","PaymentsPage","value2","statusNewOrder","options","point","points","step","min","max","Number","setPointsDefaultsSale","String","sum","checkTypeDiliveryInfo","checkPreorderActive","DataOrder","DataAddressDelivery","getAddressDelivery","DataAddressAffiliate","AddressDelivery","idAffiliatePickup","PointsSale","DeliverySum","Comments","DopInfo","dateObj","Date","getCountsTimeBonus","getDate","getMountsDate","getMonth","getUTCFullYear","PriceInfoVisual","getSumCartItogo","DataOrderInfo","getDataOrder","getPageOkOrderSet","sumItog","showModalPayment","returnPlaceholderPreorder","checkPreorderType","checkMinSummaCart","NewOrderServer","infoNewOrder","typePayment","getElementById","contentWindow","postMessage","idNewOrder","sumPaymentItog","idPointsPaymentToken","SearchResultProductBlock","clrStatus","getArrayCategoryProduct","statusText","undefined","paddingTop","getStatusSearch","getProductSearchResult","ProfileUserPage","useState","setActivePanel","to","setActivePanels","ReactDOM","render","accounts","clickmap","trackLinks","accurateTrackBounce","webvisor","version","URLHTTP","CityIdSystem","ii","module","exports","ReverceCatalog","ProductLists","ProductsListActive","num","SortCategory","resS","dd","SearchProductTitle","DSr","Objs","retr","forEach","oneProduct","array","testInput","SearchProductFilterCategory","filterActive","SearchProductDescription","SearchProductType","ListIdProduct","re","mod","testType","str","toLowerCase","compare","comparePrice","ArrayProducts","ClickProductF","ReverceStatus","SearchText","filtercategorys","CatalogLists","ArrayPr","ShowProductCategory","nameCategorys","resGetSets","GetSets","SearchState","names","filtersOPT","GetSushi","GetRoli","GetNoneCat","alignItems","flexWrap","filters","clickOneFilter","clickOneFilterDeleted","activeFilter","numb","int","ResPrVal","ResultCategoryReturn","FormNewAddress","streetSearch","entrance","flat","streetCityVisual","streetName","streetList","pauseLoadStreet","addressItems","statusChech","minValue","valPls","onInput","getStreetList","setStreetList","S","idC","nameStreet","city_users_id","params","idCity","ListCityOrigin","listCity","ListCitys","ListOption","Localitytype","LocalityName","LocalityId","typeStreet","minHeight","setStreetCityAdres","typeLocality","idLocality","saveNewAddress","saveEditAddress","getOkStreetNameValue","getFormSetStreetName","getOkStreetNameValueEdit","getFormSetStreetNameEdit","getEditForm","getNulledForm"],"mappings":"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","file":"static/js/main.393571ea.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Div } from '@vkontakte/vkui';\r\n\r\n\r\nexport default function ButtonInCart({CartProducts,typeProduct2,setCarts}){\r\n\r\n    function getInCarts(typeProduct,setCart){\r\n        // console.log(setCart);\r\n        const Buttons =\r\n            <button onClick={() => {setCart(typeProduct);}}>\r\n                В корзину\r\n            </button>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    function getCountButton(typeProduct,counts,setCart){\r\n        const Buttons =\r\n            <div className=\"CounterInCart\">\r\n                <div className=\"minus\" onClick={() => {setCart(typeProduct,'-');}}>\r\n                    -\r\n                </div>\r\n                {counts}\r\n                <div className=\"pluse\" onClick={() => {setCart(typeProduct);}}>\r\n                    +\r\n                </div>\r\n            </div>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    function getButtonInCartProduct(typeProduct,setCart){\r\n       // console.log(CartProducts,'---0---',typeProduct,setCart);\r\n        if(!!CartProducts){\r\n            var ButOk = false;\r\n            var id_CartPr = '';\r\n            CartProducts.map((data,key)=>{\r\n                //console.log(data.id_Product,typeProduct.id_Product, data.type_product,typeProduct.type_product,'++++++++++++++++++');\r\n                if(data.id_Product === typeProduct.id_Product & data.type_product === typeProduct.type_product){\r\n                    ButOk = true;\r\n                    id_CartPr = key;\r\n                }\r\n            });\r\n\r\n            if(ButOk === true){\r\n                //console.log('Выполняется условие товар есть');\r\n                return  getCountButton(typeProduct,CartProducts[id_CartPr]['count'],setCart);\r\n            }else{\r\n                //console.log('Выполняется условие товара нет');\r\n                return getInCarts(typeProduct,setCart);\r\n            }\r\n        }else{\r\n            //console.log('Выполняется условие корзина пуста, вывод просто кнопки');\r\n            return getInCarts(typeProduct,setCart);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return(getButtonInCartProduct(typeProduct2,setCarts));\r\n\r\n}\r\n","import React from 'react';\r\nimport { Div } from '@vkontakte/vkui';\r\n//import {Initializer as YM} from 'react-yandex-metrika';\r\nimport ym from 'react-yandex-metrika';\r\n\r\n\r\nfunction escapeHtmlDecode(text) {\r\n    return text\r\n        .replace(/&amp;/g, \"&\")\r\n        .replace(/&lt;/g, \"<\")\r\n        .replace(/&gt;/g, \">\")\r\n        .replace(/&quot;/g, \"\\\"\")\r\n        .replace(/&#039;/g, \"'\");\r\n}\r\n\r\nexport default function OneProduct({product,idCategory, ClickProduct, setCart, setProductModal, getButtonInCartProduct}) {\r\n// console.log('ут должна функция должна быть',ClickProduct);\r\n    // const ArrayProducts = product.map(oneProduct =>\r\n    //     //<OneProduct key={oneProduct.id} product={oneProduct} />\r\n    //     <Div className=\"blockProduct\" key={\"id_product_\"+oneProduct.id_Product}>\r\n    //         <Div className=\"imgPrewieProduct\"><img alt={oneProduct.title} src={oneProduct.img}/></Div><Div className=\"titleProduct\">{oneProduct.title}</Div><Div className=\"DescrProduct\">{oneProduct.description}</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">{oneProduct.price} руб.</span></Div>\r\n    //     </Div>\r\n    // );\r\n\r\n    // console.log(key);\r\n\r\n    function escapeHtml(text) {\r\n        var map = {\r\n            '&': '&amp;',\r\n            '<': '&lt;',\r\n            '>': '&gt;',\r\n            '\"': '&quot;',\r\n            \"'\": '&#039;'\r\n        };\r\n\r\n        return text.replace(/[&<>\"']/g, function(m) { return map[m]; });\r\n    }\r\n\r\n\r\n    function number_format(number, decimals, dec_point, separator ) {\r\n        number = (number + '').replace(/[^0-9+\\-Ee.]/g, '');\r\n        var n = !isFinite(+number) ? 0 : +number,\r\n            prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),\r\n            sep = (typeof separator === 'undefined') ? ',' : separator ,\r\n            dec = (typeof dec_point === 'undefined') ? '.' : dec_point,\r\n            s = '',\r\n            toFixedFix = function(n, prec) {\r\n                var k = Math.pow(10, prec);\r\n                return '' + (Math.round(n * k) / k)\r\n                    .toFixed(prec);\r\n            };\r\n        // Фиксим баг в IE parseFloat(0.55).toFixed(0) = 0;\r\n        s = (prec ? toFixedFix(n, prec) : '' + Math.round(n))\r\n            .split('.');\r\n        if (s[0].length > 3) {\r\n            s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep);\r\n        }\r\n        if ((s[1] || '')\r\n            .length < prec) {\r\n            s[1] = s[1] || '';\r\n            s[1] += new Array(prec - s[1].length + 1)\r\n                .join('0');\r\n        }\r\n        return s.join(dec);\r\n    }\r\n\r\n    function getWeightProduct(Product_Weight,Product_WeightType){\r\n        if(Product_WeightType != 'л'){\r\n            return(\r\n                number_format(Product_Weight,'0','.', ' ')+' '+Product_WeightType\r\n            );\r\n        }else{\r\n            return(\r\n                Product_Weight+' '+Product_WeightType\r\n            );\r\n        }\r\n    }\r\n\r\n    function getModyficateBlock(ArrayMod){\r\n        var ListMod = Object.keys(ArrayMod);\r\n        if(ListMod.length <=0){\r\n            return \"\";\r\n        }else{\r\n            var VisualList = ListMod.map((datas,keys)=>{\r\n                return (<div key={keys} className=\"ModyficateProduct\"><img src={ArrayMod[datas].mod_img} /></div>);\r\n            });\r\n            return(\r\n                <div className=\"ModyficateBlock\">{VisualList}</div>\r\n            );\r\n        }\r\n    }\r\n\r\n    function getProductDiv(productList,idCategory,ClickProduct,setCart,setProductModal ,getButtonInCartProduct){\r\n\r\n         //console.log(ClickProduct,'в корзину функция');\r\n        var ProductCat = productList;\r\n\r\n        const WeightProduct = '';\r\n\r\n\r\n\r\n        const ArrayProducts = ProductCat.map((typeProduct,idTypeProduct) =>\r\n            <Div\r\n                key={\"blockProducts_\"+typeProduct.id_Product+\"_\"+idTypeProduct}\r\n                className=\"blockProduct\"\r\n                id={\"id_product_\"+typeProduct.id_Product+\"_type_\"+typeProduct.type_product}\r\n            >\r\n                {getModyficateBlock(typeProduct.modyficate)}\r\n                <Div className=\"imgPrewieProduct\">\r\n                    {/*<a href={\"//vk.com/app7145362_328965469#getPageProduct&idCategory=\"+typeProduct.id_Category+\"&idProduct=\"+typeProduct.id_Product+\"\"} onClick={(e) => e.preventDefault()}>*/}\r\n                        <a href={\"//vk.com/app8085638_37374892#getPageProduct&idCategory=\"+typeProduct.id_Category+\"&idProduct=\"+typeProduct.id_Product+\"\"} onClick={(e) => e.preventDefault()}>\r\n\r\n                        <img\r\n                            alt={typeProduct.title}\r\n                            src={typeProduct.img}\r\n                            onClick={() => {\r\n                                ClickProduct('Panels_Product');\r\n                                setProductModal([typeProduct]);\r\n                                console.log('Нажали на фотку', ProductCat, idTypeProduct);\r\n                                try {\r\n                                    if (global.Metrika.Markers[3].active == '1') {\r\n                                        ym('reachGoal', global.Metrika.Markers[3].marker);\r\n                                    }\r\n                                }catch (e) {\r\n\r\n                                }\r\n                                //console.log('reachGoal',global.Metrika.Markers[3].marker);\r\n                                // {ym(global.Metrika.idCounter, 'reachGoal', global.Metrika.Markers[3].marker)}\r\n                            }\r\n                            }\r\n                        />\r\n                    </a>\r\n                </Div>\r\n                <Div className=\"titleProduct\">\r\n                    {/*{escapeHtmlDecode(typeProduct.title)}*/}\r\n                    <span className=\"titleProductOne\">{escapeHtmlDecode(typeProduct.title)}</span>\r\n                    <span className=\"redTextP\">\r\n                        {getWeightProduct(typeProduct.weight,typeProduct.weight_type)}\r\n                    </span>\r\n                    <div className=\"clr\"></div>\r\n                </Div>\r\n                <Div className=\"DescrProduct\">\r\n                    {escapeHtmlDecode(typeProduct.description)}\r\n                    <div>\r\n                    </div>\r\n                    {typeProduct.type_info != '' ?\r\n                        <div className=\"WeightBlock\">\r\n                            {typeProduct.type_info}\r\n                        </div>\r\n                        :\r\n                        \"\"\r\n                    }\r\n                </Div>\r\n                <Div className=\"priceProductBig\">\r\n\r\n                        {getPriceProducts(typeProduct)}\r\n\r\n                    {getButtonInCartProduct(typeProduct,setCart)}\r\n                </Div>\r\n            </Div>\r\n        );\r\n\r\n\r\n        return ArrayProducts;\r\n    }\r\n\r\n    function getPriceProducts(typeProduct){\r\n        if(!(\"price_discount\" in typeProduct) || typeProduct.price_discount === false){\r\n            return (<span className=\"priceProduct\">\r\n                {number_format(typeProduct.price,'0','.',' ')} ₽\r\n                </span>\r\n            );\r\n        }else{\r\n            return(\r\n                <span className=\"priceProduct\">\r\n                    <s className=\"old_price_style\" style={{fontWeight:\"460\",fontSize:\"0.9em\",marginRight:\"5px\"}}>{number_format(typeProduct.price_discount.old_price,'0','.',' ')} ₽</s>\r\n                    {number_format(typeProduct.price_discount.new_price,'0','.',' ')} ₽\r\n                </span>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        getProductDiv(product,idCategory,ClickProduct, setCart , setProductModal, getButtonInCartProduct)\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport {Div, View, Panel, Separator, PanelHeader, Group, Button, CellButton, HeaderButton, platform, IOS, Tooltip, HorizontalScroll, Placeholder } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport Icon56MarketOutline from '@vkontakte/icons/dist/56/market_outline';\r\nimport Dilivery from \"./Dilivery\";\r\n\r\nimport './styleCart.css';\r\n\r\nimport ButtonCart from \"../catalog/ButtonInCart\";\r\nimport PaymentsPage from \"./PaymentsPage\";\r\n\r\nconst osName = platform();\r\n\r\n\r\nclass GetCartHome extends React.Component {\r\n\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            activePanel:\"home\",\r\n            popout:null,\r\n            LoadDopProduct:this.props.LoadDopProduct\r\n            //popout:\"<ScreenSpinner size='large' />\",\r\n        }\r\n    }\r\n\r\n    ActivePanels(e){\r\n        this.setState({activePanel: e});\r\n    }\r\n\r\n    componentDidMount() {\r\n        async function PopupLoadDop(LoadStatus,setPopout){\r\n            if(LoadStatus === true) {\r\n                setPopout();\r\n            }else {\r\n                setPopout(null);\r\n            }\r\n        }\r\n\r\n        PopupLoadDop(this.state.LoadDopProduct,this.setPopout.bind(this));\r\n    }\r\n\r\n\r\n    ReloadDeliveryPay(){\r\n\r\n    }\r\n\r\n    GetPresetsVisual(){\r\n        if(Object.keys(this.props.PresetsDopProductList.list).length >0){\r\n            const ListPresets = this.props.PresetsDopProductList.list.map((datas,number)=>{\r\n                return(\r\n                    <div key={number+'PresetsTitle'}>{datas.title} -  {datas.count} {datas.typeCount}</div>\r\n                );\r\n            });\r\n            return(\r\n                <Group\r\n                title=\"В заказ так же входит\"\r\n                    style={{textAlign:\"center\",overflow: \"hidden\"}}>\r\n                    <img src={this.props.PresetsDopProductList.img}\r\n                         style={{\r\n                             float: \"left\",\r\n                             width: \"35%\",\r\n                             marginLeft:\"3%\",\r\n                             marginRight:\"3%\"\r\n                         }}\r\n                    />\r\n                    <Div style={{textAlign:\"left\",\"lineHeight\":\"2.1em\",paddingRight:\"0\"}}>{ListPresets}</Div>\r\n                </Group>\r\n            );\r\n        }else{\r\n            //console.log('oo',Object.keys(this.props.PresetsDopProductList.list).length);\r\n            return('');\r\n        }\r\n    }\r\n\r\n    DopProductListVisual(){\r\n        //console.log('Запускаемся');\r\n        if(Object.keys(this.props.DopProductList).length > 0) {\r\n            const ListDopProduct = Object.keys(this.props.DopProductList).map(\r\n                (datas,number) => {\r\n                    return (\r\n                        <div className=\"BlockOneDopProductCart\" key={datas}>\r\n                            <div className=\"imgDopProductBlock\">\r\n                                <img src={global.URLAPI+this.props.DopProductList[datas].img} />\r\n                            </div>\r\n                            <div className=\"titleDopProductBlock\">\r\n                                {this.props.DopProductList[datas].title}\r\n                            </div>\r\n                            <div className=\"priceDopProductBlock WeightFontBold\">\r\n                                {this.props.DopProductList[datas].price} ₽\r\n                            </div>\r\n                            <div className=\"buttonDopProductBlock\">\r\n                                {this.getButtonDopProduct(\r\n                                    this.props.DopProductList[datas].id,\r\n                                    this.props.setDopProduct.bind(this),\r\n                                    this.getCountDopProductIcon(\r\n                                        this.props.DopProductList[datas].id,\r\n                                        this.props.DopProductUserSet\r\n                                    ),\r\n                                    this.props.DopProductList[datas].price\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }\r\n            );\r\n\r\n            return (\r\n                <Group title=\"Добавить к заказу\">\r\n                    <HorizontalScroll>\r\n                        <div key=\"AllDopProductBlock\"\r\n                             style={{display:\"flex\",paddingBottom:\"20px\"}}\r\n                        >{ListDopProduct}\r\n                            <div style={{display:\"block\",width:\"20px\",height:\"2px\",minWidth:\"2px\"}}></div>\r\n                        </div>\r\n                        <div className=\"clr\"></div>\r\n                    </HorizontalScroll>\r\n\r\n                </Group>\r\n            );\r\n        }else{\r\n            return (\"\");\r\n        }\r\n    }\r\n\r\n    getCountDopProductIcon(Prod,alls){\r\n        //console.log(Prod,alls);\r\n        if(Prod in alls){\r\n            return alls[Prod].count;\r\n        }else{\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    getButtonDopProduct(idProduct,setCart,counts = 0,price){\r\n        const Buttons =\r\n            <div className=\"CounterInCart\" style={{float:\"none\",margin:\"auto\",display:\"block\",width:\"132px\"}}>\r\n                <div className=\"minus\" onClick={() => {\r\n                this.setState({\"LoadDopProduct\":true});\r\n                    setCart(idProduct,'-',price);\r\n                }}>\r\n                    -\r\n                </div>\r\n                {counts}\r\n                <div className=\"pluse\" onClick={() => {\r\n                    this.setState({\"LoadDopProduct\":true});\r\n                    setCart(idProduct,'+',price);}\r\n                }>\r\n                    +\r\n                </div>\r\n            </div>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    setPopout(e){\r\n        if(e === ''){\r\n            // useState(<ScreenSpinner size='large' />);\r\n            this.setState({popout: '<ScreenSpinner size=\\'large\\' />'});\r\n        }else{\r\n            // useState(e);\r\n            this.setState({popout: e});\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        function setPopout(e){\r\n            if(e === ''){\r\n                // useState(<ScreenSpinner size='large' />);\r\n                this.setState({popout: '<ScreenSpinner size=\\'large\\' />'});\r\n            }else{\r\n                // useState(e);\r\n                this.setState({popout: e});\r\n            }\r\n        }\r\n\r\n       function go(e){\r\n         setActivePanel(e);\r\n         // setActivePanel(e.currentTarget.dataset.to);\r\n       };\r\n\r\n       function setActivePanel(e){\r\n           // useState(e);\r\n          // this.setState({activePanel: e});\r\n           this.ActivePanels(e);\r\n       }\r\n\r\n       function  getCartVisual(id, Products,setCart){\r\n           //setPopout(null);\r\n            if(Products.length<=0){\r\n                return(<div style={{\"textAlign\":\"center\",\"padding\":\"5px 10px\",\"marginTop\":\"30px\"}}><h2>Корзина пуста</h2><p>К сожалению, для того чтобы что-то заказать, Вам нужно положить этот товар в корзину!</p></div>);\r\n            }else {\r\n\r\n                var results = Products.map((cartProduct,idProducts) =>\r\n                    <div className=\"ProductInCartBlock\" key={\"blockProducts_\"+idProducts}>\r\n                        <div\r\n\r\n                        className=\"blockProduct\"\r\n                        style={{\r\n                            \"width\": \" 100%\",\r\n                            \"margin\": \"5% 0\",\r\n                            \"padding\": \"0%\",\r\n                            \"float\":\"none\",\r\n                            marginBottom:10\r\n                        }}\r\n                        >\r\n                            <div className=\"imgPrewieProduct\">\r\n                                <img src={cartProduct.img}/>\r\n                            </div>\r\n                            <div className=\"titleProduct\">\r\n                                {/*{escapeHtmlDecode(typeProduct.title)}*/}\r\n                                {cartProduct.title} <span className=\"redTextP\">{cartProduct.type_info}</span>\r\n                            </div>\r\n                            <div className=\"DescrProduct2\">\r\n                                {cartProduct.description}\r\n                            </div>\r\n                            <div style={{clear:\"both\"}}>\r\n                                {/*Товаров: {cartProduct.count} <br/>*/}\r\n                                <span className=\"priceProduct\">Сумма: {getPriceProducts(cartProduct)}</span>\r\n                                <div className=\"priceProductBig\"style={{width:\"100%\",bottom:-8}}><ButtonCart CartProducts={Products} typeProduct2={cartProduct}\r\n                                                                             setCarts={setCart.bind(this)}/></div>\r\n                            </div>\r\n                        </div>\r\n                        <Separator style={{ margin: '20px 0' }} />\r\n                    </div>\r\n                );\r\n\r\n                return(<div className=\"CartBlockProducts\">{results}</div>);\r\n\r\n            }\r\n        }\r\n\r\n        function getDiliveryData(){\r\n            return (<div><h2>Доставка</h2></div>);\r\n        }\r\n\r\n\r\n        function getPriceProducts(cartProduct){\r\n          // console.log(cartProduct);\r\n            if(!(\"price_discount\" in cartProduct) || cartProduct.price_discount === false){\r\n                return (<span className=\"WeightFontBold\">\r\n                {cartProduct.count * cartProduct.price} ₽\r\n                </span>\r\n                );\r\n            }else{\r\n                return(\r\n                    <span className=\"WeightFontBold\">\r\n                    <s className=\"old_price_style\" style={{fontWeight:\"460\",fontSize:\"0.9em\",marginRight:\"5px\",color:\"#c2c2c2\"}}>{cartProduct.count * cartProduct.price_discount.old_price} ₽</s>\r\n                        {cartProduct.count * cartProduct.price_discount.new_price} ₽\r\n                </span>\r\n                );\r\n            }\r\n        }\r\n\r\n\r\n\r\n        function getButtonNavigation(typeNav, action){\r\n\r\n           switch(typeNav){\r\n               case\"1\": var ButtonBlock = <div className=\"ButtonPanelNavigation\"><button className=\"activeButons\" onClick={()=> {action({activePanel: \"home\"});}}>В корзине</button> <button onClick={()=> {action({activePanel: \"dilivery\"});}} data-to=\"dilivery\">Оформление</button> <button onClick={()=> {action({activePanel: \"order\"});}}>Оплата</button></div>;break;\r\n               case\"2\": var ButtonBlock = <div className=\"ButtonPanelNavigation\"><button onClick={()=> {action({activePanel: \"home\"});}}>В корзине</button> <button className=\"activeButons\" onClick={()=> {action({activePanel: \"dilivery\"});}} data-to=\"dilivery\">Оформление</button> <button onClick={()=> {action({activePanel: \"order\"});}}>Оплата</button></div>;break;\r\n               case\"3\": var ButtonBlock = <div className=\"ButtonPanelNavigation\"><button onClick={()=> {action({activePanel: \"home\"});}}>В корзине</button> <button onClick={()=> {action({activePanel: \"dilivery\"});}} data-to=\"dilivery\">Оформление</button> <button className=\"activeButons\" onClick={()=> {action({activePanel: \"order\"});}}>Оплата</button></div>; break;\r\n           }\r\n\r\n           return(\r\n               <HorizontalScroll>\r\n                   {ButtonBlock}\r\n               </HorizontalScroll>\r\n           );\r\n        }\r\n\r\n        function getOneStepCartNone(){\r\n           return(\r\n               <Panel id=\"home\">\r\n\r\n                   <Placeholder\r\n                       icon={<Icon56MarketOutline />}\r\n                       action={false}\r\n\r\n                   >\r\n                       <h2>Корзина пуста</h2>\r\n                       <p>Для совершения заказа, положите в нее хотя-бы 1 товар</p>\r\n                   </Placeholder>\r\n\r\n               </Panel>\r\n           );\r\n        }\r\n\r\n        function getOneStepCart(ProductList,setCart,sumCart,setState,GetPresetsVisual,DopProductList){\r\n           return (\r\n               <Panel id=\"home\" >\r\n               <PanelHeader theme=\"light\"> {getButtonNavigation('1', setState.bind(this))}</PanelHeader>\r\n               <Group title=\"Товары\">\r\n                <Div className=\"CartBlockProductsOneStep\">\r\n                {getCartVisual(\"homes\", ProductList, setCart.bind())}\r\n            <div style={{clear:\"both\"}}></div>\r\n            </Div>\r\n        </Group>\r\n                   {GetPresetsVisual}\r\n                   {DopProductList}\r\n        <Group>\r\n            <Div className=\"SumItogOneSTepCart\">Сумма итого: <span className=\"OrangeColor\">{sumCart} ₽</span></Div>\r\n        </Group>\r\n        <Div><Button size=\"xl\" onClick={()=> {setState({activePanel: \"dilivery\"});}} data-to=\"dilivery\">К оформлению</Button></Div>\r\n               </Panel>\r\n        );\r\n        }\r\n\r\n\r\n\r\n        return(\r\n            <View\r\n                activePanel={this.state.activePanel}\r\n                className={\r\n                    osName === IOS ?\r\n                        \"IOSCLASSCSS\"\r\n                        :\r\n                        \"AndroidCLASSCSS\"\r\n                }\r\n                popout={this.state.popout}\r\n                header={this.props.ProductList.length<=0\r\n                    ?\r\n                    false\r\n                    :\r\n                    true\r\n                }\r\n            >\r\n\r\n\r\n                    {this.props.ProductList.length<=0 ? getOneStepCartNone() :\r\n\r\n                        getOneStepCart(this.props.ProductList, this.props.setCart.bind(),this.props.sumCart, this.setState.bind(this),this.GetPresetsVisual(),this.DopProductListVisual())\r\n                    }\r\n\r\n                <Panel id=\"dilivery\">\r\n                    <PanelHeader theme=\"light\">{getButtonNavigation('2', this.setState.bind(this))}</PanelHeader>\r\n                    <Dilivery\r\n                        userSystemInfo={this.props.userSystemInfo}\r\n                        userInfo={this.props.userInfo}\r\n                        getUserSystemInfo={this.props.getUserSystemInfo.bind()}\r\n\r\n                        addressDefault={this.props.addressDefault}\r\n                        setAddressDefault={this.props.setAddressDefault.bind(this)}\r\n\r\n                        AffiliateDefault={this.props.AffiliateDefault}\r\n                        setAffiliateDefault={this.props.setAffiliateDefault.bind(this)}\r\n\r\n                        checkedTypeDilivery={this.props.checkedTypeDilivery}\r\n                        setTypeDilivery={this.props.setTypeDilivery.bind(this)}\r\n\r\n                        commentary={this.props.commentary}\r\n                        setComment={this.props.setComment.bind(this)}\r\n\r\n                        countPerson={this.props.countPerson}\r\n\r\n                        setStates={this.props.setStates.bind(this)}\r\n                        setDeliveryDataItogs={this.props.setDeliveryDataItogs.bind(this)}\r\n                        getDeliveryDataPriceItogAffiliate={this.props.getDeliveryDataPriceItogAffiliate.bind(this)}\r\n\r\n                        /*Для вычисления суммы бесплатной доставки*/\r\n                        sumCart={this.props.sumCart}\r\n\r\n                        setPopout={this.setState.bind(this)}\r\n                        ProductList={this.props.ProductList}\r\n\r\n                        showModal={this.props.showModal.bind(this)}\r\n                        hideModals={this.props.hideModals.bind(this)}\r\n\r\n                        DataDeliveryInfo={this.props.DataDeliveryInfoPay}\r\n\r\n                    />\r\n                    <Div style={{display: 'flex'}}>\r\n                        <Button size=\"l\" stretched level=\"secondary\"  style={{ marginRight: 8 }} className=\"activeButons\" onClick={()=> {this.setState({activePanel: \"home\"});}}>В корзину</Button>\r\n                        <Button size=\"l\" stretched className=\"activeButons\" onClick={()=> {this.setState({activePanel: \"order\"});}}>К оплате</Button>\r\n                    </Div>\r\n                </Panel>\r\n                <Panel id=\"order\">\r\n                    <PanelHeader theme=\"light\">{getButtonNavigation('3', this.setState.bind(this))}</PanelHeader>\r\n                    <PaymentsPage\r\n                        userSystemInfo={this.props.userSystemInfo}\r\n                        userInfo={this.props.userInfo}\r\n                        SalePoints={this.props.SalePoints}\r\n                        setStates={this.props.setStates.bind(this)}\r\n                        sumCart={this.props.sumCart}\r\n                        checkedTypeDilivery={this.props.checkedTypeDilivery}\r\n                        addressDefault={this.props.addressDefault}\r\n\r\n                        showModal={this.props.showModal.bind(this)}\r\n\r\n\r\n                        DataDeliveryInfo={this.props.DataDeliveryInfoPay}\r\n\r\n                        getReloadInfODeliveryPay={this.props.checkedTypeDilivery ? this.props.getDeliveryDataPriceItogAffiliate.bind(this) : this.props.setDeliveryDataItogs.bind(this)}\r\n\r\n\r\n                        action={this.setState.bind(this)}\r\n\r\n                        setOkNewOrderView={this.props.setOkNewOrderView.bind(this)}\r\n                    />\r\n                    <Div style={{display: 'flex'}}>\r\n                        <Button size=\"l\" level=\"secondary\" stretched style={{ marginRight: 8 }} className=\"activeButons\" onClick={()=> {this.setState({activePanel: \"dilivery\"});}} data-to=\"dilivery\">К оформлению</Button>\r\n\r\n                    </Div>\r\n                </Panel>\r\n            </View>\r\n        );\r\n\r\n    };\r\n\r\n}\r\n\r\nexport default GetCartHome;","import React, {useState} from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport axios from \"axios\";\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\nimport {platform, IOS, Group, Cell, ModalRoot,Radio, ModalPage, ModalPageHeader, HeaderButton, Placeholder, Button, Gallery, Switch} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport Icon28BlockOutline from '@vkontakte/icons/dist/28/block_outline';\r\n\r\n\r\nimport Icon56ErrorOutline from '@vkontakte/icons/dist/56/error_outline';\r\nimport Icon56CheckCircleOutline from '@vkontakte/icons/dist/56/check_circle_outline';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nimport UserOrderList from './panels/ProfileUser/UserOrderList';\r\nimport OrderTypeList from './panels/ProfileUser/OrderTypeList';\r\nimport OrderShowDeail from './panels/ProfileUser/OrderShowDeail';\r\n\r\n\r\nimport Notice from './panels/Notice/index';\r\nimport Icon24Filter from '@vkontakte/icons/dist/24/filter';\r\n\r\nimport ButtonCart from  \"./panels/catalog/ButtonInCart\";\r\n\r\n\r\nimport {Div, Epic, Tabbar, TabbarItem, Panel, PanelHeader, Search} from '@vkontakte/vkui';\r\n//import Icon28Messages from '@vkontakte/icons/dist/28/messages';\r\nimport Icon24Note from '@vkontakte/icons/dist/24/note';\r\nimport Icon28Search from '@vkontakte/icons/dist/28/search';\r\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notifications';\r\nimport Icon28User from '@vkontakte/icons/dist/28/user';\r\nimport Icon28MarketOutline from '@vkontakte/icons/dist/28/market_outline';\r\n// import Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport AppHome from \"./panels/Profile\";\r\nimport CatalogProduct from \"./panels/catalog/CatalogProduct\";\r\nimport SearchResultProductBlock from './panels/SearchResultProductBlock';\r\n\r\nimport './panels/catalog/product.css';\r\nimport GetCartHome from \"./panels/Cart/CartHome\";\r\n\r\nimport ym from 'react-yandex-metrika';\r\n\r\nrequire('./panels/global/index.js');\r\n\r\nclass App extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AudioInfo:{\r\n                ReloadBasket: new Audio(global.URL+'/audio/ReloadBasketInfo2.mp3')\r\n            },\r\n\r\n            countReloadBasket:0,\r\n\r\n            Notice:[],\r\n            CountNotice:0,\r\n            CountNoticeNoView:null,\r\n\r\n            typeOrderGetText:'Текущие заказы',\r\n            typeOrderGet:'now',\r\n            numberOrderShow:0,\r\n            listOrderUser:[],\r\n\r\n            ParamStart:false,\r\n            products:[],\r\n            DopProductList:[],\r\n            DopProductUserSet:{},\r\n            LoadDopProduct:false,\r\n            loadingCatalog:false,\r\n            activeStory: 'catalog',\r\n            activePanelOrders:\"ListTypeOrder\",\r\n            loadingPage: true,\r\n            user:[],\r\n            userSystemInfo:{error:true,dataUser:\"\"},\r\n            cart:[],\r\n            countCartProduct:'',\r\n\r\n            dopPresets: [],\r\n            imgListPresets: false,\r\n\r\n            addressDefault:null,\r\n            AffiliateDefault:0,\r\n            checkedTypeDilivery:0,\r\n            commentary:\"\",\r\n            typePay:1,\r\n            countPerson:1,\r\n            SalePoints:0,\r\n            sumCart:0,\r\n            activeModal:null,\r\n            formNewAddressData:'',\r\n            formEditAddressData:'',\r\n\r\n            listAddressGlobal:[],\r\n            listAffiliateGlobal:[],\r\n\r\n            priceDelivery:0,\r\n            minSumOrder:1,\r\n            minSumFreeDelivery:0,\r\n\r\n            //Если сумма корзины меньше необходимой для заказа\r\n            errorOrderFinal:false,\r\n            //Если сумма корзины меньше бесплатной доставки\r\n            DeliveryPriceItog:false,\r\n\r\n            //Доставка на адрес возможна, сли false, то не возможна\r\n            DeliveryAddressOKCity:true,\r\n\r\n            //Адрес, для отображения в последнем блоке корзины\r\n            addressOrderInfoUser:'',\r\n            newOrderStats:false,\r\n\r\n            StatusLoadSlide:false,\r\n            slideHeaderArray:[],\r\n            slideIndex: 0,\r\n\r\n            StatusNotification:false,\r\n\r\n            CityListBind:[],\r\n\r\n            typeOrderDate:true,\r\n            SelectDatePreorder:null,\r\n            SelectTimePreorder:null,\r\n\r\n            settingsFilterSearch:{\r\n                typeSearch: global.settingsFilterSearch.typeSearch\r\n            },\r\n\r\n            activeHashPageProduct:false,\r\n            activeProductHash:{},\r\n            activeCategoryHash:\"8\",\r\n            activefilter:null\r\n\r\n        };\r\n        this.onStoryChange = this.onStoryChange.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    ClickOneFilter(a){\r\n        this.setState({activefilter:a});\r\n    }\r\n\r\n    ClickOneFilterDeleted(){\r\n        this.setState({activefilter:null});\r\n    }\r\n\r\n\r\n    onChange (e) {\r\n        this.setState({ search: e});\r\n    }\r\n\r\n\r\n\r\n    getCityUser(){\r\n        axios({\r\n            method:'get',\r\n            url:global.URLAPI+'api/getCity&apiKey='+global.ApiKey,\r\n            responseType:'text'\r\n        })\r\n            .then(({data})=>{\r\n                if(\"error\" in data){\r\n\r\n                }else{\r\n                    this.state.ListCitySelect = data.list;\r\n                    global.CityListBind = data.list;\r\n                    console.log('Установили города',global.CityListBind);\r\n                }\r\n            })\r\n            .catch((err) =>{\r\n                console.log('Ошибка получения городов',err);\r\n            });\r\n    }\r\n\r\n    getNotice(idUsers){\r\n        axios({\r\n            method:'get',\r\n            url:global.URLAPI+'api/getNotice&idUserVK='+idUsers+'&apiKey='+global.ApiKey,\r\n            responseType:'text'\r\n        })\r\n            .then(({data})=>{\r\n                if(\"error\" in data){\r\n                    //console.log('Получили уведомления',data);\r\n                    this.state.CountNotice = null;\r\n                    this.state.CountNoticeNoView = null;\r\n                    this.state.Notice = [];\r\n                }else{\r\n                    if((this.state.CountNoticeNoView !== data.CountNoticeNoCheck) || (this.state.CountNotice !== data.CountNotice)) {\r\n                        this.state.Notice = data.result;\r\n                        this.state.CountNotice = data.CountNotice;\r\n                        this.state.CountNoticeNoView = data.CountNoticeNoCheck;\r\n                        console.log('Получили уведомления', this.state.Notice);\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) =>{\r\n                console.log('Ошибка получения уведомлений', err);\r\n            });\r\n    }\r\n\r\n\r\n    setNoticeServer(type,idNotice){\r\n        var idUsers = this.state.user.id;\r\n        axios({\r\n            method:'get',\r\n            url:global.URLAPI+'api/setNoticeStatus&idUserVK='+idUsers+'&idNotice='+idNotice+'&typeSet='+type+'&apiKey='+global.ApiKey,\r\n            responseType:'text'\r\n        })\r\n            .then(({data})=>{\r\n                if(\"error\" in data){\r\n                    console.log('Получили уведомления',data);\r\n                }else{\r\n                    this.getNotice(idUsers);\r\n                    console.log('Получили уведомления',data);\r\n                }\r\n            })\r\n            .catch((err) =>{\r\n                console.log('Ошибка получения уведомлений', err);\r\n            });\r\n    }\r\n\r\n    getInfoSearchStatus(){\r\n        if(global.settingsFilterSearch.typeProduct === false){\r\n            return \"\";\r\n        }else{\r\n            return \"вкл\";\r\n        }\r\n    }\r\n\r\n    parseQueryString = (string) => {\r\n        return string.slice(1).split('&')\r\n            .map((queryParam) => {\r\n                let kvp = queryParam.split('=');\r\n                return {key: kvp[0], value: kvp[1]}\r\n            })\r\n            .reduce((query, kvp) => {\r\n                query[kvp.key] = kvp.value;\r\n                return query\r\n            }, {})\r\n    };\r\n\r\n\r\n    setOkNewOrderView(){\r\n        console.log('Показать окно');\r\n        if(this.state.newOrderStats) {\r\n            this.getCartDB(this.state.user.id,this.state.countReloadBasket);\r\n            this.setState({activeStory: 'newOrderInfo',\r\n                typeOrderDate:true,\r\n                SelectDatePreorder:null,\r\n                SelectTimePreorder:null,\r\n                DopProductUserSet:{}\r\n            });\r\n            this.getUserSystemInfo(this.state.user.id);\r\n        }else{\r\n            console.log('Ну не совсем');\r\n        }\r\n    }\r\n\r\n    setFailNewOrderView(){\r\n        console.log('Показать окно');\r\n        this.getCartDB(this.state.user.id,this.state.countReloadBasket);\r\n        this.setState({activeStory: 'newOrderInfoFail',\r\n            typeOrderDate:true,\r\n            SelectDatePreorder:null,\r\n            SelectTimePreorder:null,\r\n            DopProductUserSet:{}\r\n        });\r\n        this.getUserSystemInfo(this.state.user.id);\r\n    }\r\n\r\n    setShowUserOrderList(){\r\n        this.setState({activeStory: 'UserOrderList'});\r\n    }\r\n\r\n    setTypeOrderList(as,bs){\r\n        this.setState({\r\n            typeOrderGetText:as,\r\n            typeOrderGet:bs,\r\n            activePanelOrders: 'OrdersListUserType'\r\n        });\r\n    }\r\n\r\n\r\n    getSuccesOrderPage(){\r\n        return(\r\n            <Placeholder stretched\r\n                         icon={<Icon56CheckCircleOutline />}\r\n                         action={<Button size=\"l\" level=\"tertiary\" onClick={()=>{this.setState({\r\n                             typeOrderGetText:\"Текущие заказы\",\r\n                             typeOrderGet:\"now\",\r\n                             activePanelOrders: 'OrdersListUserType',\r\n                             activeStory: 'UserOrderList'\r\n                         });}}>Узнать статус заказа</Button>}\r\n\r\n            >\r\n                <h2>Ваш заказ принят</h2>\r\n                <p>Мы приняли Ваш заказ и отправили его в производство. Узнать детали заказа Вы можете по ссылке</p>\r\n            </Placeholder>\r\n        );\r\n    }\r\n\r\n    getFailOrderPage(){\r\n        return(\r\n            <Placeholder stretched\r\n                         icon={<Icon28BlockOutline />}\r\n\r\n            >\r\n                <h2>Оплата не прошла</h2>\r\n                <p>К сожалению, мы не смогли принять Ваш заказ</p>\r\n            </Placeholder>\r\n        );\r\n    }\r\n\r\n    getDeliveryDataPriceItog(){\r\n        if(this.state.minSumOrder < this.state.sumCart){\r\n            this.setState({errorOrderFinal:false});\r\n            if(this.state.minSumFreeDelivery <= this.state.sumCart){\r\n                // ##Доставка бесплатная\r\n                this.setState({DeliveryPriceItog:false});\r\n            }else{\r\n                // Доставка платная\r\n                this.setState({DeliveryPriceItog:true});\r\n            }\r\n        }else{\r\n            this.setState({errorOrderFinal:true});\r\n        }\r\n        //console.log('Выполнили перерасчет ',this.state.minSumFreeDelivery+' < '+this.state.sumCart);\r\n    }\r\n\r\n\r\n    getDeliveryDataPriceItogAffiliate(){\r\n        this.setState({\r\n            priceDelivery: 0,\r\n            minSumOrder: 1,\r\n            minSumFreeDelivery: 0\r\n        });\r\n\r\n        if(this.state.sumCart > 1){\r\n            this.setState({errorOrderFinal:false});\r\n            if(this.state.sumCart > 0){\r\n                // ##Доставка бесплатная\r\n                this.setState({DeliveryPriceItog:false});\r\n            }else{\r\n                // Доставка платная\r\n                this.setState({DeliveryPriceItog:true});\r\n            }\r\n        }else{\r\n            this.setState({errorOrderFinal:true});\r\n        }\r\n        //console.log('Выполнили перерасчет на самовывоз');\r\n    }\r\n\r\n    onStoryChange (e) {\r\n        this.setState({ activeStory: e.currentTarget.dataset.story })\r\n    }\r\n\r\n    setcountCartProduct(e,aa = false){\r\n        if(e == 0){e = '';}\r\n        if(aa === false) {\r\n            this.setState({\r\n                countCartProduct: e\r\n            });\r\n        }\r\n\r\n        var sumCartItog = 0;\r\n        this.state.cart.map((CPr)=>{\r\n                sumCartItog += this.getSumCartOnDiscount(CPr);\r\n            }\r\n        );\r\n\r\n        var SumDopsProduct = 0;\r\n        if(Object.keys(this.state.DopProductUserSet).length > 0){\r\n\r\n            Object.keys(this.state.DopProductUserSet).map((id,n)=>{\r\n                    SumDopsProduct += this.state.DopProductUserSet[id].count*(this.state.DopProductUserSet[id].price*1)\r\n            });\r\n        }\r\n\r\n        //console.log(SumDopsProduct);\r\n        this.setState({sumCart:sumCartItog+SumDopsProduct});\r\n\r\n        document.cookie = \"cart = \"+this.state.cart;\r\n    }\r\n\r\n    getSumCartOnDiscount(typeProduct){\r\n        if(!(\"price_discount\" in typeProduct) || typeProduct.price_discount === false){\r\n            return (typeProduct.price*typeProduct.count);\r\n        }else{\r\n            return(typeProduct.price_discount.new_price*typeProduct.count);\r\n        }\r\n    }\r\n\r\n    setComment(e){\r\n        this.setState({\r\n            commentary:e\r\n        });\r\n    }\r\n\r\n    setUser(e){\r\n        this.setState({user:e});\r\n    }\r\n\r\n    setUserSystem(e){\r\n        this.setState({userSystemInfo:{error:false,dataUser:e}});\r\n    }\r\n\r\n    getTypeSlideGet(){\r\n        switch(this.state.ParamStart.vk_platform){\r\n            case\"desktop_web\": return \"desktop\";break;\r\n            default: return \"mobile\";\r\n        }\r\n    }\r\n\r\n\r\n    getSlideHeaderArray(){\r\n        if(this.state.ParamStart === false){\r\n\r\n        }else {\r\n            //console.log(this.state.ParamStart);\r\n            axios(global.URLAPI+'api/getSlideHeader&apiKey='+global.ApiKey,\r\n                {\r\n                    method: 'POST',\r\n                    headers: {'Content-Type': 'application/x-www-form-urlencoded'},\r\n                    data: {\r\n                        typeSlide: this.getTypeSlideGet(),\r\n                    },\r\n                    responseType: 'text'\r\n                })\r\n                .then(({data}) => {\r\n                    if (\"error\" in data) {\r\n                        this.setSlideArray([], false);\r\n                        // console.log(data.error, '|', data.errorInfo);\r\n                    } else {\r\n                        //console.log(data.listSlide);\r\n                        this.setSlideArray(data.listSlide, true);\r\n                    }\r\n                })\r\n                .catch(({err}) => {\r\n                    console.log(\"ERROR: ---Получение слайдов---  \", err);\r\n                });\r\n        }\r\n    }\r\n\r\n    setSlideArray(ArraySlide,status){\r\n        if(status === true) {\r\n            var ststusSlideData = this.StatusReloadBasketData(JSON.stringify(this.state.slideHeaderArray),JSON.stringify(ArraySlide));\r\n            if(ststusSlideData === true) {\r\n                this.setState({slideHeaderArray: ArraySlide});\r\n                if (this.state.StatusLoadSlide === false) {\r\n                    this.setState({StatusLoadSlide: true});\r\n                }\r\n            }\r\n\r\n        }else{\r\n            if (this.state.StatusLoadSlide === true) {\r\n                this.setState({StatusLoadSlide: false});\r\n            }\r\n        }\r\n    }\r\n\r\n    getSliderGalery(){\r\n        var ArraySlides = Object.keys(this.state.slideHeaderArray);\r\n        var Bullets = \"dark\";\r\n        var AutoPlays = \"7000\";\r\n        var countNumber = ArraySlides.length;\r\n        if(ArraySlides.length <= 1){Bullets = false;AutoPlays = false;}\r\n        if(this.state.StatusLoadSlide === true & ArraySlides.length > 0) {\r\n            var SliderVisual = ArraySlides.map((datas,keys) => {\r\n                //console.log(datas);\r\n                return (<img key={keys} src={this.state.slideHeaderArray[datas].img} style={{maxWidth:\"100%\"}}/>);\r\n            });\r\n\r\n            return (\r\n                <Gallery\r\n                    autoplay={AutoPlays}\r\n                    //slideIndex={this.state.slideIndex}\r\n                    //onEnd={()=>{this.setState({\"slideIndex\":0})}}\r\n                    slideWidth=\"100%\"\r\n                    style={{width:\"100%\",height: \"auto\"}}\r\n                    bullets={Bullets}\r\n                >\r\n                    {SliderVisual}\r\n                </Gallery>\r\n            );\r\n        }else{\r\n            return(\r\n                \"\"\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    reloadSlideHeaderSetTime(){\r\n        this.getSlideHeaderArray();\r\n        setTimeout(this.reloadSlideHeaderSetTime.bind(this),5000);\r\n    }\r\n\r\n\r\n\r\n\r\n    ///////Уведомления PUSH\r\n\r\n    getStatusNotificate(){\r\n        connect.sendPromise(\"VKWebAppCallAPIMethod\", {\"method\": \"apps.isNotificationsAllowed\", \"params\": {\"user_id\": \"328965469\",\"v\":\"5.103\",\"access_token\":\"a07170c1a07170c1a07170c1c4a01c7753aa071a07170c1fdf9a8b9585d7876a020ecbf\"}})\r\n            .then((datas)=> {\r\n                this.setState({StatusNotification: datas.response.is_allowed});\r\n            })\r\n            .catch((err)=>{\r\n                this.setState({StatusNotification: false});\r\n            });\r\n    }\r\n\r\n    setStatusNotification(e){\r\n        this.setState({StatusNotification:e});\r\n    }\r\n\r\n    DeleteNotifi(idNotice){\r\n        // this.Notice[idNotice]\r\n        delete this.state.Notice[idNotice];\r\n        // Object.keys(this.state.Notice).splice(idNotice, 1);\r\n    }\r\n\r\n\r\n    getNotificationPage(){\r\n        return(\r\n            <Notice\r\n                StatusNotification={this.state.StatusNotification}\r\n                PushClick={this.PushClick.bind(this)}\r\n                setState={this.setState.bind(this)}\r\n\r\n                AllNotice={this.state.Notice}\r\n\r\n                setNotice={this.setNoticeServer.bind(this)}\r\n                DeleteNotifi={this.DeleteNotifi.bind(this)}\r\n            />\r\n        );\r\n    }\r\n\r\n    PushClick(){\r\n        if(this.state.StatusNotification === true ){\r\n            this.OffPushNotyfication();\r\n        }else{\r\n            this.OnPushNotyfication();\r\n        }\r\n    }\r\n\r\n    OffPushNotyfication(){\r\n        connect.sendPromise(\"VKWebAppDenyNotifications\", {})\r\n            .then((datas)=>{\r\n                this.setState({StatusNotification: false});\r\n            })\r\n            .catch((err)=> {\r\n                    this.setState({StatusNotification: false});\r\n                }\r\n            );\r\n    }\r\n\r\n    OnPushNotyfication(){\r\n        connect.sendPromise(\"VKWebAppAllowNotifications\", {})\r\n            .then((datas)=>{\r\n                this.getStatusNotificate();\r\n            })\r\n            .catch((err)=> {\r\n                    this.getStatusNotificate();\r\n                }\r\n            );\r\n    }\r\n\r\n    ///////\r\n\r\n    componentDidMount() {\r\n        this.getCityUser();\r\n        this.getStatusNotificate();\r\n        async function fetchData(setUser,getCartDB,getUserSystemInfo,getNotice,countReloadBasket) {\r\n            const user = await connect.sendPromise('VKWebAppGetUserInfo');\r\n            setUser(user);\r\n            //setPopout(null);\r\n            //setModal(MODAL_CARD_MONEY_SEND);\r\n            //console.log('...','Получили данные пользователя',user.id);\r\n            getCartDB(user.id,countReloadBasket);\r\n            getNotice(user.id);\r\n            getUserSystemInfo(user.id);\r\n        }\r\n\r\n        axios({\r\n            method:'get',\r\n            // url:global.URLAPI+'test.json',\r\n            // url:global.URLAPI+'test2.json',\r\n            url:global.URLAPI+'api/Catalog&apiKey='+global.ApiKey+'&idCategoryKeyArray=true&idProductKeyArray=true',\r\n            responseType:'text'\r\n        }).then(({ data }) => {\r\n            //console.log(\"Пришли данные \",data.list);\r\n            this.setState({\r\n                // products: data.list[0].ProductList\r\n                products: data.list,\r\n                Metrika: data.MetrikaAction,\r\n                loadingCatalog:true\r\n            });\r\n            global.Metrika = data.MetrikaAction;\r\n            //console.log(this.state.Metrika);\r\n            console.log(global.Metrika);\r\n        })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ------  \",err);\r\n            });\r\n\r\n\r\n        fetchData(this.setUser.bind(this),this.getCartDB.bind(this),this.getUserSystemInfo.bind(this),this.getNotice.bind(this),this.state.countReloadBasket);\r\n        this.reloadSlideHeaderSetTime();\r\n            setInterval(function() {this.getIntervalCart(1)}.bind(this), 3000);\r\n            setInterval(function() {this.getNotice(this.state.user.id)}.bind(this), 3000);\r\n            this.setHashDataReload(this);\r\n\r\n        const setModalsPay = this.setModal.bind(this,null);\r\n        const setModalsPayError = this.setModal.bind(this,null);\r\n        const setStatesPay = ()=>{this.setState({newOrderStats:true});};\r\n\r\n        const setOkNewOrderViewHandl= this.setOkNewOrderView.bind(this);\r\n        const setFailNewOrderViewHandl= this.setFailNewOrderView.bind(this);\r\n\r\n        window.addEventListener('message',function(e){\r\n            if(typeof(e.data) === 'object'){\r\n                //console.log(e.data);\r\n                if(\"task\" in e.data){\r\n                    var task = e.data['task'];\r\n                    console.log(\"Статус оплаты - \",task);\r\n                    if(task == 'successPaymentOk'){\r\n                        console.log('Оплата произведена успешно!');\r\n                        setModalsPay(1);\r\n                        setStatesPay();\r\n                        setOkNewOrderViewHandl();\r\n                    }\r\n                    if(task == 'failPaymentError'){\r\n                        console.log('Оплата была отменена!');\r\n                        setModalsPayError(2);\r\n                        setFailNewOrderViewHandl();\r\n                    }\r\n                }else{\r\n\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    statusOrderPaymentResult(a = null){\r\n        if(a == '1'){this.setModal(null);}\r\n        if(a == '2'){this.setModal(null);}\r\n    }\r\n\r\n    getIntervalCart(i){\r\n        this.getCartDB(this.state.user.id,this.state.countReloadBasket);\r\n        // console.log('Запустили получение корзины '+i);\r\n        i++;\r\n        // setTimeout(function() {this.getIntervalCart(i)}.bind(this), 3000);\r\n    }\r\n\r\n    StatusReloadBasketData(dataOld,dataNew){\r\n        if(dataOld === dataNew){return false;}else{return true;}\r\n    }\r\n\r\n\r\n    ReloadBasketDataFN(ListProduct){\r\n       // console.log('Обновили корзину');\r\n        this.setState({\r\n            // products: data.list[0].ProductList\r\n            cart: ListProduct,\r\n            loadingPage: false\r\n        });\r\n        this.setCountCartVisal();\r\n    }\r\n\r\n\r\n    ReloadBasketDataDopPresets(ListDopPresets){\r\n        if(ListDopPresets !== false){\r\n            this.setState({\r\n                // products: data.list[0].ProductList\r\n                dopPresets: ListDopPresets.listPresetProduct,\r\n                imgListPresets: ListDopPresets.imgPresetProduct\r\n            });\r\n        }else{\r\n            this.setState({\r\n                // products: data.list[0].ProductList\r\n                dopPresets: [],\r\n                imgListPresets: false\r\n            });\r\n        }\r\n    }\r\n\r\n    getCartDB(id_user,countReloadBasket = 0){\r\n\r\n        if(countReloadBasket>0){\r\n           // console.log('Ну вроде как работает, но нет');\r\n        }else {\r\n            if (this.state.loading === false) {\r\n                this.setState({loading: true});\r\n                var ia = this.state.countReloadBasket+1;\r\n                this.setState({countReloadBasket:ia});\r\n               // console.log('АХАХАХ блять ',ia);\r\n            }\r\n\r\n        }\r\n\r\n        axios({\r\n            method:'get',\r\n            url:global.URLAPI+'api/getBasketVK&apiKey='+global.ApiKey+'&updateBasket=1minute&id_user_vk='+id_user,\r\n            responseType:'text'\r\n        }).then(({ data }) => {\r\n            //console.log(\"Пришли данные \",data);\r\n            if(\"error\" in data){\r\n                data.listProduct = [];\r\n                console.log(data.error,'|',data.errorInfo);\r\n            }\r\n\r\n            if(data.listProduct === null){\r\n                data.listProduct = [];\r\n            }\r\n\r\n            var ListOld = JSON.stringify(this.state.cart);\r\n            var ListNew = JSON.stringify(data.listProduct);\r\n            var ListPresetsOld = JSON.stringify(this.state.dopPresets);\r\n\r\n            var ListPresetsNew = JSON.stringify(data.DopPresetsData);\r\n            if(ListPresetsNew == 'false'){\r\n                ListPresetsNew = '[]';\r\n            }else{\r\n                ListPresetsNew = JSON.stringify(data.DopPresetsData.listPresetProduct)\r\n            }\r\n\r\n            var statusBasket = this.StatusReloadBasketData(ListOld,ListNew);\r\n            var statusPresets = this.StatusReloadBasketData(ListPresetsOld,ListPresetsNew);\r\n\r\n            if(statusBasket === true) {\r\n                this.ReloadBasketDataFN(data.listProduct);\r\n                this.PlayInfoAudio('ReloadBasket');\r\n            }\r\n\r\n            if(\"DopProductList\" in data) {\r\n                var ListDopOld = JSON.stringify(this.state.DopProductList);\r\n                var ListDopNew = JSON.stringify(data.DopProductList);\r\n\r\n                var statusDopProduct = this.StatusReloadBasketData(ListDopOld,ListDopNew);\r\n\r\n                if(statusDopProduct === true) {\r\n                    this.setState({\"DopProductList\": data.DopProductList});\r\n                    //console.log(ListDopOld,ListDopNew,'|||||',data.DopProductList);\r\n                }else{\r\n                   // console.log(ListDopOld,ListDopNew,'|||||',data.DopProductList);\r\n                }\r\n            }\r\n\r\n            if(statusPresets === true || ListPresetsNew ===false) {\r\n                this.ReloadBasketDataDopPresets(data.DopPresetsData);\r\n                //console.log('АХАХАХ блять ',ListPresetsNew,' -|-|-|- ',ListPresetsOld);\r\n            }\r\n\r\n\r\n\r\n        })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ------  \",err);\r\n            });\r\n\r\n    }\r\n\r\n    PlayInfoAudio(a){\r\n            if (this.audio) {\r\n                // this.audio.pause();\r\n                this.audio.stop();\r\n            }\r\n            switch (a) {\r\n                case\"ReloadBasket\":\r\n                   // this.audio = this.state.AudioInfo.ReloadBasket;\r\n                    this.state.AudioInfo.ReloadBasket.play();\r\n                    //alert('Запуск звука');\r\n                    break;\r\n            }\r\n    }\r\n\r\n\r\n    getUserSystemInfo(id_user){\r\n        this.setState({loading: true});\r\n\r\n        axios({\r\n            method:'get',\r\n            url:global.URLAPI+'api/Users&apiKey='+global.ApiKey+'&updateUserSystemInfo=one&idUserVK='+id_user,\r\n            responseType:'text'\r\n        }).then(({ data }) => {\r\n            //console.log(\"Пришли данные \",data);\r\n            if(\"error\" in data){\r\n\r\n                console.log(data.error,'|',data.errorInfo);\r\n            }else{\r\n                this.setUserSystem(data.list[0]);\r\n            }\r\n\r\n            this.setState({\r\n                loadingPage: false\r\n            });\r\n            //console.log(\"userSystemInfo\",this.state.userSystemInfo);\r\n        })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ------  \",err);\r\n            });\r\n        //setUserSystem(e);\r\n    }\r\n\r\n\r\n    setCartServer(id_user,JsonBasket){\r\n        //console.log(JsonBasket,'___А_А_АА_А_А_А_');\r\n        axios(global.URLAPI+'api/setBasketVK&apiKey='+global.ApiKey+'&id_user_vk='+id_user,\r\n            {\r\n            method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n            data: {\r\n                basketJson: JsonBasket,\r\n            },\r\n            responseType:'text'\r\n        })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }\r\n            })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ---Отправка корзины---  \",err);\r\n            });\r\n    }\r\n\r\n    setCart(e,tE = '+'){\r\n        //console.log('Товар в корзине, вот этот ',e);\r\n        //this.setState({cart:e});\r\n        const counts = this.state.cart.length;\r\n        if(tE == '+'){\r\n            //Добавляем товар\r\n            if(counts<=0) {\r\n               // console.log('Добавляем Новый товар в корзину');\r\n                this.state.cart.push(e);\r\n                const countPlus = counts;\r\n                this.state.cart[countPlus].count = 1;\r\n                this.setcountCartProduct(1);\r\n            }else{\r\n               // console.log('В принципи верно, но цикл не тот', counts);\r\n                var noAdd = true;\r\n\r\n                this.state.cart.map((cartProducts,key)=>\r\n                    {if(cartProducts.id_Product === e.id_Product && cartProducts.type_product===e.type_product){\r\n                       // console.log('Добавляем еще такой же товар');\r\n                        this.state.cart[key].count = this.state.cart[key].count + 1;\r\n                        setcountCartProductVar = setcountCartProductVar+this.state.cart[key].count;\r\n                        noAdd =false;\r\n                    }\r\n                    }\r\n                );\r\n\r\n                if(noAdd === true){\r\n                   // console.log('Добавляем новый товар, так как тагого же нет');\r\n                    this.state.cart.push(e);\r\n                    const countPlus = counts;\r\n                    this.state.cart[countPlus].count = 1;\r\n                    setcountCartProductVar++;\r\n                }\r\n\r\n            }\r\n        }else{\r\n            //Удаляем товар\r\n            if(counts<=0) {\r\n\r\n            }else{\r\n                var noAdd = true;\r\n                this.state.cart.map((cartProducts,key)=>\r\n                    {if(cartProducts.id_Product === e.id_Product && cartProducts.type_product===e.type_product){\r\n                       // console.log('Удаляем товар 1 товар с этим id и типом');\r\n                        if( this.state.cart[key].count<=1){\r\n                            // delete this.state.cart[key];\r\n                            this.state.cart.splice(key, 1);\r\n                        }else{\r\n                            this.state.cart[key].count = this.state.cart[key].count - 1;\r\n                            setcountCartProductVar = setcountCartProductVar+this.state.cart[key].count;\r\n                            noAdd =false;\r\n                        }\r\n                    }\r\n                    }\r\n                );\r\n            }\r\n\r\n        }\r\n\r\n        var setcountCartProductVar = 0;\r\n        this.state.cart.map((CPr)=>\r\n        {setcountCartProductVar = setcountCartProductVar+CPr.count}\r\n        );\r\n        this.setcountCartProduct(setcountCartProductVar);\r\n        var setDataServer = btoa(encodeURI(JSON.stringify(this.state.cart)));\r\n       // console.log('Вот это отправляем на сервер',setDataServer);\r\n        this.setCartServer(this.state.user.id,setDataServer);\r\n    }\r\n\r\n    setDopProduct(id,type = '+',price){\r\n        const counts = this.state.DopProductUserSet.length;\r\n        switch(type){\r\n            case \"+\":\r\n                if(counts<=0){\r\n                    this.state.DopProductUserSet[id] = {\"count\":1,\"price\":price};\r\n                }else{\r\n                    if(id in this.state.DopProductUserSet) {\r\n                        this.state.DopProductUserSet[id].count++;\r\n                    }else{\r\n                        this.state.DopProductUserSet[id] = {\"count\":1,\"price\":price};\r\n                    }\r\n                }\r\n                break;\r\n            case \"-\":\r\n                if(counts<=0){\r\n\r\n                }else{\r\n                    if(id in this.state.DopProductUserSet) {\r\n                        if(this.state.DopProductUserSet[id].count == 1){\r\n                            //this.state.DopProductUserSet.splice(id, 1);\r\n                            delete this.state.DopProductUserSet[id];\r\n                        }else{\r\n                            this.state.DopProductUserSet[id].count--;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n        console.log(this.state.DopProductUserSet);\r\n\r\n        this.setcountCartProduct(0,true);\r\n\r\n        if(!(id in this.state.DopProductUserSet) || this.state.DopProductUserSet[id].count <=0){\r\n            this.setState({\"LoadDopProduct\":false});\r\n            return 0;\r\n        }else{\r\n            this.setState({\"LoadDopProduct\":false});\r\n            return this.state.DopProductUserSet[id].count;\r\n        }\r\n\r\n\r\n        //this.setState({\"DopProductUserSet\":a});\r\n    }\r\n\r\n\r\n    setCountCartVisal(){\r\n       // this.getCartDB(this.state.user.id);\r\n        var setcountCartProductVar = 0;\r\n        this.state.cart.map((CPr)=>\r\n            {setcountCartProductVar = setcountCartProductVar+CPr.count;\r\n            }\r\n        );\r\n        this.setcountCartProduct(setcountCartProductVar);\r\n    }\r\n\r\n    setTypeDilivery(e){\r\n        this.setState({checkedTypeDilivery:e});\r\n       // console.log('По дефолту адрес теперь ',e);\r\n    }\r\n\r\n    setTypeOrderDate(e){\r\n        this.setState({typeOrderDate:e});\r\n       // console.log('По дефолту адрес теперь ',e);\r\n    }\r\n\r\n    setAddressDefault(e){\r\n        if(e === 'del'){\r\n            e = 0;\r\n        }\r\n        this.setState({addressDefault:e});\r\n        //console.log('По дефолту адрес теперь ',e);\r\n        //Обновляем условия доставки на 3  шаг корзины\r\n    }\r\n\r\n    setAffiliateDefault(e){\r\n        this.state.AffiliateDefault = e;\r\n       // console.log('По дефолту адрес теперь ',e);\r\n    }\r\n\r\n    setModal(e){\r\n        this.setState({activeModal:e});\r\n    }\r\n\r\n    setOrderShowNumber(a){\r\n        this.setState({numberOrderShow:a,\r\n            activePanelOrders:'OrderShowDetails'});\r\n    }\r\n\r\n    listOrderUserSet(a){\r\n       // console.log(a,'Ну блин');\r\n        this.setState({listOrderUser:a});\r\n    }\r\n\r\n    setHashDataReload(){\r\n\r\n      const HashParam =  this.parseQueryString(window.location.hash);\r\n      // const ParthParam =  this.parseQueryString(window.location.url);\r\n      //   const queryParams = this.parseQueryString(window.location.search);\r\n       // const queryParams =  new URLSearchParams(window.location.search);\r\n      //   const queryParams = this.getURLParams();\r\n      //   console.log('Парметры приняты - - - - -',HashParam);\r\n\r\n\r\n\r\n        var height=window.screen.height;\r\n        var newHeight = height*0.7;\r\n        //console.log('Какого хрена',newHeight);\r\n\r\n        connect.send(\"VKWebAppResizeWindow\", {\"height\": newHeight});\r\n\r\n        if('noticePageReload' in HashParam){\r\n            this.state.loadingCatalog = false;\r\n            this.setHashNew('notifications');\r\n        }\r\n\r\n\r\n        if('getPageProduct' in HashParam){\r\n            // this.state.loadingCatalog = false;\r\n            // this.setHashNew('notifications');\r\n            console.log('Показать модалку товара - ',HashParam.idProduct, 'из категории - ',HashParam.idCategory);\r\n\r\n            this.state.loadingCatalog === true ?\r\n               this.setPageModalProductHash(this.state.products,HashParam.idCategory,HashParam.idProduct)\r\n                :\r\n                setTimeout(()=>{ this.setHashDataReload(this)},300)\r\n\r\n            //setTimeout(()=>{ console.log(this.state.products,' товары тут');},2000)\r\n\r\n        }\r\n    }\r\n\r\n\r\n    setPageModalProductHash(ProductArray,idCategory,idProduct){\r\n\r\n        console.log(this.state.products, ' товары тут');\r\n\r\n        if(idCategory in ProductArray){\r\n            if(\"ProductList\" in ProductArray[idCategory]){\r\n                if(idProduct in ProductArray[idCategory].ProductList) {\r\n                    if(\"0\" in ProductArray[idCategory].ProductList[idProduct]){\r\n                        console.log(ProductArray[idCategory].ProductList[idProduct][0]);\r\n                        this.setState({\r\n                            activeHashPageProduct:true,\r\n                            activeProductHash:ProductArray[idCategory].ProductList[idProduct],\r\n                            activeCategoryHash:idCategory}\r\n                            )\r\n                    }else{\r\n                        console.log('Тип 0 не найден');\r\n                    }\r\n                }else{\r\n                    console.log('IdProduct не найден');\r\n                }\r\n            }else{\r\n                console.log('ProductList не найден');\r\n            }\r\n        }else{\r\n            console.log('idCategory не найден');\r\n        }\r\n\r\n        console.log('Все шаги пройдены - но какая то лажа');\r\n    }\r\n\r\n    setHashNew(a){\r\n        setTimeout(function() {\r\n            //console.log('Устанавливаем нулевой ХЕШ');\r\n            this.setState({activeStory:a});\r\n            connect.send(\"VKWebAppSetLocation\", {\"location\": \"notice\"});\r\n            this.setState({loadingCatalog:true});\r\n        }.bind(this), 1000);\r\n    }\r\n\r\n    getFilterBlockModal(def){\r\n\r\n        var defs = {0:\"\",1:\"\"};\r\n        defs[def] = \"defaultChecked\";\r\n\r\n        return(\r\n            <div>\r\n                <Group\r\n                    title=\"Искать\"\r\n                >\r\n                    <Cell>\r\n                        <Radio\r\n                            defaultChecked={global.settingsFilterSearch.typeSearch === 0 ? true : false}\r\n                            name=\"typeSearch\" value=\"0\"\r\n                            description=\"Поиск по наименованию товара\"\r\n                            onClick={() => {\r\n                                var some = {...this.state.settingsFilterSearch}\r\n                                some.typeSearch = 0;\r\n                                this.setState({some})\r\n                                global.settingsFilterSearch.typeSearch = 0;\r\n                                // console.log(some);\r\n                                //console.log(global.settingsFilterSearch);\r\n                            }}\r\n                        >По названиям</Radio>\r\n                        <Radio\r\n                            defaultChecked={global.settingsFilterSearch.typeSearch === 1 ? true : false}\r\n                            name=\"typeSearch\"\r\n                            value=\"1\"\r\n                            description=\"Поиск по описанию товара\"\r\n                                onClick={() => {\r\n                                    var some = {...this.state.settingsFilterSearch}\r\n                                    some.typeSearch = 1;\r\n                                    global.settingsFilterSearch.typeSearch = 1;\r\n                                    this.setState({some})\r\n                                    //console.log(global.settingsFilterSearch);\r\n                                }}\r\n                        >По составу</Radio>\r\n                    </Cell>\r\n                </Group>\r\n                <Group\r\n                    title=\"Тип товара\"\r\n                >\r\n                    <Cell>\r\n                        <Radio\r\n                            defaultChecked={global.settingsFilterSearch.typeProduct === false ? true : false}\r\n                            name=\"typeSearchProduct\" value=\"0\"\r\n                            onClick={() => {\r\n                                global.settingsFilterSearch.typeProduct = false;\r\n                                // console.log(some);\r\n                                //console.log(global.settingsFilterSearch);\r\n                            }}\r\n                        >Все</Radio>\r\n                        <Radio\r\n                            defaultChecked={global.settingsFilterSearch.typeProduct === \"new\" ? true : false}\r\n                            name=\"typeSearchProduct\"\r\n                            value=\"new\"\r\n                                onClick={() => {\r\n                                    global.settingsFilterSearch.typeProduct = \"new\";\r\n                                    //console.log(global.settingsFilterSearch);\r\n                                }}\r\n                        >Новинки</Radio>\r\n                        <Radio\r\n                            defaultChecked={global.settingsFilterSearch.typeProduct === \"hot\" ? true : false}\r\n                            name=\"typeSearchProduct\"\r\n                            value=\"hot\"\r\n                                onClick={() => {\r\n                                    global.settingsFilterSearch.typeProduct = \"hot\";\r\n                                    //console.log(global.settingsFilterSearch);\r\n                                }}\r\n                        >Горячие</Radio>\r\n                        <Radio\r\n                            defaultChecked={global.settingsFilterSearch.typeProduct === \"burn\" ? true : false}\r\n                            name=\"typeSearchProduct\"\r\n                            value=\"burn\"\r\n                                onClick={() => {\r\n                                    global.settingsFilterSearch.typeProduct = \"burn\";\r\n                                    //console.log(global.settingsFilterSearch);\r\n                                }}\r\n                        >Острые</Radio>\r\n                        <Radio\r\n                            defaultChecked={global.settingsFilterSearch.typeProduct === \"vegan\" ? true : false}\r\n                            name=\"typeSearchProduct\"\r\n                            value=\"vegan\"\r\n                                onClick={() => {\r\n                                    global.settingsFilterSearch.typeProduct = \"vegan\";\r\n                                    //console.log(global.settingsFilterSearch);\r\n                                }}\r\n                        >Вегетарианские</Radio>\r\n                        <Radio\r\n                            defaultChecked={global.settingsFilterSearch.typeProduct === \"sweet\" ? true : false}\r\n                            name=\"typeSearchProduct\"\r\n                            value=\"sweet\"\r\n                                onClick={() => {\r\n                                    global.settingsFilterSearch.typeProduct = \"sweet\";\r\n                                    //console.log(global.settingsFilterSearch);\r\n                                }}\r\n                        >Десерт</Radio>\r\n                    </Cell>\r\n                </Group>\r\n                <Group>\r\n                <Cell></Cell>\r\n                </Group>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    stateRadio(a){\r\n        var some = {...this.state.settingsFilterSearch}\r\n        some.typeSearch = a;\r\n        this.setState({some});\r\n    }\r\n\r\n    render () {\r\n        const queryParams = this.parseQueryString(window.location.search);\r\n        const hashParams = this.parseQueryString(window.location.hash);\r\n\r\n        //this.setHashDataReload(hashParams);\r\n        //console.log(hashParams);\r\n        // console.log(noticePage);\r\n\r\n        if(this.state.ParamStart === false) {\r\n            //console.log(\"State = false, но \", queryParams);\r\n        }\r\n\r\n        if(this.state.ParamStart === false) {\r\n            this.state.ParamStart = queryParams;\r\n        }\r\n\r\n        // this.setState({\"ParamStart\":this.parseQueryString(window.location.search)});\r\n        // console.log('Параметры запуска ',this.state.ParamStart,' А URL такой ',window.location.search);\r\n\r\n        const modal = (\r\n            <ModalRoot activeModal={this.state.activeModal}>\r\n                <ModalPage\r\n                    id=\"MODAL_NEWADDRESS\"\r\n                    onClose={() => this.setModal(null)}\r\n                    header={\r\n                        <ModalPageHeader\r\n                            right={<HeaderButton onClick={()=> {this.setModal(null)}}>Отмена</HeaderButton>}\r\n                        >\r\n                            Добавить адрес\r\n                        </ModalPageHeader>\r\n                    }\r\n                    //icon={<Icon56MoneyTransferOutline />}\r\n                    title=\"Добавление адреса\"\r\n                    dynamicContentHeight=\"true\"\r\n                    caption=\"\"\r\n                    actions={[{\r\n                        title: '',\r\n                        type: 'primary',\r\n                        action: () => {\r\n                            this.setModal(null);\r\n                        }\r\n                    }]}\r\n                >\r\n                    {this.state.formNewAddressData}\r\n                </ModalPage>\r\n\r\n                <ModalPage\r\n                    id=\"MODAL_EditADDRESS\"\r\n                    onClose={() => this.setModal(null)}\r\n                    header={\r\n                        <ModalPageHeader\r\n                            right={<HeaderButton onClick={()=> {this.setModal(null)}}>Отмена</HeaderButton>}\r\n                        >\r\n                            Редактировать адрес\r\n                        </ModalPageHeader>\r\n                    }\r\n                    //icon={<Icon56MoneyTransferOutline />}\r\n                    title=\"Редактирование адреса\"\r\n                    dynamicContentHeight=\"true\"\r\n                    caption=\"\"\r\n                    actions={[{\r\n                        title: '',\r\n                        type: 'primary',\r\n                        action: () => {\r\n                            this.setModal(null);\r\n                        }\r\n                    }]}\r\n                >\r\n                    {this.state.formEditAddressData}\r\n                </ModalPage>\r\n\r\n                <ModalPage\r\n                    id=\"MODAL_Filter_Catalog\"\r\n                    onClose={() => this.setModal(null)}\r\n                    header={\r\n                        <ModalPageHeader\r\n                            right={<HeaderButton onClick={()=> {this.setModal(null)}}>Готово</HeaderButton>}\r\n                        >\r\n                            Фильтры\r\n                        </ModalPageHeader>\r\n                    }\r\n                    //icon={<Icon56MoneyTransferOutline />}\r\n                    title=\"Фильтры\"\r\n                    dynamicContentHeight=\"true\"\r\n                    caption=\"\"\r\n                    actions={[{\r\n                        title: '',\r\n                        type: 'primary',\r\n                        action: () => {\r\n                            this.setModal(null);\r\n                        }\r\n                    }]}\r\n                >\r\n                    {this.getFilterBlockModal(this.state.settingsFilterSearch.typeSearch)}\r\n                </ModalPage>\r\n                <ModalPage\r\n                    id=\"MODAL_PAYMENT_FORM\"\r\n                    onClose={() => this.setModal(null)}\r\n                    settlingHeight={100}\r\n                    actions={[{\r\n                        title: '',\r\n                        type: 'primary',\r\n                        action: () => {\r\n                            this.setModal(null);\r\n                        }\r\n                    }]}\r\n                >\r\n                    <div style={{\"position\":\"fixed\",\"width\":\"100%\",\"height\":\"100%\",\"top\":\"0\",\"left\":0}}>\r\n                        <iframe name=\"framePayments\" id=\"framePayments\" style={{width:\"100%\",height:\"100%\",background:\"#ffffff\"}}\r\n                                src={global.URLAPI+\"/api/testPageSBRPay&apiKey=\"+global.ApiKey+\"\"}\r\n                        />\r\n                    </div>\r\n                    <div style={{height:\"800px\"}}></div>\r\n\r\n                </ModalPage>\r\n            </ModalRoot>\r\n        );\r\n\r\n        const osname = platform();\r\n\r\n        if(this.state.CountNoticeNoView === 0 || this.state.CountNoticeNoView === null){\r\n            var countNoticeView = '';\r\n        }else{\r\n            var countNoticeView = this.state.CountNoticeNoView;\r\n        }\r\n\r\n        return (\r\n            <Epic activeStory={this.state.activeStory} tabbar={\r\n                <Tabbar>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'catalog'}\r\n                        data-story=\"catalog\"\r\n                        text=\"Каталог\"\r\n                    ><Icon24Note /></TabbarItem>\r\n                    {/*<TabbarItem*/}\r\n                    {/*    onClick={this.onStoryChange}*/}\r\n                    {/*    selected={this.state.activeStory === 'discover'}*/}\r\n                    {/*    label={this.getInfoSearchStatus()}*/}\r\n                    {/*    data-story=\"discover\"*/}\r\n                    {/*    text=\"Поиск\"*/}\r\n                    {/*><Icon28Search /></TabbarItem>*/}\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'cart'}\r\n                        data-story=\"cart\"\r\n                        label={this.state.countCartProduct}\r\n                        text=\"Корзина\"\r\n                    ><Icon28MarketOutline /></TabbarItem>\r\n                    {/*<TabbarItem*/}\r\n                    {/*    onClick={this.onStoryChange}*/}\r\n                    {/*    selected={this.state.activeStory === 'notifications'}*/}\r\n                    {/*    data-story=\"notifications\"*/}\r\n                    {/*    label={countNoticeView}*/}\r\n                    {/*    text=\"Уведомления\"*/}\r\n                    {/*><Icon28Notifications /></TabbarItem>*/}\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'user'}\r\n                        data-story=\"user\"\r\n                        text=\"Профиль\"\r\n                    ><Icon28User /></TabbarItem>\r\n                </Tabbar>\r\n            }>\r\n                <View id=\"newOrderInfo\" activePanel=\"newOrders\" header={false}>\r\n                    <Panel id=\"newOrders\">\r\n                        {/*<PanelHeader noShadow={true}>Каталог товаров</PanelHeader>*/}\r\n                        {this.getSuccesOrderPage()}\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"newOrderInfoFail\" activePanel=\"newOrdersFail\" header={false}>\r\n                    <Panel id=\"newOrdersFail\">\r\n                        {/*<PanelHeader noShadow={true}>Каталог товаров</PanelHeader>*/}\r\n                        {this.getFailOrderPage()}\r\n                    </Panel>\r\n                </View>\r\n\r\n\r\n                <View id=\"UserOrderList\" activePanel={this.state.activePanelOrders} >\r\n                    <Panel id=\"ListTypeOrder\">\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                        >\r\n                            Мои заказы\r\n                        </PanelHeader>\r\n                        <UserOrderList\r\n                            userData={this.state.user}\r\n                            setTypeOrderList={this.setTypeOrderList.bind(this)}\r\n                        />\r\n                    </Panel>\r\n                    <Panel id=\"OrdersListUserType\">\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                            left={<HeaderButton onClick={() => this.setState({activePanelOrders: 'ListTypeOrder'})}>{osname === IOS ?\r\n                                <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                            addon={<HeaderButton onClick={() => this.setState({activePanelOrders: 'ListTypeOrder'})}>Назад</HeaderButton>}\r\n                        >\r\n                            {this.state.typeOrderGetText}\r\n                        </PanelHeader>\r\n                        <OrderTypeList\r\n                            userData={this.state.user}\r\n                            typeOrderGet={this.state.typeOrderGet}\r\n                            setOrderShowNumber={this.setOrderShowNumber.bind(this)}\r\n                            listOrderUserSet={this.listOrderUserSet.bind(this)}\r\n                        />\r\n                    </Panel>\r\n                    <Panel id=\"OrderShowDetails\">\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                            left={<HeaderButton onClick={() => this.setState({activePanelOrders: 'OrdersListUserType'})}>{osname === IOS ?\r\n                                <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                            addon={<HeaderButton onClick={() => this.setState({activePanelOrders: 'OrdersListUserType'})}>Назад</HeaderButton>}\r\n                        >\r\n                            {\"Заказ №\"+ this.state.numberOrderShow}\r\n                        </PanelHeader>\r\n                        <OrderShowDeail\r\n                            idOrderDetail={this.state.numberOrderShow}\r\n                            OrderDatas={this.state.listOrderUser[this.state.numberOrderShow]}\r\n                            userData={this.state.user}\r\n                        />\r\n                    </Panel>\r\n                </View>\r\n\r\n\r\n\r\n                <View id=\"catalog\" activePanel=\"catalog\" header={false} modal={modal}>\r\n                    <Panel id=\"catalog\">\r\n                        {/*<PanelHeader noShadow={true}>Каталог товаров</PanelHeader>*/}\r\n                        {\r\n                            this.state.loadingCatalog\r\n                                ?\r\n                                <CatalogProduct\r\n                                    setCart={this.setCart.bind(this)}\r\n                                    CartProducts={this.state.cart}\r\n                                    ProductsLists={this.state.products}\r\n                                    sliderHeader={this.getSliderGalery.bind(this)}\r\n                                    queryParams={queryParams}\r\n\r\n                                    showModal={this.setModal.bind(this)}\r\n                                    hideModals={this.setModal.bind(this,null)}\r\n\r\n                                    activeProductHash={this.state.activeProductHash}\r\n                                    activeCategoryHash={this.state.activeCategoryHash}\r\n                                    activeHashPageProduct={this.state.activeHashPageProduct}\r\n\r\n                                    activefilter={this.state.activefilter}\r\n                                    ClickOneFilter={this.ClickOneFilter.bind(this)}\r\n                                    ClickOneFilterDeleted={this.ClickOneFilterDeleted.bind(this)}\r\n\r\n                                />\r\n                                :\r\n                                <ScreenSpinner />\r\n                        }\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"discover\" activePanel=\"discover\" modal={modal}>\r\n                    <Panel id=\"discover\">\r\n                        <PanelHeader>Поиск товаров</PanelHeader>\r\n                        <Cell\r\n                            className=\"BoxCellSearch\"\r\n                            asideContent={\r\n                                <Icon24Filter\r\n                                    onClick={\r\n                                        ()=>{this.setModal('MODAL_Filter_Catalog');}\r\n                                    }\r\n                                />}\r\n                        >\r\n                            <Search\r\n                                value={this.state.search}\r\n                                onChange={this.onChange}\r\n                                after={null}\r\n                            />\r\n                        </Cell>\r\n                        <SearchResultProductBlock\r\n                            setCart={this.setCart.bind(this)}\r\n                            arrayProduct={this.state.products}\r\n                            varSearch={this.state.search}\r\n                            showModal={this.setModal.bind(this)}\r\n                            hideModals={this.setModal.bind(this,null)}\r\n                            CartProducts={this.state.cart}\r\n                        />\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"cart\" activePanel=\"cart\" modal={modal}>\r\n                    <Panel id=\"cart\" style={{\"paddingBottom\":\"40px\"}}>\r\n                        <PanelHeader theme=\"light\"\r\n                                     noShadow={false}\r\n                        >\r\n                            Корзина\r\n                        </PanelHeader>\r\n                        <div key=\"Cart_List\" style={{\"paddingBottom\":\"40px\"}}>\r\n                            {/*this.getCartVisual(this.state.cart,this.setCart.bind(this))*/}\r\n                            <GetCartHome\r\n                                ProductList={this.state.cart}\r\n                                DopProductList={this.state.DopProductList}\r\n                                DopProductUserSet={this.state.DopProductUserSet}\r\n                                setDopProduct={this.setDopProduct.bind(this)}\r\n                                LoadDopProduct={this.state.LoadDopProduct}\r\n                                PresetsDopProductList={\r\n                                    {\r\n                                    \"list\": this.state.dopPresets,\r\n                                    \"img\": this.state.imgListPresets\r\n                                    }\r\n                                }\r\n\r\n                                setCart={this.setCart.bind(this)}\r\n                                userSystemInfo={this.state.userSystemInfo}\r\n                                userInfo={this.state.user}\r\n                                getUserSystemInfo={this.getUserSystemInfo.bind(this)}\r\n\r\n                                addressDefault={this.state.addressDefault}\r\n                                setAddressDefault={this.setAddressDefault.bind(this)}\r\n\r\n                                AffiliateDefault={this.state.AffiliateDefault}\r\n                                setAffiliateDefault={this.setAffiliateDefault.bind(this)}\r\n\r\n                                checkedTypeDilivery={this.state.checkedTypeDilivery}\r\n                                setTypeDilivery={this.setTypeDilivery.bind(this)}\r\n\r\n                                commentary={this.state.commentary}\r\n                                setComment={this.setComment.bind(this)}\r\n\r\n                                countPerson={this.state.countPerson}\r\n\r\n                                SalePoints={this.state.SalePoints}\r\n\r\n                                setStates={this.setState.bind(this)}\r\n                                setDeliveryDataItogs={this.getDeliveryDataPriceItog.bind(this)}\r\n                                getDeliveryDataPriceItogAffiliate={this.getDeliveryDataPriceItogAffiliate.bind(this)}\r\n\r\n                                sumCart={this.state.sumCart}\r\n\r\n                                showModal={this.setModal.bind(this)}\r\n                                hideModals={this.setModal.bind(this,null)}\r\n\r\n                                DataDeliveryInfoPay={\r\n                                    {\r\n                                        typeOrderDate:this.state.typeOrderDate,\r\n                                        setTypeOrderDate:this.setTypeOrderDate.bind(this),\r\n\r\n                                        SelectDatePreorder:this.state.SelectDatePreorder,\r\n                                        SelectTimePreorder:this.state.SelectTimePreorder,\r\n\r\n                                        priceDelivery:this.state.priceDelivery,\r\n                                        minSumOrder:this.state.minSumOrder,\r\n                                        minSumFreeDelivery:this.state.minSumFreeDelivery,\r\n\r\n                                        //Если сумма корзины меньше необходимой для заказа\r\n                                        errorOrderFinal:this.state.errorOrderFinal,\r\n                                        //Если сумма корзины меньше бесплатной доставки\r\n                                        DeliveryPriceItog:this.state.DeliveryPriceItog,\r\n\r\n                                        //Доставка на адрес возможна, сли false, то не возможна\r\n                                        DeliveryAddressOKCity:this.state.DeliveryAddressOKCity,\r\n\r\n                                        addressOrderInfoUser:this.state.addressOrderInfoUser,\r\n\r\n                                        checkedTypeDilivery:this.state.checkedTypeDilivery,\r\n                                        AffiliateDefault:this.state.AffiliateDefault,\r\n                                        addressDefault:this.state.addressDefault,\r\n\r\n                                        listAddressGlobal:this.state.listAddressGlobal,\r\n                                        listAffiliateGlobal: this.state.listAffiliateGlobal,\r\n\r\n                                        comments:this.state.commentary,\r\n                                        typePay:this.state.typePay,\r\n                                        countPerson:this.state.countPerson,\r\n                                        cart:this.state.cart,\r\n                                        DopProductUserSet:this.state.DopProductUserSet\r\n\r\n                                    }\r\n                                }\r\n\r\n                                setOkNewOrderView={this.setOkNewOrderView.bind(this)}\r\n\r\n                            />\r\n\r\n                        <div style={{\"clear\":\"both\"}}></div>\r\n                        </div>\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"notifications\" activePanel=\"notifications\">\r\n                    <Panel id=\"notifications\">\r\n                        <PanelHeader>Уведомления</PanelHeader>\r\n                        {this.getNotificationPage()}\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"user\" activePanel=\"user\">\r\n                    <Panel id=\"user\">\r\n                        <PanelHeader>Профиль</PanelHeader>\r\n                        <AppHome\r\n                            id=\"home\"\r\n                            go=\"persik\"\r\n                            dataUsers={this.state.userSystemInfo}\r\n                            setStatusNotification={this.setStatusNotification.bind(this)}\r\n                            setShowUserOrderList={this.setShowUserOrderList.bind(this)}\r\n                        />\r\n                    </Panel>\r\n                </View>\r\n            </Epic>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\n\r\nimport connect from '@vkontakte/vk-connect';\r\nimport axios from \"axios\";\r\n\r\nimport {Group, Cell, CellButton} from '@vkontakte/vkui';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport Icon24DoNotDisturb from '@vkontakte/icons/dist/24/do_not_disturb';\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\r\nimport Icon24DoneOutline from '@vkontakte/icons/dist/24/done_outline';\r\nimport Icon24Cancel from '@vkontakte/icons/dist/24/cancel';\r\n\r\n\r\nclass UserOrderList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loadOrders:false\r\n        }\r\n    }\r\n\r\n\r\n\r\n    getAllGroups(){\r\n        return(\r\n            <Group>\r\n                <CellButton\r\n                before={<Icon24Recent /> }\r\n                onClick={this.props.setTypeOrderList.bind(this,\"Текущие заказы\",\"now\")}\r\n                >\r\n                    <span style={{color:\"#262522\"}}>Текущие заказы</span>\r\n                </CellButton>\r\n                <CellButton\r\n                before={<Icon24DoneOutline />}\r\n                onClick={this.props.setTypeOrderList.bind(this,\"Завершенные заказы\",\"old\")}\r\n                >\r\n                    <span style={{color:\"#262522\"}}>Завершенные заказы</span>\r\n                </CellButton>\r\n                <CellButton\r\n                before={<Icon24Cancel />}\r\n                onClick={this.props.setTypeOrderList.bind(this,\"Отмененные заказы\",\"cancel\")}\r\n                >\r\n                    <span style={{color:\"#262522\"}}>Отмененные заказы</span>\r\n                </CellButton>\r\n            </Group>\r\n        );\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            this.state.loadOrders\r\n                ?\r\n                <ScreenSpinner />\r\n                :\r\n                this.getAllGroups()\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default UserOrderList;","import React from 'react';\r\n\r\nimport axios from \"axios\";\r\n\r\nimport {Group, Cell} from '@vkontakte/vkui';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\r\nimport Icon24DoneOutline from '@vkontakte/icons/dist/24/done_outline';\r\n\r\n\r\nclass OrderTypeList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listOrderUser:[],\r\n            loadOrders:true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getOrderUserSystem();\r\n    }\r\n\r\n    getOrderUserSystem(){\r\n        this.setState({loadOrders:true});\r\n        axios({\r\n            method:'get',\r\n            url:global.URLAPI+'api/getOrdersUserVK&apiKey='+global.ApiKey+'&idUserVK='+this.props.userData.id,\r\n            responseType:'text'\r\n        })\r\n            .then(({data})=>{\r\n                if(\"error\" in data){\r\n                    this.setState({countOrder:0});\r\n                }else{\r\n                    //console.log('Данные по заказам пользователя',data);\r\n                    this.setState({listOrderUser:data.list});\r\n                    this.props.listOrderUserSet(data.list);\r\n                }\r\n                this.setState({loadOrders:false});\r\n            })\r\n            .catch((err) =>{\r\n                console.log('Ошибка получения заказов',err);\r\n            });\r\n    }\r\n\r\n\r\n    ReverceList(Pr){\r\n        var res = Object.keys(Pr).reduceRight(function (arr, last, index, coll) {\r\n            // console.log(last, index);\r\n            return (arr = arr.concat(last))\r\n        }, []);\r\n        return res;\r\n    }\r\n\r\n    getOrderType(type = 'now'){\r\n        var typeNumber = 0;\r\n        var iconsD ='';\r\n        switch(type){\r\n            case 'now': typeNumber = 0; iconsD = <Icon24Recent /> ;break;\r\n            case 'cancel': typeNumber = 3;  iconsD = <Icon24Dismiss /> ;break;\r\n            case 'old': typeNumber = 1;  iconsD = <Icon24DoneOutline /> ;break;\r\n            default:typeNumber =0;\r\n        }\r\n\r\n        //console.log(this.state.listOrderUser)\r\n\r\n        var countOrders = 0;\r\n\r\n        const ListOrder = this.ReverceList(this.state.listOrderUser).map((dataOrder,keyOrder)=>{\r\n            //console.log('Заказ '+dataOrder,'');\r\n            var CurrentOrder = this.state.listOrderUser[dataOrder];\r\n\r\n            var statusY = false;\r\n\r\n\r\n            if(typeNumber === 1){\r\n                if(CurrentOrder.status_order == typeNumber || CurrentOrder.status_order == 6){\r\n                    statusY = true;\r\n                }else{\r\n                    statusY = false;\r\n                }\r\n            }else{\r\n                if(CurrentOrder.status_order == typeNumber){\r\n                    statusY = true;\r\n                }else{\r\n                    statusY = false;\r\n                }\r\n            }\r\n\r\n\r\n            if(CurrentOrder.delete_order == '1'){\r\n                statusY = false;\r\n            }\r\n\r\n            if(statusY === true){\r\n                countOrders++;\r\n                //console.log('Заказ '+dataOrder,' Отмененн');\r\n                var summaOrders = <span>Сумма: <b>{CurrentOrder.sum_order}₽</b></span>;\r\n\r\n                return (\r\n                    <Cell key={\"Orders_\"+dataOrder}\r\n                          before={iconsD}\r\n                          description={<span>{CurrentOrder.date} <i>{CurrentOrder.time}</i> | {summaOrders}</span>}\r\n                          onClick={this.props.setOrderShowNumber.bind(this,CurrentOrder.id_order)}\r\n                    >\r\n                        <b>Заказ №{CurrentOrder.id_order}</b> <span style={{fontSize:\"0.8em\",marginLeft:\"2%\",color:\"#6a97fb\"}}> Подробнее...</span>\r\n                    </Cell>\r\n                );\r\n            }else{\r\n                //console.log('Заказ '+dataOrder,'');\r\n            }\r\n\r\n        });\r\n\r\n        if(countOrders <=0){\r\n            return (\r\n                <Cell key={\"Orders_None\"}\r\n                >\r\n                    Заказы отсутсвуют\r\n                </Cell>\r\n            );\r\n        }\r\n\r\n        return ListOrder;\r\n\r\n    }\r\n\r\n\r\n    getNowOrder(){\r\n        return(\r\n            <Group key=\"ListOrderNow\"\r\n                   title=\"Текущие заказы\"\r\n            >\r\n                {this.getOrderType('now')}\r\n            </Group>\r\n        );\r\n    }\r\n\r\n\r\n    getOldOrder(){\r\n        return(\r\n            <Group key=\"ListOrderOld\"\r\n                   title=\"Завершенные заказы\"\r\n            >\r\n                {this.getOrderType('old')}\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getCancelledOrder(){\r\n        return(\r\n            <Group key=\"ListOrderCancel\"\r\n                   title=\"Отмененные заказы\"\r\n            >\r\n                {this.getOrderType('cancel')}\r\n            </Group>\r\n        );\r\n    }\r\n\r\n\r\n    getOneTypeOrders(){\r\n        var results = '';\r\n        switch(this.props.typeOrderGet){\r\n            case\"now\": results = this.getNowOrder();break;\r\n            case\"old\": results = this.getOldOrder();break;\r\n            case\"cancel\": results = this.getCancelledOrder();break;\r\n        }\r\n\r\n        return results;\r\n    }\r\n\r\n    getAllGroups(){\r\n        return(\r\n            this.getOneTypeOrders()\r\n        );\r\n    }\r\n\r\n\r\n    render(){\r\n        return(<div> {\r\n                this.state.loadOrders\r\n                    ?\r\n                    <ScreenSpinner/>\r\n                    :\r\n                    this.getAllGroups()\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default OrderTypeList;","import React from 'react';\r\n\r\nimport connect from '@vkontakte/vk-connect';\r\nimport axios from \"axios\";\r\n\r\nimport {Group, Cell, Div, Counter, Button} from '@vkontakte/vkui';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\n\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\r\nimport Icon24DoneOutline from '@vkontakte/icons/dist/24/done_outline';\r\nimport Icon24Error from '@vkontakte/icons/dist/24/error';\r\nimport Icon24MoneyTransfer from '@vkontakte/icons/dist/24/money_transfer';\r\nimport Icon24MoneyCircle from '@vkontakte/icons/dist/24/money_circle';\r\nimport Icon24Coins from '@vkontakte/icons/dist/24/coins';\r\nimport Icon24User from '@vkontakte/icons/dist/24/user';\r\n\r\nclass OrderShowDetail extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        //console.log('Заказ показать этот: ',this.props.OrderDatas);\r\n    }\r\n\r\n    getStatusOrderText(a){\r\n        var ststusReturn = \"Выполнен\";\r\n\r\n        switch(a){\r\n            case\"0\": ststusReturn = \"Принят\"; break;\r\n            case\"1\": ststusReturn = \"Выполнен\"; break;\r\n            case\"3\": ststusReturn = \"Отменен\"; break;\r\n            case\"6\": ststusReturn = \"Принят\"; break;\r\n        }\r\n        return ststusReturn;\r\n    }\r\n\r\n    getStatusOrderReal(statusOld,statusReal){\r\n        if(statusReal === null){\r\n           // console.log('Нет данных');\r\n            return statusOld;\r\n        }else{\r\n            return statusReal.status;\r\n        }\r\n    }\r\n\r\n    getStatusIconText(a){\r\n        var iconsD = '';\r\n\r\n        var ststusReturns = <Icon24Error />;\r\n\r\n        switch(a){\r\n            case\"0\": iconsD = <Icon24Recent /> ;break;\r\n            case\"1\": iconsD = <Icon24DoneOutline /> ;break;\r\n            case\"3\": iconsD = <Icon24Dismiss /> ;break;\r\n            case\"6\": iconsD = <Icon24Recent /> ;break;\r\n        }\r\n        return ststusReturns;\r\n    }\r\n\r\n\r\n    getInfoPreorderBlock(Order){\r\n        if(Order.pre_order.status === 'none'){\r\n            return \"\";\r\n        }else{\r\n            return (\r\n                <Group title=\"Совершен по предзаказу на дату\">\r\n                    <Cell\r\n                        before={<Icon24Recent />}\r\n                    >\r\n                        {Order.pre_order.date_pre_order}\r\n                    </Cell>\r\n                </Group>\r\n            );\r\n        }\r\n    }\r\n\r\n    escapeHtml(text,type) {\r\n        switch(type){\r\n            case\"decode\":\r\n                var map = {\r\n                    '&amp;': '&',\r\n                    '&lt;': '<',\r\n                    '&gt;': '>',\r\n                    '&quot;': '\"',\r\n                    \"&#039;\": \"'\"\r\n                };\r\n                break;\r\n            case\"encode\":\r\n                var map = {\r\n                    '&': '&amp;',\r\n                    '<': '&lt;',\r\n                    '>': '&gt;',\r\n                    '\"': '&quot;',\r\n                    \"'\": '&#039;'\r\n                };\r\n                break;\r\n        }\r\n\r\n        return text.replace(/[&<>\"']/g, function(m) { return map[m]; });\r\n    }\r\n\r\n    escapeHtmlDecode(text) {\r\n        return text\r\n            .replace(/&amp;/g, \"&\")\r\n            .replace(/&lt;/g, \"<\")\r\n            .replace(/&gt;/g, \">\")\r\n            .replace(/&quot;/g, \"\\\"\")\r\n            .replace(/&#039;/g, \"'\");\r\n    }\r\n\r\n\r\n    getOrderComposition(Order){\r\n\r\n        if(Order == '' || Order === null){\r\n            return (<Group title=\"Состав заказа\">\r\n                <Div>Данные отсутствуют</Div></Group>);\r\n        }\r\n\r\n        const ListProduct = Order.map((data,key)=>{\r\n\r\n            if(data.sale_price != data.product_price){\r\n                var Price_sales = <span><s>{data.product_price} ₽</s> <b>{data.sale_price} ₽</b> </span>;\r\n            }else{\r\n                var Price_sales = <span><b>{data.sale_price} ₽</b> </span>;\r\n            }\r\n\r\n            if(data.discount_amount != '0'){\r\n                var Discount = <b>Скидка: {data.discount_amount} ₽</b>\r\n            }else{\r\n                var Discount = '';\r\n            }\r\n\r\n            return (\r\n                <Cell key={\"Product_cell_\"+key}\r\n                    description={<span key={\"prices_product_\"+key}>{Price_sales} - {data.count} шт. <i>{Discount}</i></span>}\r\n                    indicator={<Counter>&nbsp;{data.cost} ₽&nbsp;</Counter>}\r\n                >\r\n                    <span key={\"product_title_\"+key}>{this.escapeHtmlDecode(data.product_title)}</span>\r\n                </Cell>\r\n            );\r\n        });\r\n        return (<Group title=\"Состав заказа\">\r\n            {ListProduct}</Group>);\r\n    }\r\n\r\n\r\n    getOrderDopComposition(Order){\r\n\r\n        if(Order == '' || Order === null){\r\n            return (\"\");\r\n        }\r\n\r\n        const ListProduct = Order.map((data,key)=>{\r\n\r\n            var Price_sales = <span><b>{data.price_product} ₽</b> </span>;\r\n\r\n\r\n            return (\r\n                <Cell key={\"Dop_Product_cell_\"+key}\r\n                    description={<span key={\"prices_dop_product_\"+key}>{Price_sales} - {data.count} шт.</span>}\r\n                    indicator={<Counter>&nbsp;{data.cost} ₽&nbsp;</Counter>}\r\n                >\r\n                    <span key={\"dop_product_title_\"+key}>{this.escapeHtmlDecode(data.title_product)}</span>\r\n                </Cell>\r\n            );\r\n        });\r\n\r\n        if(ListProduct == '' || ListProduct=== null){\r\n            return (\"\");\r\n        }\r\n\r\n        return (<Group title=\"Приправы и соусы\">\r\n            {ListProduct}\r\n        </Group>);\r\n    }\r\n\r\n\r\n    getOrderGiftComposition(Order){\r\n\r\n        if(Order == '' || Order === null){\r\n            return (\"\");\r\n        }\r\n\r\n        const ListProduct = Order.map((data,key)=>{\r\n\r\n            var Price_sales = <span><b>{data.price_product} ₽</b> </span>;\r\n\r\n\r\n            return (\r\n                <Cell key={\"Gift_Product_cell_\"+key}\r\n                    description={<span key={\"prices_Gift_product_\"+key}>{Price_sales} - {data.count} шт.</span>}\r\n                    indicator={<Counter>&nbsp;{data.cost} ₽&nbsp;</Counter>}\r\n                >\r\n                    <span key={\"Gift_product_title_\"+key}>{this.escapeHtmlDecode(data.title_gift_product)}</span>\r\n                </Cell>\r\n            );\r\n        });\r\n\r\n        if(ListProduct == '' || ListProduct=== null){\r\n            return (\"\");\r\n        }\r\n\r\n        return (<Group title=\"Подарки\">\r\n            {ListProduct}\r\n        </Group>);\r\n    }\r\n\r\n\r\n    getOrderDeliveryInfo(Order){\r\n\r\n        if(Order.dilivery.dilivery_type == 'Доставка'){\r\n            var Address = Order.dilivery.dilivery_adres;\r\n            var PriceDeli = Order.dilivery.dilivery_price;\r\n            var TextDel = 'Доставка';\r\n        }else{\r\n            var Address = Order.affiliate.affiliate_info;\r\n            var PriceDeli = \" 0 \";\r\n            var TextDel = 'Самовывоз';\r\n        }\r\n\r\n            return (<Group title=\"Получение заказа\">\r\n                <Cell key={\"Deliv_cell\"}\r\n                    description={Address}\r\n                    indicator={<Counter>&nbsp; {PriceDeli} ₽ &nbsp;</Counter>}\r\n                >\r\n                    {TextDel}\r\n                </Cell>\r\n                </Group>\r\n            )\r\n    }\r\n\r\n    getInfoPromokod(Order){\r\n        if(Order.promo_status == 'active'){\r\n            var PromoInfo = <Group title=\"Промокод\">\r\n                <Div><b>{Order.promo_code}</b> {Order.promo_info.title}</Div>\r\n            </Group>\r\n        }else{\r\n            var PromoInfo = '';\r\n        }\r\n\r\n        return PromoInfo;\r\n    }\r\n\r\n    getInfoPointsOrder(Order){\r\n            var Points = <div>\r\n                <Cell before={<Icon24Coins/>} >Списано бонусов: {Order.point_out}</Cell>\r\n                <Cell  before={<Icon24Coins/>} >Начислено бонусов: {Order.point_in}</Cell>\r\n            </div>;\r\n\r\n        return Points;\r\n    }\r\n\r\n    getComment(Order) {\r\n\r\n        if(Order == '' || Order === null){\r\n            return (\"\");\r\n            Order = 'Отсутствует';\r\n        }\r\n\r\n        return (\r\n            <Group title=\"Комментарий\">\r\n                <Div>{Order}</Div>\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getRepeatOrder(OrderId){\r\n        //console.log(OrderId);\r\n        return (\r\n            <Group style={{textAlign:\"center\",padding:\"10px 0\"}}>\r\n                <Button onClick={()=>{\r\n                    this.setRepeatOrder(OrderId.id_order)\r\n                }}>Повторить</Button>\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    setRepeatOrder(OrderId){\r\n        //console.log('Повторяем заказ');\r\n        axios({\r\n            method:'get',\r\n            url:global.URLAPI+'api/setRepeatOrder&apiKey='+global.ApiKey+'&idUserVK='+this.props.userData.id+'&OrderIdRepeat='+OrderId,\r\n            responseType:'text'\r\n        })\r\n            .then(({data})=>{\r\n                if(\"error\" in data){\r\n                    console.log(data);\r\n                    alert(data.errorInfo);\r\n                }else{\r\n                   console.log('Повторение заказа инфа: ',data);\r\n                }\r\n            })\r\n            .catch((err) =>{\r\n                console.log('Ошибка повторения заказа',err);\r\n            });\r\n    }\r\n\r\n    getPerson(Order) {\r\n\r\n        if(Order == '' || Order === null){\r\n            Order = '1';\r\n        }\r\n\r\n        // return (\r\n        //     <Group title=\"Кол-во приборов\">\r\n        //         <Div>{Order}</Div>\r\n        //     </Group>\r\n        // );\r\n\r\n        return (\r\n            <Cell\r\n                before={<Icon24User />}\r\n            >\r\n                Приборы: {Order}\r\n            </Cell>\r\n        );\r\n    }\r\n\r\n\r\n    render(){\r\n        const Order = this.props.OrderDatas;\r\n        const StatusIcon = this.getStatusIconText(Order.status_order);\r\n        const detailText = <span>Детали заказа</span>;\r\n\r\n        return(\r\n            <div key=\"InfoOrderBlock\" >\r\n                <Group\r\n                    title={detailText}\r\n                >\r\n                    <Cell\r\n                        before={StatusIcon}\r\n                    >\r\n                        {this.getStatusOrderReal(this.getStatusOrderText(Order.status_order),Order.status_order_real)}\r\n                    </Cell>\r\n                    <Cell\r\n                        before={<Icon24Recent />}\r\n                    >\r\n                        {Order.date} {Order.time}\r\n                    </Cell>\r\n                    <Cell\r\n                        before={<Icon24MoneyTransfer />}\r\n                    >\r\n                        {Order.payment.type_pay}\r\n                    </Cell>\r\n                    <Cell\r\n                        before={<Icon24MoneyCircle />}\r\n                    >\r\n                        {Order.sum_order} ₽\r\n                    </Cell>\r\n                    {this.getPerson(Order.person)}\r\n                    {this.getInfoPointsOrder(Order)}\r\n                </Group>\r\n                    {this.getInfoPreorderBlock(Order)}\r\n                {this.getInfoPromokod(Order.promo)}\r\n                {this.getOrderComposition(Order.productList)}\r\n                {this.getOrderDopComposition(Order.dopProductList)}\r\n                {this.getOrderGiftComposition(Order.giftProductList)}\r\n                {this.getOrderDeliveryInfo(Order)}\r\n                {this.getComment(Order.Comment)}\r\n                {this.getRepeatOrder(Order)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default OrderShowDetail;","import React, { useState, useEffect } from 'react';\r\nimport {Div, View, Panel, Separator, PanelHeader, Group, Button, CellButton, HeaderButton, platform, IOS, Tooltip, HorizontalScroll, Placeholder, Cell } from '@vkontakte/vkui';\r\n\r\nimport Icon56MarketOutline from '@vkontakte/icons/dist/56/market_outline';\r\n\r\nimport Icon56NotificationOutline from '@vkontakte/icons/dist/56/notification_outline';\r\nimport Icon24Notification from '@vkontakte/icons/dist/24/notification';\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\r\n\r\nconst osName = platform();\r\n\r\n\r\nclass Notice extends React.Component {\r\n\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            activePanel:\"home\",\r\n            popout:null\r\n            //popout:\"<ScreenSpinner size='large' />\",\r\n        }\r\n    }\r\n\r\n    ActivePanels(e){\r\n        this.setState({activePanel: e});\r\n    }\r\n\r\n    NoteNotice(){\r\n        return(\r\n            <Placeholder stretched\r\n                         icon={<Icon56NotificationOutline />}\r\n                         action={<Button size=\"l\" level=\"tertiary\" onClick={()=>{this.props.setState({activeStory: 'catalog'});}}>В каталог</Button>}\r\n\r\n            >\r\n                <h2>Уведомлений нет</h2>\r\n                <p>Как только для Вас появятся уведомления, они отобразятся здесь!</p>\r\n            </Placeholder>\r\n        );\r\n    }\r\n\r\n    ReverceList(Pr){\r\n        var res = Object.keys(Pr).reduceRight(function (arr, last, index, coll) {\r\n            // console.log(last, index);\r\n            return (arr = arr.concat(last))\r\n        }, []);\r\n        return res;\r\n    }\r\n\r\n\r\n    setNoticeData(type,idNotice,statusView){\r\n        if(type == 1) {\r\n            this.props.setNotice(type, idNotice);\r\n            this.props.DeleteNotifi(idNotice);\r\n        }else{\r\n            if(statusView === false){\r\n                this.props.setNotice(type, idNotice);\r\n            }\r\n        }\r\n    }\r\n\r\n    getImagesNotice(img){\r\n        if(img === null || img == ''){return (\"\");}else{\r\n            return(\r\n                <img src={img} style={{width:\"100%\"}}/>\r\n            );\r\n        }\r\n    }\r\n\r\n    getNotice(){\r\n\r\n        const NoticeList = this.ReverceList(this.props.AllNotice).map((Data,id)=>{\r\n\r\n            if(this.props.AllNotice[Data]['notice_view'] == '0'){\r\n                var color = '#e63743';\r\n                var statusView = false;\r\n            }else{\r\n                var color = '';\r\n                var statusView = true;\r\n            }\r\n\r\n            return(<Group\r\n                key={\"Notice_C_\"+Data}\r\n            >\r\n                <Cell\r\n                    before={<Icon24Notification\r\n                        style={{color:color}}\r\n                        onClick={() => {this.setNoticeData(0,this.props.AllNotice[Data]['id_notification'],statusView)}}\r\n                    />}\r\n                    asideContent={<Icon24Dismiss\r\n                        onClick={() => {this.setNoticeData(1,this.props.AllNotice[Data]['id_notification'],statusView)}}\r\n                    />}\r\n\r\n                >\r\n                    {this.props.AllNotice[Data]['title']}\r\n                </Cell>\r\n                {this.getImagesNotice(this.props.AllNotice[Data]['img'])}\r\n                    <Div key={\"Notice_\"+Data} dangerouslySetInnerHTML={{__html: this.props.AllNotice[Data]['text'].replace(/\\n/g, \"<br />\")}}>\r\n                    </Div>\r\n            </Group>);\r\n        });\r\n\r\n        return(\r\n            NoticeList\r\n        );\r\n    }\r\n\r\n    getNotificationPage(){\r\n        if(this.props.StatusNotification === true){\r\n            if(Object.keys(this.props.AllNotice).length<=0){\r\n                return(this.NoteNotice());\r\n            }else{\r\n                return(this.getNotice());\r\n            }\r\n        }else{\r\n            return(\r\n                <Placeholder stretched\r\n                             icon={<Icon56NotificationOutline />}\r\n                             action={<Button size=\"l\" level=\"tertiary\"\r\n                                             onClick={()=>{this.props.PushClick()}}\r\n                             >Включить уведомления</Button>}\r\n                             style={{textAlign:\"center\"}}\r\n                >\r\n                    Для просмотра уведомлений, их нужно включить\r\n                </Placeholder>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            this.getNotificationPage()\r\n        );\r\n\r\n    };\r\n\r\n}\r\n\r\nexport default Notice;","import React from 'react';\r\n\r\nimport connect from '@vkontakte/vk-connect';\r\n\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport {List,Cell, Switch} from '@vkontakte/vkui/';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\nimport Icon24Notification from '@vkontakte/icons/dist/24/notification';\r\nimport Icon24Note from '@vkontakte/icons/dist/24/note';\r\n\r\nimport Icon24Coins from '@vkontakte/icons/dist/24/coins';\r\nimport Icon24CommentOutline from '@vkontakte/icons/dist/24/comment_outline';\r\n\r\n\r\nclass UserInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            StatusNotification:false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getStatusNotificate();\r\n    }\r\n\r\n    getPanelProfil(){\r\n        return(\r\n            <div id={this.props.id} style={{maxWidth:'1200px',margin:'0 auto'}} them='white'>\r\n                {this.props.fetchedUser &&\r\n                    <Group title=\"Ваши данные\r\n    \">\r\n                        <Cell\r\n                            before={this.props.fetchedUser.photo_200 ? <Avatar src={this.props.fetchedUser.photo_200}/> : null}\r\n                            description={this.props.fetchedUser.city && this.props.fetchedUser.city.title ? this.props.fetchedUser.city.title : ''}\r\n                        >\r\n                            {`${this.props.fetchedUser.first_name} ${this.props.fetchedUser.last_name}`}\r\n                        </Cell>\r\n                    </Group>\r\n                }\r\n\r\n                <Group>\r\n                    <Cell\r\n                        before={<Icon24Note />}\r\n                        description=\"Список совершенных Вами онлайн заказов\"\r\n                        onClick={this.props.setShowUserOrderList.bind()}\r\n                    >\r\n                        Мои заказы\r\n                    </Cell>\r\n                </Group>\r\n\r\n\r\n                {/*{this.props.dataUsers.dataUsers.error ?*/}\r\n                {/*    this.getInfoUserNoneAuth()*/}\r\n                {/*    :*/}\r\n\r\n                {/*    <Group title=\"Активность\">*/}\r\n                {/*        <List>*/}\r\n                {/*            <Cell*/}\r\n                {/*                before={<Icon24Coins />}*/}\r\n                {/*            >*/}\r\n                {/*                Бонус Таймы: {this.props.dataUsers.dataUsers.dataUser.point}*/}\r\n                {/*            </Cell>*/}\r\n                {/*        </List>*/}\r\n                {/*    </Group>*/}\r\n                {/*}*/}\r\n\r\n                <Group>\r\n                        <Cell\r\n                            before={<Icon24Notification />}\r\n                            asideContent={<Switch\r\n                                checked={this.state.StatusNotification}\r\n                                onChange={()=>{this.PushClick()}} />}\r\n                            description=\"Изменение статуса заказа, акциии...\"\r\n                        >\r\n                            PUSH - уведомления\r\n                        </Cell>\r\n\r\n                </Group>\r\n\r\n                <Group>\r\n                        <Cell\r\n                            before={<Icon24CommentOutline />}\r\n                        >\r\n                            <a style={{color:\"#252622\",textDecoration:\"none\"}}\r\n                               href={global.linkSocSeti} target=\"_blank\">\r\n                                Связаться с нами\r\n                            </a>\r\n                        </Cell>\r\n\r\n                </Group>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getInfoUserNoneAuth() {\r\n        return (\r\n            <Div>\r\n                Авторизуйтесь по номеру телефона, чтобы просматривать данные!\r\n            </Div>\r\n        );\r\n    }\r\n\r\n    getStatusNotificate(){\r\n        connect.sendPromise(\"VKWebAppCallAPIMethod\", {\"method\": \"apps.isNotificationsAllowed\", \"params\": {\"user_id\": \"328965469\",\"v\":\"5.103\",\"access_token\":\"a07170c1a07170c1a07170c1c4a01c7753aa071a07170c1fdf9a8b9585d7876a020ecbf\"}})\r\n            .then((datas)=> {\r\n                this.setState({StatusNotification: datas.response.is_allowed});\r\n                this.props.setStatusNotification(datas.response.is_allowed);\r\n            })\r\n            .catch((err)=>{\r\n                this.setState({StatusNotification: false});\r\n                this.props.setStatusNotification(false);\r\n            });\r\n    }\r\n\r\n    //defaultChecked\r\n\r\n    PushClick(){\r\n        if(this.state.StatusNotification === true ){\r\n            this.OffPushNotyfication();\r\n        }else{\r\n            this.OnPushNotyfication();\r\n        }\r\n    }\r\n\r\n    OffPushNotyfication(){\r\n        connect.sendPromise(\"VKWebAppDenyNotifications\", {})\r\n            .then((datas)=>{\r\n                this.setState({StatusNotification: false});\r\n                this.props.setStatusNotification(false);\r\n            })\r\n            .catch((err)=> {\r\n                this.setState({StatusNotification: false});\r\n                this.props.setStatusNotification(false);\r\n                }\r\n            );\r\n    }\r\n\r\n    OnPushNotyfication(){\r\n        connect.sendPromise(\"VKWebAppAllowNotifications\", {})\r\n            .then((datas)=>{\r\n                this.getStatusNotificate();\r\n            })\r\n            .catch((err)=> {\r\n                    this.getStatusNotificate();\r\n                }\r\n            );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.getPanelProfil()\r\n        );\r\n    }\r\n}\r\nexport default UserInfo;\r\n","import React, {useEffect} from 'react';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\n//import ModalProduct from './panels/ModalProduct';\r\nimport CategoryList from './CategoryList';\r\nimport GetCartHome from \"../Cart/CartHome\";\r\n//import App from \"./Profile\";\r\n\r\nconst CatalogProduct = (OPT) => {\r\n    // const [activePanel, setActivePanel] = useState('home');\r\n    // const [fetchedUser, setUser] = useState(null);\r\n    // const [popout, setPopout] = useState(<ScreenSpinner size='large'/>);\r\n\r\n    useEffect(() => {\r\n        // connect.subscribe(({ detail: { type, data }}) => {\r\n        //     if (type === 'VKWebAppUpdateConfig') {\r\n        //         const schemeAttribute = document.createAttribute('scheme');\r\n        //         schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\r\n        //         document.body.attributes.setNamedItem(schemeAttribute);\r\n        //     }\r\n        // });\r\n        async function fetchData() {\r\n            // const user = await connect.sendPromise('VKWebAppGetUserInfo');\r\n            // setUser(user);\r\n            // setPopout(null);\r\n           // console.log(OPT.ProductsLists,'--- ВОТ');\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n            <CategoryList\r\n                setCart={OPT.setCart.bind(this)}\r\n                CartProducts={OPT.CartProducts}\r\n                ProductsLists={OPT.ProductsLists}\r\n                sliderHeader={OPT.sliderHeader.bind(this)}\r\n                queryParams={OPT.queryParams}\r\n\r\n                showModal={OPT.showModal.bind(this)}\r\n                hideModals={OPT.hideModals.bind(this,null)}\r\n\r\n                activeProductHash={OPT.activeProductHash}\r\n                activeCategoryHash={OPT.activeCategoryHash}\r\n                activeHashPageProduct={OPT.activeHashPageProduct}\r\n\r\n                activefilter={OPT.activefilter}\r\n                ClickOneFilter={OPT.ClickOneFilter.bind(this)}\r\n                ClickOneFilterDeleted={OPT.ClickOneFilterDeleted.bind(this)}\r\n\r\n            />\r\n    );\r\n\r\n};\r\n\r\nexport default CatalogProduct;\r\n\r\n","import React from 'react';\r\nimport {Div, View, Panel, PanelHeader, Group, Search,Cell, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport ProductList from \"./ProductList\";\r\n\r\nimport Icon24Filter from '@vkontakte/icons/dist/24/filter';\r\nimport ym from 'react-yandex-metrika';\r\nrequire('../../panels/global/index.js');\r\n\r\n\r\nfunction escapeHtmlDecode(text) {\r\n    console.log('Будем заменять ',text);\r\n    return text\r\n        .replace(/&amp;/g, \"&\")\r\n        .replace(/&lt;/g, \"<\")\r\n        .replace(/&gt;/g, \">\")\r\n        .replace(/&quot;/g, \"\\\"\")\r\n        .replace(/&#039;/g, \"'\");\r\n}\r\n\r\nclass CategoryList extends React.Component {\r\n\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            loadingPage: true,\r\n            activePanel: 'brand',\r\n            products: [],\r\n            panelCategory: '',\r\n            ActiveCategory: 0,\r\n            productModal:[{\"title\":\"Название товара\",\"description\":\"Описание товара\",\"typeproduct\":\"0\",\"price\":\"1000\"}],\r\n            search: global.searchProduct\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        //console.log('Обновился каталог');\r\n        //console.log('А вот и перезагрузка');\r\n    }\r\n\r\n    getHashProductPageActive(){\r\n        if(this.props.activeHashPageProduct === true){\r\n            console.log('Запускаем страницу с товаром');\r\n\r\n            this.setActiveCategory(this.props.activeCategoryHash);\r\n            this.setProductModal(this.props.activeProductHash);\r\n            this.hndlClick('Panels_Product');\r\n        }else{\r\n            console.log('Не получилось, ждем повторения');\r\n            setTimeout(()=>{\r\n                this.getHashProductPageActive();\r\n            },800);\r\n        }\r\n    }\r\n\r\n    onChange (e) {\r\n        this.setState({ search: e});\r\n    }\r\n\r\n    hndlClick = (aP) => {\r\n        //console.log('--- ', 'Нажали на кнопку '+aP);\r\n        this.setState({ activePanel: aP });\r\n        //global.settingsFilterSearch.typeProduct = false;\r\n    };\r\n\r\n    setProductModal = (aP) => {\r\n       // console.log('--- ', 'Установили товар в модалку '+aP+' - - - -XTTT');\r\n        this.setState({ productModal: aP })\r\n    };\r\n\r\n    setActiveCategory = (aP) => {\r\n       // console.log('--- ', 'Установили категорию '+aP);\r\n        this.setState({ ActiveCategory: aP })\r\n    };\r\n\r\n\r\n    getInCarts(typeProduct,setCart){\r\n        // console.log(setCart);\r\n        const Buttons =\r\n            <button onClick={() => {\r\n                setCart(typeProduct);\r\n                try {\r\n                    if (global.Metrika.Markers[1].active == '1') {\r\n                        ym('reachGoal', global.Metrika.Markers[1].marker);\r\n                    }else{\r\n                     //   console.log('Цель отключена');\r\n                    }\r\n                }catch (e) {\r\n                   // console.log(e,global.Metrika);\r\n                }\r\n            }}>\r\n                В корзину\r\n            </button>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    getCountButton(typeProduct,counts,setCart){\r\n        const Buttons =\r\n            <div className=\"CounterInCart\">\r\n                <div className=\"minus\" onClick={() => {setCart(typeProduct,'-');}}>\r\n                    -\r\n                </div>\r\n                {counts}\r\n                <div className=\"pluse\" onClick={() => {setCart(typeProduct);}}>\r\n                    +\r\n                </div>\r\n            </div>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    getButtonInCartProduct(typeProduct,setCart){\r\n        //console.log(this.props.CartProducts,'---0---');\r\n        if(!!this.props.CartProducts){\r\n            var ButOk = false;\r\n            var id_CartPr = '';\r\n            this.props.CartProducts.map((data,key)=>{\r\n                if(data.id_Product === typeProduct.id_Product & data.type_product === typeProduct.type_product){\r\n                    ButOk = true;\r\n                    id_CartPr = key;\r\n                }\r\n            });\r\n\r\n            if(ButOk === true){\r\n                //console.log('Выполняется условие товар есть');\r\n                return  this.getCountButton(typeProduct,this.props.CartProducts[id_CartPr]['count'],setCart);\r\n            }else{\r\n                //console.log('Выполняется условие товара нет');\r\n                return this.getInCarts(typeProduct,setCart);\r\n            }\r\n        }else{\r\n            //console.log('Выполняется условие корзина пуста, вывод просто кнопки');\r\n            return this.getInCarts(typeProduct,setCart);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({loading: true});\r\n        this.setState({products:this.props.ProductsLists,loadingPage: false});\r\n        //console.log('Передали: ',this.props.ProductsLists);\r\n        this.getHashProductPageActive();\r\n            }\r\n\r\n    classNameDivCategory(){\r\n        //console.log(this.props.queryParams.vk_platform);\r\n        if(this.props.queryParams.vk_platform == \"desktop_web\"){\r\n            return \"GroupBlockCategory DivBlockDesctopCategoys\";\r\n        }else{\r\n            return \"GroupBlockCategory\";\r\n        }\r\n    }\r\n\r\n    getKomboProductData(DataKombo,AllProduct){\r\n        //console.log(DataKombo);\r\n        const res = Object.keys(DataKombo).map( (data,id,ArrK) => {\r\n            const res1 = Object.keys(AllProduct).map((d,i,arr)=>{\r\n                       const res2 = Object.keys(AllProduct[d].ProductList).map((dp,ip,arrp)=>{\r\n                            if(dp === data){\r\n                                return(\r\n                                    <Cell key={data} className=\"komboProducts\"\r\n                                          before={<img\r\n                                              src={AllProduct[d].ProductList[data][0]['img']}\r\n                                              style={{width:\"80px\",marginRight:\"15px\",marginTop:\"10px\"}}\r\n                                          />\r\n                                          }\r\n                                          asideContent={DataKombo[data]['count']+'шт'}\r\n                                          // bottomContent={\r\n                                          //     <span style={{fontSize:\"0.75em\"}}>\r\n                                          //         {AllProduct[d].ProductList[data][0]['weight']+' '+AllProduct[d].ProductList[data][0]['weight_type']}\r\n                                          //     </span>\r\n                                          // }\r\n                                          size=\"l\"\r\n                                          description={AllProduct[d].ProductList[data][0]['description']}\r\n                                          multiline={true}\r\n                                    >\r\n                                        {AllProduct[d].ProductList[data][0]['title']}\r\n                                    </Cell>\r\n                                )\r\n                            }else{\r\n                                return '';\r\n                            }\r\n                       });\r\n                       return res2;\r\n                    //{console.log(d,i,arr)}\r\n                });\r\n            return res1;\r\n            });\r\n        return(\r\n            <div style={{marginBottom:\"10px\"}}>{res}</div>\r\n        );\r\n    }\r\n\r\n    getFeaturesBlock(FeaturesData){\r\n\r\n        const res = Object.keys(FeaturesData).map((d,i,arr)=>{\r\n            if(FeaturesData[d]['show'] == 'show' & (\"features\" in FeaturesData[d])){\r\n                var defs = this.getFeaturesData(FeaturesData[d]['features']);\r\n                if(defs === false){\r\n\r\n                }else {\r\n                    return (\r\n                        <Group\r\n                            key={d}\r\n                            title={FeaturesData[d]['title']}\r\n                        >\r\n                            {defs}\r\n                        </Group>\r\n                    );\r\n                }\r\n            }\r\n        });\r\n\r\n        return (\r\n            res\r\n        );\r\n    }\r\n\r\n    getFeaturesData(Features){\r\n        var defs = false;\r\n        const res = Object.keys(Features).map((d,i,arr)=>{\r\n            if(Features[d]['text'] != ''){\r\n                defs = true;\r\n                return(\r\n                    <Cell key={d}\r\n                          asideContent={Features[d]['text']+' '+Features[d]['unit']}\r\n                          // before={}\r\n                    >\r\n                        {Features[d]['title']}\r\n                    </Cell>\r\n                );\r\n            }\r\n        });\r\n        if(defs === true) {\r\n            return (res);\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render () {\r\n        function getWeightProduct(Product_Weight,Product_WeightType){\r\n            if(Product_WeightType != 'л'){\r\n                return(\r\n                    number_format(Product_Weight,'0','.', ' ')+' '+Product_WeightType\r\n                );\r\n            }else{\r\n                return(\r\n                    Product_Weight+' '+Product_WeightType\r\n                );\r\n            }\r\n        }\r\n\r\n        function number_format(number, decimals, dec_point, separator ) {\r\n            number = (number + '').replace(/[^0-9+\\-Ee.]/g, '');\r\n            var n = !isFinite(+number) ? 0 : +number,\r\n                prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),\r\n                sep = (typeof separator === 'undefined') ? ',' : separator ,\r\n                dec = (typeof dec_point === 'undefined') ? '.' : dec_point,\r\n                s = '',\r\n                toFixedFix = function(n, prec) {\r\n                    var k = Math.pow(10, prec);\r\n                    return '' + (Math.round(n * k) / k)\r\n                        .toFixed(prec);\r\n                };\r\n            // Фиксим баг в IE parseFloat(0.55).toFixed(0) = 0;\r\n            s = (prec ? toFixedFix(n, prec) : '' + Math.round(n))\r\n                .split('.');\r\n            if (s[0].length > 3) {\r\n                s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep);\r\n            }\r\n            if ((s[1] || '')\r\n                .length < prec) {\r\n                s[1] = s[1] || '';\r\n                s[1] += new Array(prec - s[1].length + 1)\r\n                    .join('0');\r\n            }\r\n            return s.join(dec);\r\n        }\r\n\r\n        //Модалка продукта\r\n        function ModalProductInfo(OPT){\r\n            if(OPT.Loadings === false){\r\n               // console.log(OPT);\r\n                return(\r\n                    <div\r\n                        className=\"blockProduct maxWidths\"\r\n                        style={{\"margin\":\"0\",\"textAlign\":\"left\"}}\r\n                    >\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                            noShadow={false}\r\n                            left={<HeaderButton onClick={() => OPT.ClickBack('Panels_38')}>{osname === IOS ?\r\n                                <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                            addon={<HeaderButton onClick={() => OPT.ClickBack('Panels_38')}>Назад</HeaderButton>}\r\n                        >\r\n                            {escapeHtmlDecode(OPT.ProductInfo[0].title)}\r\n                        </PanelHeader>\r\n                        <Group\r\n                            id={'product_type_'+OPT.ProductInfo[0].type_info}\r\n                        >\r\n                            <Div style={{position:\"relative\"}}>\r\n                            <div className=\"imgPrewieProduct\"><img src={OPT.ProductInfo[0].img} alt={OPT.ProductInfo[0].title}/></div>\r\n                            <div className=\"titleProduct\">\r\n                                <span className=\"titleProductOne\">{escapeHtmlDecode(OPT.ProductInfo[0].title)}</span>\r\n                                <span className=\"redTextP\">\r\n                                    {getWeightProduct(OPT.ProductInfo[0].weight,OPT.ProductInfo[0].weight_type)}\r\n                                </span>\r\n                                <div className=\"clr\"></div>\r\n                            </div>\r\n\r\n\r\n                                <Div className=\"DescrProduct\">\r\n                                    {escapeHtmlDecode(OPT.ProductInfo[0].description)}\r\n                                    <div>\r\n                                    </div>\r\n                                    {OPT.ProductInfo[0].type_info != '' ?\r\n                                        <div className=\"WeightBlock\">\r\n                                            {OPT.ProductInfo[0].type_info}\r\n                                        </div>\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </Div>\r\n\r\n                            <div className=\"priceProductBig\">{getPriceProducts(OPT.ProductInfo[0])}\r\n                                {OPT.getButtonInCartProduct(OPT.ProductInfo[0],OPT.setCart)}\r\n                            </div>\r\n                            </Div>\r\n                        </Group>\r\n\r\n                        {OPT.ProductInfo[0].komboPoduct.length <= 0 ?\r\n                            \"\"\r\n                            :\r\n                            <Group\r\n                            title=\"В набор входят\"\r\n                            >\r\n                                {OPT.getKomboProductData(OPT.ProductInfo[0].komboPoduct,OPT.AllProduct)}\r\n                            </Group>\r\n                        }\r\n\r\n                        {OPT.getFeaturesBlock(OPT.ProductInfo[0].featuresProduct)}\r\n                        <div style={{clear:\"both\",height:\"60px\",width:\"100%\"}}></div>\r\n                    </div>\r\n                );\r\n            }else{\r\n                //console.log('Не загрузилось', OPT.CategoryList);\r\n                return (\r\n                    <div>\r\n                    <PanelHeader\r\n                        theme=\"light\"\r\n                        noShadow={false}\r\n                        left={<HeaderButton onClick={() => OPT.ClickBack('Panels_38')}>{osname === IOS ?\r\n                            <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                        addon={<HeaderButton onClick={() => OPT.ClickBack('Panels_38')}>Назад</HeaderButton>}\r\n                    >Ошибка</PanelHeader>\r\n                        <div style={{\"textAlign\":\"center\",\"padding\":\"5% 0\"}}>Ошибка, вернитесь назад</div>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n\r\n        function getPriceProducts(typeProduct){\r\n            if(!(\"price_discount\" in typeProduct) || typeProduct.price_discount === false){\r\n                return (<span className=\"priceProduct\">\r\n                {typeProduct.price} ₽\r\n                </span>\r\n                );\r\n            }else{\r\n                return(\r\n                    <span className=\"priceProduct\">\r\n                    <s className=\"old_price_style\" style={{fontWeight:\"460\",fontSize:\"0.9em\",marginRight:\"5px\"}}>{typeProduct.price_discount.old_price} ₽</s>\r\n                        {typeProduct.price_discount.new_price} ₽\r\n                </span>\r\n                );\r\n            }\r\n        }\r\n\r\n\r\n        function GetCategorys(OPT){\r\n            //console.log('Грузим каталог');\r\n            if(OPT.Loadings === false) {\r\n               // console.log(OPT,'-0-0-0-');\r\n               // console.log('Загрузилось', OPT.CategoryList);\r\n                //console.log('Товары ', OPT.CategoryList[OPT.ShowCategory].ProductList);\r\n                return (<div style={{background:\"#FFFFFF\"}}>\r\n                    <PanelHeader\r\n                        theme=\"light\"\r\n                        noShadow={false}\r\n                        left={<HeaderButton onClick={() => OPT.ClickCategory('brand')}>{osname === IOS ?\r\n                            <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                        addon={<HeaderButton onClick={() => OPT.ClickCategory('brand')}>Назад</HeaderButton>}\r\n                    >\r\n                        {OPT.CategoryList[OPT.ShowCategory].Title}\r\n                    </PanelHeader>\r\n                    <ProductList\r\n                        onClickProduct={OPT.ClickProduct.bind(this)}\r\n                        productsLists={OPT.CategoryList[OPT.ShowCategory].ProductList} key={OPT.CategoryList[OPT.ShowCategory].id_Category}\r\n                        filterCategorys={OPT.CategoryList[OPT.ShowCategory].filterCategory || []}\r\n                        idCategorys={OPT.ShowCategory}\r\n                        nameCategory=\"sets\"\r\n                        setCart={OPT.setCart.bind(this)}\r\n                        getButtonInCartProduct={OPT.getButtonInCartProduct.bind(this)}\r\n                        setProductModal={OPT.setProductModal.bind(this)}\r\n                        searchProduct={OPT.searchProduct}\r\n\r\n                        activefilter={OPT.activefilter}\r\n                        ClickOneFilter={OPT.ClickOneFilter.bind(this)}\r\n                        ClickOneFilterDeleted={OPT.ClickOneFilterDeleted.bind(this)}\r\n\r\n                        showModal={OPT.showModal.bind(this)}\r\n                        hideModals={OPT.hideModals.bind(this,null)}\r\n                    />\r\n                    </div>\r\n                );\r\n            }else{\r\n                //console.log('Не загрузилось', OPT.CategoryList);\r\n                return (\r\n                    <PanelHeader>Ошибка</PanelHeader>\r\n                );\r\n            }\r\n\r\n        }\r\n\r\n        function compareUnitaz(a, b) {\r\n            return a.position - b.position;\r\n        }\r\n\r\n        function GetBrandPanels(OPT,Loadings){\r\n           // console.log(OPT,' - - - категории грузим',OPT.Loadings);\r\n            global.settingsFilterSearch.typeProduct = false;\r\n\r\n\r\n            if(CategoryList.length === 0){\r\n                return '';\r\n            }else {\r\n                if(OPT.Loadings === false) {\r\n\r\n                    // console.log(OPT.CategoryList);\r\n\r\n\r\n                    let NewSort = [];\r\n                    Object.keys(OPT.CategoryList).map((id,kk)=>{\r\n                       NewSort.push(OPT.CategoryList[id]);\r\n                    });\r\n                    NewSort.sort(compareUnitaz);\r\n                     // console.log(NewSort);\r\n\r\n\r\n                    //ProductObject = Object.keys(OPT.CategoryList);\r\n                    //console.log('Преобразовали',ProductObject);\r\n                    // const ArrayBrands = Object.keys(OPT.CategoryList).map((CategoryProdcuts, key) =>\r\n                    const ArrayBrands = NewSort.map((Categorys, key) =>\r\n                        Categorys.ProductList !== null ?\r\n                            <Div\r\n                                style={{\"background\":\"linear-gradient( rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4) ), url(\"+global.URLAPI+\"/images/API_IMG/\"+Categorys.imgCategory+\") no-repeat\",\"backgroundSize\":\"100%\",backgroundPosition:\"center\"}}\r\n                                className=\"DivCategoryBlock\"\r\n                                key={key+'_'+Categorys.id_Category}\r\n                                onClick={\r\n                                    () => {\r\n                                        OPT.ActiveCategory(Categorys.id_Category);\r\n                                        OPT.ClickCategory('Panels_38');\r\n                                        OPT.ClickOneFilter(null);\r\n                                    }\r\n                                }\r\n                            >{console.log('Выводим категорию')}\r\n                                {OPT.CategoryList[Categorys.id_Category].Title}\r\n                            </Div> :\r\n                         \"\"\r\n\r\n                    );\r\n                    return ArrayBrands;\r\n                }\r\n                else {\r\n                    return 'Loading ...';\r\n                }\r\n                // return '';\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        const osname = platform();\r\n\r\n        return (\r\n            <View activePanel={this.state.activePanel}>\r\n                <Panel id=\"brand\">\r\n                    <PanelHeader\r\n                        theme=\"light\"\r\n                    >\r\n                        Категории\r\n                    </PanelHeader>\r\n                    <Group>\r\n                        <Div className=\"logoBlock\">\r\n                            <img src={global.URLAPI+\"/images/API_IMG/logo.png\"} style={{\"maxWidth\":\"80px\"}}/>\r\n                            {this.props.queryParams.vk_platform == \"desktop_web\"\r\n                                ?\r\n                                <Div className=\"PhoneDiv\">\r\n                                    <a>{global.phonenumberCollVisual}</a>\r\n                                </Div>\r\n                                :\r\n                                <Div className=\"PhoneDiv\">\r\n                                    <a href={global.phonenumberColl}>Позвонить</a>\r\n                                </Div>\r\n                            }\r\n                        </Div>\r\n                        <div id=\"SliderHeader\">\r\n                            {this.props.sliderHeader()}\r\n                        </div>\r\n                    </Group>\r\n                        <Group\r\n                            //title=\"Выбери категорию\"\r\n                            className={this.classNameDivCategory()} >\r\n                        <GetBrandPanels\r\n                            key=\"BrandPanels\"\r\n                            CategoryList={this.state.products}\r\n                            Loadings={this.state.loadingPage}\r\n                            ClickCategory={this.hndlClick.bind(this)}\r\n                            ActiveCategory={this.setActiveCategory.bind(this)}\r\n                            ClickOneFilter={this.props.ClickOneFilter.bind(this)}\r\n                        />\r\n                    </Group>\r\n                </Panel>\r\n                {/*{this.state.loadingPage ? <Panel id=\"Panels_38\" />  : <Panel id=\"Panels_38\" ><PanelHeader >Суши</PanelHeader></Panel> && <GetCategory CategoryList={this.state.products} Loadings={this.state.loadingPage} ClickCategory={this.hndlClick.bind(this)}/>}*/}\r\n                <Panel id=\"Panels_38\">\r\n                    <Cell\r\n                        className=\"BoxCellSearch\"\r\n                        asideContent={\r\n                            <Icon24Filter\r\n                                onClick={\r\n                                    ()=>{this.props.showModal('MODAL_Filter_Catalog');}\r\n                                }\r\n                            />}\r\n                    >\r\n                        <Search\r\n                            value={this.state.search}\r\n                            onChange={this.onChange}\r\n                            after={null}\r\n                        />\r\n                    </Cell>\r\n                    <GetCategorys\r\n                        CategoryList={this.state.products}\r\n                        Loadings={this.state.loadingPage}\r\n                        ClickCategory={this.hndlClick.bind(this)}\r\n                        ClickProduct={this.hndlClick.bind(this,'Panels_Product')}\r\n                        setProductModal={this.setProductModal.bind(this)}\r\n                        ShowCategory={this.state.ActiveCategory}\r\n                        setCart={this.props.setCart.bind(this)}\r\n                        getButtonInCartProduct={this.getButtonInCartProduct.bind(this)}\r\n                        searchProduct={this.state.search}\r\n\r\n                        activefilter={this.props.activefilter}\r\n                        ClickOneFilter={this.props.ClickOneFilter.bind(this)}\r\n                        ClickOneFilterDeleted={this.props.ClickOneFilterDeleted.bind(this)}\r\n\r\n                        showModal={this.props.showModal.bind(this)}\r\n                        hideModals={this.props.hideModals.bind(this,null)}\r\n\r\n                    />\r\n                </Panel>\r\n                <Panel id=\"Panels_Product\">\r\n\r\n                    <ModalProductInfo\r\n                        Loadings={this.state.loadingPage}\r\n                        ClickBack={this.hndlClick.bind(this)}\r\n                        ProductInfo={this.state.productModal}\r\n                        AllProduct={this.state.products}\r\n                        setCart={this.props.setCart.bind(this)}\r\n                        getButtonInCartProduct={this.getButtonInCartProduct.bind(this)}\r\n                        getKomboProductData={this.getKomboProductData.bind(this)}\r\n                        getFeaturesBlock={this.getFeaturesBlock.bind(this)}\r\n                    />\r\n                </Panel>\r\n                {/*<Panel id=\"Panels_38\" />*/}\r\n                {/*<Panel id=\"Panels_38\">*/}\r\n                {/*    <PanelHeader*/}\r\n                {/*        theme=\"light\"*/}\r\n                {/*        noShadow={true}*/}\r\n                {/*        left={<HeaderButton onClick={() => this.hndlClick('brand')}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</HeaderButton>}*/}\r\n                {/*        addon={<HeaderButton onClick={() => this.hndlClick('brand')}>Назад</HeaderButton>}*/}\r\n                {/*    >*/}\r\n                {/*        Cуши*/}\r\n                {/*    </PanelHeader>*/}\r\n\r\n                {/*    <ProductList productsLists={this.state.products} nameCategory=\"sushi\" />*/}\r\n                {/*</Panel>*/}\r\n                {/*<Panel id=\"light2\">*/}\r\n                {/*    <PanelHeader*/}\r\n                {/*        theme=\"light\"*/}\r\n                {/*        noShadow={true}*/}\r\n                {/*        left={<HeaderButton onClick={() => this.hndlClick('brand')}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</HeaderButton>}*/}\r\n                {/*        addon={<HeaderButton onClick={() => this.hndlClick('brand')}>Назад</HeaderButton>}>*/}\r\n                {/*        Роллы*/}\r\n                {/*    </PanelHeader>*/}\r\n                {/*    <ProductList productsLists={this.state.products} nameCategory=\"roli\" />*/}\r\n                {/*</Panel>*/}\r\n                {/*<Panel id=\"Panels_38\">*/}\r\n                {/*    <PanelHeader*/}\r\n                {/*        theme=\"light\"*/}\r\n                {/*        noShadow={true}*/}\r\n                {/*        left={<HeaderButton onClick={() => this.hndlClick('brand')}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</HeaderButton>}*/}\r\n                {/*        addon={<HeaderButton onClick={() => this.hndlClick('brand')}>Назад</HeaderButton>}>*/}\r\n                {/*        Сеты*/}\r\n                {/*    </PanelHeader>*/}\r\n                {/*    <ProductList productsLists={this.state.products} nameCategory=\"sets\" idCategorys=\"0\"/>*/}\r\n                {/*</Panel>*/}\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default CategoryList;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Placeholder, Div,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar,Textarea, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport Icon16Clear from '@vkontakte/icons/dist/16/clear';\r\nimport DiliveryAddress from \"./DiliveryAddress\";\r\nimport AffiliateList from \"./AffiliateList\";\r\nimport Icon56ErrorOutline from '@vkontakte/icons/dist/56/error_outline';\r\nimport Preorder from \"../preorder\";\r\nimport NoPreorder from \"../noPreorder\";\r\n\r\n\r\nconst orangeBackground = {\r\n    backgroundImage: 'linear-gradient(135deg, #ffb73d, #ffa000)'\r\n};\r\n\r\nconst blueBackground = {\r\n    backgroundColor: '#ffffff'\r\n};\r\n\r\nclass Dilivery extends React.Component{\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            UserCard:{phone:\"\",email:\"\"},\r\n            CheckSMSCode:false,\r\n            phoneValue:\"\",\r\n            codeValue:\"\",\r\n            resultVerificationCode:true,\r\n            tooltip: true,\r\n            snackbar: null,\r\n            showBTNNewAddress:false,\r\n            showFormNewAddress:false\r\n        };\r\n\r\n        this.openBase = this.openBase.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        //this.openBase();\r\n\r\n        async function getPhoneUserVK(setState){\r\n            connect.sendPromise(\"VKWebAppGetPhoneNumber\",{\"sign\":\"T3in3QPDby8GsRNAfsEnEoYmVt7Se2dy0XUOhnCSlSw\"})\r\n                .then((data ) => {\r\n                    //console.log(data,\"Данные пользователя\");\r\n                    setState({ UserCard:{phone: data.phone_number} });\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"ERROR: ------  \",err);\r\n                });\r\n        }\r\n\r\n        //console.log(\"Получаем телефон\");\r\n        {this.props.userSystemInfo.error === true && getPhoneUserVK(this.setState.bind(this));}\r\n    }\r\n\r\n\r\n    openBase (e = null) {\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                    before={<Avatar size={24} style={blueBackground}><Icon16Clear fill=\"#ff0000\" width={16} height={16} /></Avatar>}\r\n                >\r\n                    {e===null && <span>Проверочный код введен не верно, повторите попытку!</span>}\r\n                    {e!==null && e}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n\r\n    setVerificationPhone(){\r\n        //console.log('Отправили запрос на верификацию');\r\n        axios(global.URLAPI+'api/VerificationPhone&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    phoneVerification: this.state.UserCard.phone,\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    if(data.status === \"OK_SMS\"){\r\n                        //console.log('СМС отправлено, выводим поле для ввода кода');\r\n                        this.setState({CheckSMSCode:true});\r\n                    }else{\r\n                        //console.log('Ошибка ',data);\r\n                        this.openBase('Номер телефона введен не верно!');\r\n                    }\r\n                }\r\n            })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ---Запрос СМС---  \",err);\r\n            });\r\n    }\r\n\r\n    checkVerificationCode(){\r\n        //console.log('Отправили запрос на проверку кода',this.props.userInfo.id);\r\n        axios(global.URLAPI+'api/VerificationCode&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    phoneVerification: this.state.UserCard.phone,\r\n                    VerificationCode: this.state.codeValue,\r\n                    idUserVK:this.props.userInfo.id\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    if(data.status === \"OK_CODE_V\"){\r\n                        //console.log('Данные сохранены, можно обновить приложение, пользователь авторизован');\r\n                        this.props.getUserSystemInfo(this.props.userInfo.id);\r\n                        //this.setState({CheckSMSCode:true});\r\n                    }else{\r\n                        //console.log('Ошибка ',data);\r\n                        this.openBase();\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос СМС---  \",err);\r\n            });\r\n    }\r\n\r\n    getValueInputPhone(event){\r\n        this.setState({UserCard:{phone: event.target.value}});\r\n        //console.log(this.state.UserCard.phone);\r\n    }\r\n\r\n    getValueInputCode(event){\r\n        this.setState({codeValue: event.target.value});\r\n    }\r\n\r\n    getCommentsData(e){\r\n        this.props.setComment(e.target.value);\r\n    }\r\n\r\n    getDataCountPerson(types){\r\n        var values_count = this.props.countPerson;\r\n        switch(types){\r\n            case '-': values_count -= 1; break;\r\n            case '+': values_count += 1; break;\r\n            default: console.log('Нет параметра');\r\n        }\r\n\r\n        if(values_count<=0){ values_count = 1;}\r\n        if(values_count === ''){ values_count = 1;}\r\n        if(values_count >9){ values_count = 9;}\r\n\r\n        this.props.setStates({countPerson: values_count});\r\n    }\r\n\r\n    getCountPersonInput(){\r\n        // return \"\";\r\n        return (\r\n            <Group title=\"Кол-во приборов\">\r\n                <Div style={{display: 'flex',justifyContent:'center'}}>\r\n                    <Button size=\"l\" stretched style={{marginRight: 10,maxWidth:50,background:\"#e63743\"}} onClick={this.getDataCountPerson.bind(this,'-')}>-</Button>\r\n                    <Input type=\"number\" style={{maxWidth:80,textAlign:\"center\"}} value={this.props.countPerson} readOnly=\"readOnly\"/>\r\n                    <Button size=\"l\" stretched style={{marginLeft: 10,maxWidth:50,background:\"#e63743\"}} onClick={this.getDataCountPerson.bind(this,'+')}>+</Button>\r\n                </Div>\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getInfoUserNoneAuth(){\r\n        return(<Group>\r\n            <FormLayout>\r\n                {this.state.CheckSMSCode === true && <FormLayoutGroup top=\"Введите одноразовый код из СМС\">\r\n\r\n                    <Input type=\"number\" placeholder=\"1234\" onChange={this.getValueInputCode.bind(this)} />\r\n\r\n\r\n                    <Button level=\"commerce\" style={{\"background\":\"#e63743\"}}\r\n                            onClick={()=> {\r\n                                //console.log(this.state.codeValue);\r\n                                this.checkVerificationCode()\r\n                                }\r\n                            }\r\n                    >Подтвердить\r\n                    </Button>\r\n                    <Button level=\"secondary\" style={{\"float\":\"right\"}} onClick={() => {this.setState({CheckSMSCode:false})}}>Выслать повторно</Button>\r\n                </FormLayoutGroup>}\r\n\r\n                {this.state.CheckSMSCode === false && <FormLayoutGroup top=\"Подтвердите номер телефона\">\r\n                    <Input type=\"number\" placeholder=\"79876543210\" defaultValue={this.state.UserCard.phone} onChange={this.getValueInputPhone.bind(this)}/>\r\n                    <Button level=\"commerce\" style={{\"background\":\"#e63743\"}}\r\n                            onClick={\r\n                                () => {\r\n                                    this.setVerificationPhone();\r\n                                    //console.log(this.state.UserCard.phone)\r\n                                }\r\n                            }\r\n                    >\r\n                        Получить код\r\n                    </Button>\r\n                    <Button onClick={() => {this.setState({CheckSMSCode:true})}} level=\"secondary\" style={{\"float\":\"right\"}}>Уже есть код</Button>\r\n                </FormLayoutGroup>}\r\n            </FormLayout>\r\n            {this.state.snackbar}\r\n        </Group>);\r\n    }\r\n\r\n    getButtonTypeDilivery(){\r\n        return(<Div style={{display: 'flex',\"paddingBottom\":\"0\"}}>\r\n            <Button size=\"l\" stretched style={{marginRight: 8}} level={this.props.checkedTypeDilivery === 1 ? \"secondary\" : \"commerce\"} onClick={()=>{this.props.setTypeDilivery(0)}}>Доставка</Button>\r\n            <Button size = \"l\" stretched level={this.props.checkedTypeDilivery === 0 ? \"secondary\" : \"commerce\"}  onClick={()=>{this.props.setTypeDilivery(1)}}>Самовывоз</Button>\r\n            </Div>\r\n        );\r\n    }\r\n\r\n    getButtonTypeOrder(){\r\n        return(<Div style={{display: 'flex',\"paddingBottom\":\"20\",\"paddingTop\":\"0\"}}>\r\n                <Button size=\"l\" stretched style={{marginRight: 8}}\r\n                        level={this.props.DataDeliveryInfo.typeOrderDate ? \"commerce\" : \"secondary\"}\r\n                        onClick={()=>{this.props.DataDeliveryInfo.setTypeOrderDate(true);}}\r\n                >\r\n                    Ближайшее\r\n                </Button>\r\n                <Button size = \"l\" stretched\r\n                        level={this.props.DataDeliveryInfo.typeOrderDate ? \"secondary\" : \"commerce\"}\r\n                        onClick={()=>{this.props.DataDeliveryInfo.setTypeOrderDate(false);}}\r\n                >\r\n                    Ко времени\r\n                </Button>\r\n            </Div>\r\n        );\r\n    }\r\n\r\n\r\n    getPreorderBlock(){\r\n        return(\r\n            <Group\r\n                title=\"Время получение заказа\"\r\n            >\r\n                {this.getButtonTypeOrder()}\r\n                {\r\n                    this.props.DataDeliveryInfo.typeOrderDate\r\n                        ?\r\n                        <NoPreorder\r\n                            typeDelivery={this.props.DataDeliveryInfo.checkedTypeDilivery}\r\n                        />\r\n                        :\r\n                        <Preorder\r\n                            DataInfos={this.props.DataDeliveryInfo}\r\n                            setStates={this.props.setStates.bind(this)}\r\n                            key=\"Preorders\"\r\n                        />\r\n                }\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getInfoUserAuth(){\r\n        //console.log('По дефолту адрес ',this.props.addressDefault)\r\n        return(\r\n            <div>\r\n                {this.getButtonTypeDilivery()}\r\n                {this.props.checkedTypeDilivery === 0 ?\r\n                    this.getListAddress()\r\n                    :\r\n                    this.getListAffiliate()\r\n                }\r\n                {this.getPreorderBlock()}\r\n                {this.getCountPersonInput()}\r\n                {this.getCommentsTextarea()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getNoneCartProduct(){\r\n        return(\r\n            <Placeholder\r\n                icon={<Icon56ErrorOutline />}\r\n                action={false}\r\n\r\n            >\r\n                <h2>В корзине отсутствуют товары</h2>\r\n                <p>Для совершения заказа, нужно положить хотябы 1 товар в корзину!</p>\r\n            </Placeholder>\r\n        );\r\n    }\r\n\r\n\r\n    getListAddress(){\r\n        //console.log(this.state.showBTNNewAddress);\r\n        return(\r\n            <Group\r\n                className=\"GroupBlockListAddress\"\r\n                title=\"Адреса доставки\"\r\n                   description={this.state.showBTNNewAddress ?\r\n                       <Button\r\n                           size=\"l\"\r\n                           level=\"secondary\"\r\n                           style={{ background: '#e63743',color:\"#FFFFFF\" }}\r\n                           // onClick={()=>{this.setState({showFormNewAddress:true})}}\r\n                           onClick={()=>{\r\n                               this.props.showModal('MODAL_NEWADDRESS');\r\n                           }}\r\n                       >Добавить адрес</Button>\r\n                       :\r\n                       \"\"}\r\n            >\r\n                <DiliveryAddress\r\n                    userInfo={this.props.userInfo}\r\n                    addressDefault={this.props.addressDefault}\r\n                    setAddressDefault={this.props.setAddressDefault.bind(this)}\r\n                    setPopout={this.props.setPopout.bind(this)}\r\n                    setShowBTNNewAddress={this.setState.bind(this)}\r\n                    showFormNewAddress={this.state.showFormNewAddress}\r\n                    setStates={this.props.setStates.bind(this)}\r\n                    setDeliveryDataItogs={this.props.setDeliveryDataItogs.bind(this)}\r\n\r\n                    showModals={this.props.showModal.bind(this)}\r\n                    hideModals={this.props.hideModals.bind(this)}\r\n                />\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getListAffiliate(){\r\n        return (\r\n            <Group title=\"Адреса самовывоза\">\r\n            <AffiliateList\r\n                userInfo={this.props.userInfo}\r\n                AffiliateDefault={this.props.AffiliateDefault}\r\n                setAffiliateDefault={this.props.setAffiliateDefault.bind(this)}\r\n                getDeliveryDataPriceItogAffiliate={this.props.getDeliveryDataPriceItogAffiliate.bind(this)}\r\n                setStates={this.props.setStates.bind(this)}\r\n            />\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getCommentsTextarea () {\r\n        return (\r\n            <Group title=\"Комментарий к заказу\">\r\n                <Div>\r\n                <Textarea value={this.props.commentary} onChange={this.getCommentsData.bind(this)} placeholder=\"Ваш комментарий\"/>\r\n                </Div>\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getOkListAddress(Param){\r\n        return(\r\n            Param <=0 ? this.getNoneCartProduct() : this.getInfoUserAuth()\r\n        )\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div>\r\n                {this.props.userSystemInfo.error === true &&\r\n                    this.getInfoUserNoneAuth()\r\n                }\r\n\r\n                {this.props.userSystemInfo.error === false &&\r\n                    this.getOkListAddress(this.props.ProductList.length)\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Dilivery;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport GetOneAddress from \"./GetOneAddress\";\r\nimport GetOneAddressOff from \"./GetOneAddressOff\";\r\nimport OneProduct from \"../catalog/OneProduct\";\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nimport FormNewAddress from './FormNewAddress';\r\n\r\nclass DiliveryAddress extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listAddress:[],\r\n            listAddressOff:[],\r\n            addressOk:false,\r\n            dataAddress:\"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAddressUserSystem();\r\n        this.props.setStates({formNewAddressData: <FormNewAddress setPopout={this.props.setPopout.bind(this)} userInfo={this.props.userInfo} getAddressUserSystem={this.getAddressUserSystem.bind(this)} setAddressDefault={this.props.setAddressDefault.bind(this)} hideModals={this.props.hideModals.bind(this)} />});\r\n    }\r\n\r\n    setAddressEdit(e){\r\n        //console.log(this.state.listAddress);\r\n        this.props.setStates({formEditAddressData: <FormNewAddress AddressEdit={this.state.listAddress[e]} setPopout={this.props.setPopout.bind(this)} userInfo={this.props.userInfo} getAddressUserSystem={this.getAddressUserSystem.bind(this)} setAddressDefault={this.props.setAddressDefault.bind(this)} hideModals={this.props.hideModals.bind(this)} />});\r\n        this.props.showModals('MODAL_EditADDRESS');\r\n    }\r\n\r\n\r\n    getAddressUserSystem(delUpdate = false){\r\n        axios(global.URLAPI+'api/getAddressUser&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    id_UserVK: this.props.userInfo.id,\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                    if(data.error === 'Address not found'){\r\n                        console.log('Нужно вывести форму для создания первого адреса пользователя');\r\n                        this.getFormNewAddress();\r\n                    }else{\r\n\r\n                    }\r\n                }else{\r\n                   // console.log(data);\r\n                    this.setState({listAddress:data.listAddress});\r\n                    this.props.setStates({listAddressGlobal:data.listAddress});\r\n\r\n                    this.setState({listAddressOff:data.ListAddressNoDelivery});\r\n                    this.props.setStates({listAddressGlobalOff:data.ListAddressNoDelivery});\r\n\r\n                    if(delUpdate === true){\r\n                        this.getAddressUsers(this.state.listAddress,true);\r\n                    }else{\r\n                        this.getAddressUsers(this.state.listAddress);\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Адресов---  \",err);\r\n            });\r\n    }\r\n\r\n\r\n    setAddressInfoUsers(e,type=0){\r\n            if (type === 0) {\r\n                var listAddressU = Object.keys(this.state.listAddress);\r\n                if(listAddressU.length > 0) {\r\n                    // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n                    // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n                    var DataSetAddress = this.state.listAddress[listAddressU[e]];\r\n                    this.props.setStates({\r\n                        addressOrderInfoUser: 'г. ' + DataSetAddress.city + ', ул. ' + DataSetAddress.street + ', д. ' + DataSetAddress.home\r\n                    });\r\n                }\r\n            }\r\n    }\r\n\r\n    getFormNewAddress(){\r\n        this.props.setAddressDefault(null);\r\n        this.state.dataAddress = <FormNewAddress setPopout={this.props.setPopout.bind(this)} userInfo={this.props.userInfo} getAddressUserSystem={this.getAddressUserSystem.bind(this)} setAddressDefault={this.props.setAddressDefault.bind(this)}/>;\r\n        this.setState({addressOk:true});\r\n        this.props.setShowBTNNewAddress({showBTNNewAddress:false});\r\n\r\n    }\r\n\r\n    setDataDiliveryPrice(n,ee = 'Дефолт 0'){\r\n        var listAddressU = Object.keys(this.state.listAddress);\r\n        // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n        // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n        if(listAddressU.length <= 0){\r\n            console.log('Адресов нет, должны вернуть только не доступные адреса');\r\n            this.props.setAddressDefault(null);\r\n            //return this.getAddressUsers(this.state.listAddress, true);\r\n        }else {\r\n            if (listAddressU[n] in this.state.listAddress) {\r\n                //console.log('Все ок, продолжаем по адресам');\r\n            } else {\r\n               // console.log('Адреса такого нет, ставим в дефаулт');\r\n                this.props.setAddressDefault(0);\r\n               // console.log('Должны переустановить дефаултный адрес на 0, адреса есть');\r\n                return this.getAddressUsers(this.state.listAddress, true);\r\n            }\r\n        }\r\n\r\n        if(listAddressU.length <= 0){\r\n           // console.log('Адресов нет, но продолжаем');\r\n           //  console.log('Установили значения стоимости доставки ', ee);\r\n        }else {\r\n            var DataSetAddress = this.state.listAddress[listAddressU[n]].diliveryData;\r\n            this.props.setStates({\r\n                priceDelivery: DataSetAddress.priceDilivery,\r\n                minSumOrder: DataSetAddress.min_sum_order,\r\n                minSumFreeDelivery: DataSetAddress.min_sum_free_dilivery\r\n            });\r\n           // console.log('Установили значения стоимости доставки ', ee);\r\n        }\r\n\r\n    }\r\n\r\n    getAddressUsers(listAddress,delUpdate = false) {\r\n        if(this.props.addressDefault === null & Object.keys(listAddress).length > 0){\r\n          //  console.log('Устанавливаем дефаултное значение адреса на 0','Длинна массива ',Object.keys(listAddress).length);\r\n            this.props.setAddressDefault(0);\r\n            this.setDataDiliveryPrice(0);\r\n            this.props.setDeliveryDataItogs();\r\n            this.setAddressInfoUsers(this.props.addressDefault);\r\n        }\r\n\r\n        if(this.props.addressDefault !== null & Object.keys(listAddress).length <= 0){\r\n           // console.log('Устанавливаем дефаултное значение адреса на 0 с условием что адресов нет','Длинна массива ',Object.keys(listAddress).length);\r\n            this.props.setAddressDefault(null);\r\n            this.setDataDiliveryPrice(0);\r\n        }\r\n\r\n        if(delUpdate === true){\r\n           // console.log('Устанавливаем дефаултное значение адреса на 0');\r\n            this.props.setAddressDefault(0);\r\n            this.getAddressUsers(listAddress,false);\r\n            this.setDataDiliveryPrice(0);\r\n            this.props.setDeliveryDataItogs();\r\n            this.setAddressInfoUsers(this.props.addressDefault);\r\n        }else{\r\n            this.state.dataAddress = Object.keys(listAddress).map((dataAddress, keyId) =>\r\n                <GetOneAddress\r\n                    setAddressInfoUsers={this.setAddressInfoUsers.bind(this)}\r\n                    setDeliveryDataItogs={this.props.setDeliveryDataItogs.bind(this)}\r\n                    setDataDeliveryPrice={this.setDataDiliveryPrice.bind(this)}\r\n                    getAddressUserSystem={this.getAddressUserSystem.bind(this)}\r\n                    setPopout={this.props.setPopout.bind(this)}\r\n                    userInfo={this.props.userInfo}\r\n                    setAddressEdit={this.setAddressEdit.bind(this)}\r\n                    key={'Address_'+keyId}\r\n                    AddresInfo={listAddress[dataAddress]}\r\n                    NumberAddress={keyId}\r\n                    addressDefault={this.props.addressDefault}\r\n                    setAddressDefault={this.props.setAddressDefault.bind(this)}\r\n                />\r\n            );\r\n\r\n            this.state.dataAddressOff = Object.keys(this.state.listAddressOff).map((dataAddress2, keyId2) =>\r\n                <GetOneAddressOff\r\n                    setAddressInfoUsers={this.setAddressInfoUsers.bind(this)}\r\n                    setDeliveryDataItogs={this.props.setDeliveryDataItogs.bind(this)}\r\n                    setDataDeliveryPrice={this.setDataDiliveryPrice.bind(this)}\r\n                    getAddressUserSystem={this.getAddressUserSystem.bind(this)}\r\n                    setPopout={this.props.setPopout.bind(this)}\r\n                    userInfo={this.props.userInfo}\r\n                    setAddressEdit={this.setAddressEdit.bind(this)}\r\n                    key={'Address_'+keyId2}\r\n                    AddresInfo={this.state.listAddressOff[dataAddress2]}\r\n                    NumberAddress={keyId2}\r\n                    addressDefault={this.props.addressDefault}\r\n                    setAddressDefault={this.props.setAddressDefault.bind(this)}\r\n                />\r\n            );\r\n            this.setState({addressOk:true});\r\n            this.props.setShowBTNNewAddress({showBTNNewAddress:true});\r\n            this.setDataDiliveryPrice(this.props.addressDefault, 'На '+this.props.addressDefault);\r\n            this.props.setDeliveryDataItogs();\r\n            this.setAddressInfoUsers(this.props.addressDefault);\r\n        }\r\n\r\n    }\r\n\r\n    getListAddressVisual(){\r\n        return(\r\n            <div>\r\n                {this.state.dataAddress}\r\n                {this.state.dataAddressOff}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    render() {\r\n        return (this.state.addressOk === false ? <div>Загрузка адресов доставки <ScreenSpinner/></div> : this.getListAddressVisual()\r\n            );\r\n    };\r\n}\r\n\r\nexport default DiliveryAddress;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Alert,Div,Radio,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport Icon28EditOutline from '@vkontakte/icons/dist/28/edit_outline';\r\nimport Icon28CancelCircleOutline from '@vkontakte/icons/dist/28/cancel_circle_outline';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport axios from \"axios\";\r\n\r\nclass GetOneAddress extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            AddressN:''\r\n        }\r\n\r\n        this.closePopout = this.closePopout.bind(this);\r\n    }\r\n\r\n    getAddressTitle(){\r\n        var title = '';\r\n\r\n        if(this.props.AddresInfo.comment !== ''){\r\n            title = this.props.AddresInfo.comment;\r\n        }else{\r\n            title = <span>{this.props.AddresInfo.street} {this.props.AddresInfo.home}</span>;\r\n        }\r\n\r\n        return(\r\n            <span>\r\n                {title}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    deletedAddress(a){\r\n            this.props.setPopout({ popout:<ScreenSpinner />});\r\n\r\n            axios(global.URLAPI+'/api/deletedAddressUser&apiKey='+global.ApiKey+'',\r\n                {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                    data: {\r\n                        addressInfo:{id:a},\r\n                        idUserVK:this.props.userInfo.id\r\n                    },\r\n                    responseType:'text'\r\n                })\r\n                .then(({ data }) => {\r\n                    if(\"error\" in data){\r\n                        console.log(data.error,'|',data.errorInfo);\r\n                    }else{\r\n                        if(data.result.result_add === true){\r\n                            this.props.setAddressDefault('del');\r\n                           // console.log('Обновляем адреса',data);\r\n                            this.props.getAddressUserSystem(true);\r\n                            this.props.setPopout({ popout:null});\r\n                        }else{\r\n                            console.log('Ошибка ',data);\r\n                        }\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"ERROR: ---Запрос Новый Адрес---  \",err);\r\n                });\r\n    }\r\n\r\n    closePopout () {\r\n        this.props.setPopout({ popout: null });\r\n    }\r\n\r\n\r\n    openDefault (a) {\r\n        this.props.setPopout({ popout:\r\n                <Alert\r\n                    actions={[{\r\n                        title: 'Отмена',\r\n                        autoclose: true,\r\n                        style: 'cancel'\r\n                    }, {\r\n                        title: 'Удалить',\r\n                        autoclose: true,\r\n                        action: () => this.deletedAddress(a),\r\n                    }]}\r\n                    onClose={this.closePopout}\r\n                >\r\n                    <h2>Удаление адреса</h2>\r\n                    <p>Вы уверены что хотите удалить адрес?</p>\r\n                </Alert>\r\n        });\r\n    }\r\n\r\n\r\n    getAddressFull(n){\r\n        return(<div>\r\n                <span style={{width:\"75%\",float:\"left\"}}>\r\n                 г. {this.props.AddresInfo.city}, ул. {this.props.AddresInfo.street}, д. {this.props.AddresInfo.home}, подъезд {this.props.AddresInfo.podezd}, этаж {this.props.AddresInfo.etaj}, кв. {this.props.AddresInfo.kvartira}\r\n                </span>\r\n                <span style={{width:\"24%\",float:\"right\"}}><Icon28EditOutline\r\n                    onClick={\r\n                        ()=>{\r\n                            // console.log('Редактируем адрес ',n);\r\n                            this.props.setAddressEdit(this.props.AddresInfo.id);\r\n                        }\r\n                    }\r\n                    style={{float:\"left\",marginRight:\"10px\"}}/> <Icon28CancelCircleOutline style={{float:\"left\"}}\r\n                                                                                           onClick={\r\n                                                                                               ()=>{\r\n                                                                                                   // console.log('Удаляем адрес ');\r\n                                                                                                   this.openDefault(this.props.AddresInfo.id);\r\n                                                                                               }\r\n                                                                                           }\r\n                /></span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    defaultCheckedR(e,n){\r\n        if(e === n){\r\n            return (\r\n                <Radio name=\"DiliveryAddress\" value={this.props.AddresInfo.id} description={this.getAddressFull(n)} defaultChecked onClick={() => {this.props.setAddressDefault(n);this.props.setDataDeliveryPrice(n,'На нужный');this.props.setDeliveryDataItogs();this.props.setAddressInfoUsers(n);}}>{this.getAddressTitle()}</Radio>\r\n            );\r\n        }else{\r\n            return(\r\n                <Radio name=\"DiliveryAddress\" value={this.props.AddresInfo.id} description={this.getAddressFull(n)} onClick={() => {this.props.setAddressDefault(n);this.props.setDataDeliveryPrice(n, 'На нужный');this.props.setDeliveryDataItogs();this.props.setAddressInfoUsers(n);}}>{this.getAddressTitle()}</Radio>\r\n            );\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            this.defaultCheckedR(this.props.addressDefault,this.props.NumberAddress)\r\n        );\r\n    };\r\n}\r\n\r\nexport default GetOneAddress;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Alert,Div,Radio,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport Icon28EditOutline from '@vkontakte/icons/dist/28/edit_outline';\r\nimport Icon28CancelCircleOutline from '@vkontakte/icons/dist/28/cancel_circle_outline';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport axios from \"axios\";\r\n\r\nclass GetOneAddressOff extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            AddressN:''\r\n        }\r\n\r\n        this.closePopout = this.closePopout.bind(this);\r\n    }\r\n\r\n    getAddressTitle(){\r\n        var title = '';\r\n\r\n        if(this.props.AddresInfo.comment !== ''){\r\n            title = this.props.AddresInfo.comment;\r\n        }else{\r\n            title = <span>{this.props.AddresInfo.street} {this.props.AddresInfo.home}</span>;\r\n        }\r\n\r\n        return(\r\n            <span>\r\n                {title}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    deletedAddress(a){\r\n        this.props.setPopout({ popout:<ScreenSpinner />});\r\n\r\n        axios(global.URLAPI+'api/deletedAddressUser&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    addressInfo:{id:a},\r\n                    idUserVK:this.props.userInfo.id\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    if(data.result.result_add === true){\r\n                        this.props.setAddressDefault('del');\r\n                        //console.log('Обновляем адреса',data);\r\n                        this.props.getAddressUserSystem(true);\r\n                        this.props.setPopout({ popout:null});\r\n                    }else{\r\n                        console.log('Ошибка ',data);\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Новый Адрес---  \",err);\r\n            });\r\n    }\r\n\r\n    closePopout () {\r\n        this.props.setPopout({ popout: null });\r\n    }\r\n\r\n\r\n    defaultCheckedR(e,n){\r\n        if(e === n){\r\n            return (\r\n                <Radio disabled name=\"DiliveryAddress\" value={this.props.AddresInfo.id} description={'К сожалению мы не можем осуществить доставку на этот адрес.'} >{this.getAddressTitle()}</Radio>\r\n            );\r\n        }else{\r\n            return(\r\n                <Radio disabled name=\"DiliveryAddress\" value={this.props.AddresInfo.id} description={'К сожалению мы не можем осуществить доставку на этот адрес.'} >{this.getAddressTitle()}</Radio>\r\n            );\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            this.defaultCheckedR(this.props.addressDefault,this.props.NumberAddress)\r\n        );\r\n    };\r\n}\r\n\r\nexport default GetOneAddressOff;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport GetOneAffiliateAddress from \"./GetOneAffiliateAddress\";\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nclass AffiliateList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listAffiliate:[],\r\n            addressAffiliateOk:false,\r\n            dataAffiliate:\"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios(global.URLAPI+'api/getAffiliate&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    id_City: 1,\r\n                    id_UserVK:this.props.userInfo.id\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo,'Самовывоз');\r\n                }else{\r\n                    //console.log(data,'Самовывоз');\r\n                    if(Object.keys(data.listOffAffiliate).length>0){\r\n                       // console.log('Есть запрещенные точки, проводим цикл');\r\n                        Object.keys(data.listOffAffiliate).map((datas,keys)=>\r\n                            {\r\n                                if(this.props.AffiliateDefault === keys){\r\n                                    //console.log('Точка самовывоза по умолчанию совпадает с запрещенной, ставим нуль ', keys);\r\n                                    this.props.setAffiliateDefault(0);\r\n                                }else{\r\n                                   // console.log('Точка по умолчанию не совпадает с запрещенной, ничего не делаем ',keys);\r\n                                }\r\n                            }\r\n                        );\r\n                        this.setState({listAffiliate:data.list});\r\n                        this.getAddressAffiliate(this.state.listAffiliate);\r\n                        this.props.setStates({listAffiliateGlobal:data.list});\r\n                    }else{\r\n                        this.setState({listAffiliate:data.list});\r\n                        this.getAddressAffiliate(this.state.listAffiliate);\r\n                        this.props.setStates({listAffiliateGlobal:data.list});\r\n                    }\r\n\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Адресов---  \",err);\r\n            });\r\n    }\r\n\r\n    setAddressInfoUsers(e,type=1){\r\n        if(type===1){\r\n            var listAddressU = Object.keys(this.state.listAffiliate);\r\n            // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n            // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n            var DataSetAddress = this.state.listAffiliate[listAddressU[e]];\r\n            this.props.setStates({\r\n                addressOrderInfoUser: DataSetAddress.title\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    getAddressAffiliate(listAddress) {\r\n        this.props.getDeliveryDataPriceItogAffiliate();\r\n        this.setAddressInfoUsers(this.props.AffiliateDefault);\r\n        this.state.dataAffiliate = Object.keys(listAddress).map((dataAffiliate, keyId) =>\r\n            <GetOneAffiliateAddress\r\n                key={'Affiliate_'+keyId}\r\n                AddresInfo={listAddress[dataAffiliate]}\r\n                NumberAddress={keyId}\r\n                AffiliateDefault={this.props.AffiliateDefault}\r\n                setAffiliateDefault={this.props.setAffiliateDefault.bind(this)}\r\n                setAddressInfoUsers={this.setAddressInfoUsers.bind(this)}\r\n            />\r\n        );\r\n       this.setState({addressAffiliateOk:true});\r\n        //this.state.addressOk:true;\r\n        //return ArrayPr;\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            this.state.addressAffiliateOk === false ? <div><h3>Ареса самовывоза</h3> <ScreenSpinner/> <p></p></div> : this.state.dataAffiliate\r\n        );\r\n    };\r\n}\r\n\r\nexport default AffiliateList;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div,Radio,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\n\r\nclass GetOneAffiliateAddress extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            AddressN:''\r\n        }\r\n    }\r\n\r\n    getAddressTitle(){\r\n        return(\r\n            <span>\r\n               {this.props.AddresInfo.title}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    getAddressFull(){\r\n        return(\r\n            <span style={{\"color\":\"#ffae6b\"}} dangerouslySetInnerHTML={{__html: this.props.AddresInfo.operating_mode}}>\r\n\r\n            </span>\r\n        );\r\n    }\r\n\r\n    defaultCheckedR(e,n){\r\n        if(e === n){\r\n            return (\r\n                <Radio\r\n                    name=\"AffiliateAddress\"\r\n                    value={this.props.AddresInfo.id}\r\n                    description={this.getAddressFull()}\r\n                    defaultChecked onClick={() => {\r\n                        this.props.setAffiliateDefault(n);\r\n                    ;this.props.setAddressInfoUsers(n);\r\n                    }\r\n                    }\r\n                >{\r\n                    this.getAddressTitle()\r\n                }\r\n                </Radio>\r\n            );\r\n        }else{\r\n            return(\r\n                <Radio\r\n                    name=\"AffiliateAddress\"\r\n                    value={this.props.AddresInfo.id}\r\n                    description={this.getAddressFull()}\r\n                    onClick={() => {\r\n                        this.props.setAffiliateDefault(n)}\r\n                    }\r\n                >{\r\n                    this.getAddressTitle()\r\n                }\r\n                </Radio>\r\n            );\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            this.defaultCheckedR(this.props.AffiliateDefault,this.props.NumberAddress)\r\n        );\r\n    };\r\n}\r\n\r\nexport default GetOneAffiliateAddress;","import React from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div, Group, List,Cell, Switch, Select, FormLayout} from '@vkontakte/vkui/';\r\nimport axios from \"axios\";\r\n\r\n\r\nclass Preorder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loadBlockPreorder:false,\r\n            listDatePreorder:[],\r\n            SelectDatePreorder:null,\r\n            SelectTimePreorder:null\r\n        }\r\n\r\n        this.onChangeS = this.onChangeS.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({loadBlockPreorder:true});\r\n        this.getDateList();\r\n        this.setState({\r\n            SelectDatePreorder:this.props.DataInfos.SelectDatePreorder,\r\n            SelectTimePreorder:this.props.DataInfos.SelectTimePreorder\r\n        });\r\n        console.log(this.props.DataInfos.SelectDatePreorder);\r\n    }\r\n\r\n    getDateList(){\r\n        axios(global.URLAPI+'api/getPreorderDate&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'GET',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    this.setState({listDatePreorder:data.list});\r\n                    console.log(data.list);\r\n                }\r\n            })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ---Запрос СМС---  \",err);\r\n            });\r\n    }\r\n\r\n    onChangeS(e) {\r\n        const { name, value } = e.currentTarget;\r\n        // if((value === null || value === '') & name === 'city'){}else {\r\n        //     this.setState({[name]: value});\r\n        // }\r\n        this.setState({[name]: value});\r\n        this.props.setStates({[name]: value});\r\n        if(name === 'SelectDatePreorder'){\r\n            this.setState({SelectTimePreorder: null});\r\n            this.props.setStates({SelectTimePreorder: null});\r\n        }\r\n        //console.log(this.state);\r\n    }\r\n\r\n    getSelectDate(){\r\n        const ListDate = Object.keys(this.state.listDatePreorder).map((data,n)=>{\r\n            return(\r\n                <option key={data+\"preorderDates\"} value={data}>{this.state.listDatePreorder[data].title}</option>\r\n            );\r\n        });\r\n        return (\r\n            <div>\r\n            <Cell>\r\n                <Select\r\n                    top=\"Дата получения заказа\"\r\n                    key=\"datePreorder\"\r\n                    placeholder=\"Дата получения\"\r\n                    name=\"SelectDatePreorder\"\r\n                    onChange={this.onChangeS}\r\n                    defaultValue={this.props.DataInfos.SelectDatePreorder}\r\n            >{ListDate}</Select>\r\n            </Cell>\r\n            <Cell>\r\n                {this.getSelectTime()}\r\n            </Cell>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getSelectTime(){\r\n        if(this.state.SelectDatePreorder in this.state.listDatePreorder) {\r\n            var ListTimes = this.state.listDatePreorder[this.state.SelectDatePreorder].timeList;\r\n            const ListTime = Object.keys(ListTimes).map((times, n) => {\r\n                if(ListTimes[times].false === true){\r\n                    return ('');\r\n                }else {\r\n                    return (\r\n                        <option key={times + \"preorderTimes\"}\r\n                                value={times}\r\n                        >\r\n                            {ListTimes[times].title}\r\n                        </option>\r\n                    );\r\n                }\r\n            });\r\n            return (\r\n                    <Select\r\n                    top=\"Время получения заказа\"\r\n                    key=\"datePreorderTime\"\r\n                    placeholder=\"Время получения\"\r\n                    name=\"SelectTimePreorder\"\r\n                    onChange={this.onChangeS}\r\n                    defaultValue={this.props.DataInfos.SelectTimePreorder}\r\n                >{ListTime}</Select>\r\n            );\r\n        }else{\r\n            return ('');\r\n        }\r\n    }\r\n\r\n    getBlockPreorder(){\r\n        return(\r\n                <Div key=\"DivPreorder\">\r\n                    {\r\n                        this.state.loadBlockPreorder ?\r\n                            this.getSelectDate()\r\n                            :\r\n                            \"Загрузка блока выбора даты\"\r\n                    }\r\n                </Div>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.getBlockPreorder()\r\n        );\r\n    }\r\n}\r\nexport default Preorder;\r\n","import React from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div, Group, List,Cell, Switch} from '@vkontakte/vkui/';\r\nimport Icon24Place from '@vkontakte/icons/dist/24/place';\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\n\r\n\r\nclass NoPreorder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loadBlockOrder:false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({loadBlockOrder:true});\r\n    }\r\n\r\n    getBlocknoPreorder(){\r\n        return(\r\n                <Cell\r\n                    before={<Icon24Recent />}\r\n                    style={{paddingBottom:\"10px\"}}\r\n                >\r\n                    {\r\n                        this.state.loadBlockOrder ?\r\n                            <div>{this.props.typeDelivery ? \"Забрать в ближайшее время\" : \"Доставить в ближайшее время\"}</div>\r\n                            :\r\n                            \"Загрузка блока выбора даты\"\r\n                    }\r\n                </Cell>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.getBlocknoPreorder()\r\n        );\r\n    }\r\n}\r\nexport default NoPreorder;\r\n","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div,Radio, Input,FormLayout,Group,Button, List, Cell, Snackbar,Avatar,Textarea, View, Panel, PanelHeader, CellButton, HeaderButton, platform, IOS, Tooltip, Slider, Select, Placeholder } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport Icon56ErrorOutline from '@vkontakte/icons/dist/56/error_outline';\r\nimport NewOrderServer from './NewOrderServer';\r\nimport Icon24Coins from '@vkontakte/icons/dist/24/coins';\r\nimport Icon24MoneyCircle from '@vkontakte/icons/dist/24/money_circle';\r\nimport Icon24Info from '@vkontakte/icons/dist/24/info';\r\nimport Icon24Place from '@vkontakte/icons/dist/24/place';\r\nimport Icon24Flash from '@vkontakte/icons/dist/24/flash';\r\n\r\n// import SberbankIPay from 'react-sberbank-ipay';\r\n\r\nclass PaymentsPage extends React.Component{\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            SalePoints:this.props.SalePoints,\r\n            value2:0,\r\n            statusNewOrder:'11'\r\n        }\r\n\r\n        this.props.getReloadInfODeliveryPay();\r\n    }\r\n\r\n    setPointsDefaultsSale(SalePoints){\r\n        SalePoints = SalePoints*1;\r\n        this.setState({SalePoints});\r\n        this.props.setStates({SalePoints:SalePoints});\r\n    }\r\n\r\n    options () {\r\n        let options = [];\r\n        for (let i = 0; i <= this.props.userSystemInfo.dataUser.point*1; i += 1) {\r\n            options.push(<option value={`${i}`} key={`${i}`}>{i}</option>)\r\n        }\r\n        return options;\r\n    }\r\n\r\n    getCountsTimeBonus(){\r\n        var points = this.props.userSystemInfo.dataUser.point*1;\r\n        if(points >0){\r\n            return(\r\n                <div>\r\n                        <Div>Доступно бонусов для списания: <b>{points}</b></Div>\r\n                    <FormLayout>\r\n                        <Slider\r\n                            step={1}\r\n                            min={0}\r\n                            max={points}\r\n                            value={Number(this.state.SalePoints)}\r\n                            onChange={(SalePoints)=> this.setPointsDefaultsSale(SalePoints)}\r\n                            top=\"Списать в оплату\"\r\n                        />\r\n                        <Select onChange={e => this.setPointsDefaultsSale(e.target.value)} value={String(this.state.SalePoints)}>\r\n                            {this.options()}\r\n                        </Select>\r\n\r\n                    <div style={{display: 'none',justifyContent:'center'}}>\r\n                        <Button size=\"l\" stretched style={{marginRight: 10}}>Выбранное кол-во</Button>\r\n                        <Button size=\"l\" stretched style={{marginLeft: 10}}>Списать все</Button>\r\n                    </div>\r\n                    </FormLayout>\r\n                </div>);\r\n        }else{\r\n            return(<Cell className=\"IconColorOrange\" before={<Icon24Coins />}> К сожалению у Вас <b>0</b> бонусов</Cell>);\r\n        }\r\n    }\r\n\r\n\r\n    getPageSberbank(){\r\n        axios('https://arenda.ebee.me/api/testPageSBRPay&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    // console.log('Ответ сервера ',data);\r\n                    console.log(data);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Адресов---  \",err);\r\n            });\r\n    }\r\n\r\n\r\n    getSumCartItogo(){\r\n        var sum = this.props.sumCart-this.props.SalePoints;\r\n        if(this.props.DataDeliveryInfo.DeliveryPriceItog) {\r\n            sum = sum + (this.props.DataDeliveryInfo.priceDelivery * 1);\r\n        }\r\n        if(sum<0){sum = 0;}\r\n        return (sum);\r\n    }\r\n\r\n\r\n    checkMinSummaCart(){\r\n        if(this.props.DataDeliveryInfo.errorOrderFinal){\r\n            return(\r\n                <Placeholder\r\n                    icon={<Icon56ErrorOutline />}\r\n                    action={false}\r\n\r\n                >\r\n                    <h2>Сумма минимального заказа {this.props.DataDeliveryInfo.minSumOrder} рублей</h2>\r\n                    <p>Мы не можем принять Ваш заказ, так как сумма Вашей покупки, меньше необходимой</p>\r\n                </Placeholder>\r\n            );\r\n        }else{\r\n            return(\r\n                this.checkTypeDiliveryInfo()\r\n            );\r\n        }\r\n    }\r\n\r\n    PriceInfoVisual(){\r\n        if(this.props.DataDeliveryInfo.DeliveryPriceItog){\r\n            return(\r\n                <Cell before={<Icon24Info />}> Стоимость доставки: <b>{this.props.DataDeliveryInfo.priceDelivery} ₽</b></Cell>\r\n            );\r\n        }else{\r\n            return('');\r\n        }\r\n    }\r\n\r\n    getAddressDelivery(e){\r\n        if(Object.keys(this.props.DataDeliveryInfo.listAddressGlobal).length>0){\r\n            var listAddressU = Object.keys(this.props.DataDeliveryInfo.listAddressGlobal);\r\n            // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n            // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n            var DataSetAddress = this.props.DataDeliveryInfo.listAddressGlobal[listAddressU[e]];\r\n        }else{\r\n            var DataSetAddress = {id:\"error\"}\r\n        }\r\n\r\n        return DataSetAddress;\r\n\r\n    }\r\n\r\n    getAddressAffiliate(e){\r\n        if(Object.keys(this.props.DataDeliveryInfo.listAffiliateGlobal).length>0){\r\n            var listAddressU = Object.keys(this.props.DataDeliveryInfo.listAffiliateGlobal);\r\n            // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n            // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n            var DataSetAddress = this.props.DataDeliveryInfo.listAffiliateGlobal[listAddressU[e]];\r\n        }else{\r\n            var DataSetAddress = {id:\"error\"}\r\n        }\r\n\r\n        return DataSetAddress;\r\n\r\n    }\r\n\r\n    getDataOrder(){\r\n        if(this.props.DataDeliveryInfo.typeOrderDate === true) {\r\n            var checkPreorderActive = false;\r\n        }else{\r\n            var checkPreorderActive = true;\r\n        }\r\n        var DataOrder = {};\r\n\r\n        var DataAddressDelivery = this.getAddressDelivery(this.props.DataDeliveryInfo.addressDefault);\r\n        var DataAddressAffiliate = this.getAddressAffiliate(this.props.DataDeliveryInfo.AffiliateDefault);\r\n\r\n        DataOrder.idUserVK = this.props.userInfo.id;\r\n        DataOrder.typeDelivery = this.props.DataDeliveryInfo.checkedTypeDilivery;\r\n        DataOrder.AddressDelivery = {\"Info\":DataAddressDelivery,\"idAddress\":DataAddressDelivery.id};\r\n        DataOrder.idAffiliatePickup = {\"Info\":DataAddressAffiliate,\"idAffiliate\":DataAddressAffiliate.id};\r\n        DataOrder.PointsSale = this.props.SalePoints;\r\n        DataOrder.DeliverySum = this.props.DataDeliveryInfo.DeliveryPriceItog ? this.props.DataDeliveryInfo.priceDelivery : 0;\r\n        DataOrder.Comments = this.props.DataDeliveryInfo.comments;\r\n        DataOrder.DopInfo = this.props.DataDeliveryInfo.commentary;\r\n        DataOrder.typePay = this.props.DataDeliveryInfo.typePay;\r\n        DataOrder.countPerson = this.props.DataDeliveryInfo.countPerson;\r\n        DataOrder.cart = this.props.DataDeliveryInfo.cart;\r\n        DataOrder.DopProductUserSet = this.props.DataDeliveryInfo.DopProductUserSet;\r\n        DataOrder.Preorder = {\"active\":checkPreorderActive,\"datePreorder\":this.props.DataDeliveryInfo.SelectDatePreorder+'T'+this.props.DataDeliveryInfo.SelectTimePreorder};\r\n        return DataOrder;\r\n    }\r\n\r\n    getMountsDate(a,b = null){\r\n        if(b){\r\n            a = a+1;\r\n            if(a<10){return '0'+a;}\r\n        }else {\r\n            switch (a) {\r\n                case 0:\r\n                    return 'Января';\r\n                    break;\r\n                case 1 :\r\n                    return 'Февраля';\r\n                    break;\r\n                case 2 :\r\n                    return 'Марта';\r\n                    break;\r\n                case 3 :\r\n                    return 'Апреля';\r\n                    break;\r\n                case 4 :\r\n                    return 'Мая';\r\n                    break;\r\n                case 5 :\r\n                    return 'Июня';\r\n                    break;\r\n                case 6 :\r\n                    return 'Июля';\r\n                    break;\r\n                case 7 :\r\n                    return 'Августа';\r\n                    break;\r\n                case 8 :\r\n                    return 'Сенятбря';\r\n                    break;\r\n                case 9 :\r\n                    return 'Октября';\r\n                    break;\r\n                case 10 :\r\n                    return 'Ноября';\r\n                    break;\r\n                case 11 :\r\n                    return 'Декабря';\r\n                    break;\r\n                default:\r\n                    return a;\r\n            }\r\n        }\r\n    }\r\n\r\n    returnPlaceholderPreorder(a){\r\n        switch(a){\r\n            case true:\r\n                var dateObj = new Date(this.props.DataDeliveryInfo.SelectDatePreorder);\r\n                //var formated_date = dateObj.format(\"dd.mm.YYYY\");\r\n\r\n\r\n                return(<div>\r\n                        <Group title=\"Оплата бонусными баллами\">\r\n                            {this.getCountsTimeBonus()}\r\n\r\n                        </Group>\r\n                        <Group title=\"Итоговые данные по заказу\">\r\n                            <List>\r\n                                <Cell\r\n                                    before={<Icon24Place />}\r\n                                    description={<span>\r\n                                      <i>{this.props.DataDeliveryInfo.addressOrderInfoUser}</i>\r\n                                  </span>}\r\n                                    size=\"l\">\r\n                                    {this.props.checkedTypeDilivery === 0 ? \" Доставка курьером\" : \" Заберу заказ сам\"}\r\n                                </Cell>\r\n                                <Cell\r\n                                before={<Icon24Flash />}\r\n                                description={this.props.DataDeliveryInfo.typeOrderDate ? <i> В ближайшее время</i> :\r\n                                    <i> {dateObj.getDate()+' '+this.getMountsDate(dateObj.getMonth(),false)+' '+dateObj.getUTCFullYear()+'г. к '+this.props.DataDeliveryInfo.SelectTimePreorder}</i>\r\n                                }\r\n                                >\r\n                                    Время получения заказа\r\n                                </Cell>\r\n                                <Cell before={<Icon24Coins />}> Списано бонусов: <b>{this.props.SalePoints}</b></Cell>\r\n                                {this.PriceInfoVisual()}\r\n                                <Cell before={<Icon24MoneyCircle />}> К оплате: <b className=\"OrangeColor\">{this.getSumCartItogo()} ₽</b></Cell>\r\n                            </List>\r\n                        </Group>\r\n                        <Group title=\"Способ оплаты\">\r\n                            <List>\r\n                                <Cell>\r\n                                    <Radio name=\"typePayments\" value=\"1\"\r\n                                           description=\"Оплата наличными при получении\"\r\n                                           defaultChecked={this.props.DataDeliveryInfo.typePay === 1 ? true : false}\r\n                                           onClick={() => {this.props.setStates({typePay:1})}}>Наличные</Radio>\r\n                                    <Radio name=\"typePayments\" value='2' description=\"Оплата банковской картой, по терминалу\"\r\n                                           defaultChecked={this.props.DataDeliveryInfo.typePay === 2 ? true : false}\r\n                                           onClick={() => {this.props.setStates({typePay:2})}}>Терминал</Radio>\r\n                                    {/*<Radio name=\"typePayments\" value='2' description=\"Оплата банковской картой, онлайн\"*/}\r\n                                    {/*       defaultChecked={this.props.DataDeliveryInfo.typePay === 0 ? true : false}*/}\r\n                                    {/*       onClick={() => {this.props.setStates({typePay:0})}}>Онлайн</Radio>*/}\r\n\r\n                                </Cell>\r\n                                <Cell>\r\n                                    <Div>\r\n                                        <NewOrderServer setStates={this.setState.bind(this)}\r\n                                                        userInfo={this.props.userInfo}\r\n                                                        DataOrderInfo={this.getDataOrder()}\r\n                                                        getPageOkOrderSet={this.props.setStates.bind(this)}\r\n                                                        setOkNewOrderView={this.props.setOkNewOrderView.bind(this)}\r\n                                                        sumItog={this.getSumCartItogo()}\r\n\r\n                                                        showModalPayment={this.props.showModal.bind(this)}\r\n                                        />\r\n                                    </Div>\r\n                                </Cell>\r\n                            </List>\r\n                        </Group>\r\n                    </div>\r\n                );\r\n                break;\r\n            default:\r\n                return(\r\n                    <Placeholder\r\n                        icon={<Icon56ErrorOutline />}\r\n                        action={<Button size=\"l\" level=\"tertiary\" onClick={()=>{this.props.action({activePanel: \"dilivery\"});}}>Указать вариант получения</Button>}\r\n\r\n                    >\r\n                        <h2>Не указана дата и время получения</h2>\r\n                        <p>Пожалуйста, вернитесь на вкладку \"Оформление\" и укажите дату получения заказа.</p>\r\n                    </Placeholder>\r\n                );\r\n        }\r\n    }\r\n\r\n    checkPreorderType(){\r\n        if(this.props.DataDeliveryInfo.typeOrderDate === false) {\r\n            if(this.props.DataDeliveryInfo.SelectDatePreorder === null){\r\n                return this.returnPlaceholderPreorder(false);\r\n            }else{\r\n                if(this.props.DataDeliveryInfo.SelectTimePreorder === null){\r\n                    return this.returnPlaceholderPreorder(false);\r\n                }else{\r\n                    return this.returnPlaceholderPreorder(true);\r\n                }\r\n            }\r\n\r\n        }else{\r\n            return this.returnPlaceholderPreorder(true);\r\n        }\r\n    }\r\n\r\n\r\n    checkTypeDiliveryInfo(){\r\n        if(this.props.checkedTypeDilivery === 0 && this.props.addressDefault === null){\r\n            return(\r\n                <Placeholder\r\n                    icon={<Icon56ErrorOutline />}\r\n                    action={<Button size=\"l\" level=\"tertiary\" onClick={()=>{this.props.action({activePanel: \"dilivery\"});}}>Выбрать адрес</Button>}\r\n\r\n                >\r\n                <h2>Вы не выбрали адрес доставки</h2>\r\n                    <p>Пожалуйста, вернитесь на вкладку \"Оформление\" и укажите адрес доставки, либо адрес точки самовывоза, откуда Вам будет удобно забрать заказ.</p>\r\n                </Placeholder>\r\n\r\n            );\r\n        }else{\r\n            return (this.checkPreorderType());\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.checkMinSummaCart()\r\n        );\r\n    }\r\n}\r\n\r\nexport default PaymentsPage;","import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport {Div,Radio, Input,FormLayout,Group,Button, List, Cell, Snackbar,Avatar,Textarea, View, Panel, PanelHeader, CellButton, HeaderButton, platform, IOS, Tooltip, Slider, Select, Placeholder } from '@vkontakte/vkui';\r\nimport ym from 'react-yandex-metrika';\r\n\r\nclass NewOrderServer extends React.Component{\r\n\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n\r\n    }\r\n\r\n    setDataServer(){\r\n        this.props.setStates({statusNewOrder:'Запрос прошел'});\r\n        axios(global.URLAPI+'api/setNewOrder&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    idUserVK: this.props.userInfo.id,\r\n                    dataOrder:this.props.DataOrderInfo\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                   // console.log('Ответ сервера ',data);\r\n                    if(data.status == \"OK\"){\r\n                        if(data.infoNewOrder.typePayment == '0'){\r\n                            this.props.showModalPayment('MODAL_PAYMENT_FORM');\r\n                            setTimeout(function(){\r\n                                var win = document.getElementById(\"framePayments\");\r\n                                console.log(document.getElementById(\"framePayments\").contentWindow.postMessage({\"idOrder\":data.infoNewOrder.idNewOrder,\"summaPayment\":data.infoNewOrder.sumPaymentItog,idPointsPaymentToken:data.infoNewOrder.idPointsPaymentToken}, \"*\"));\r\n                            },500);\r\n                        }else{\r\n                            this.props.getPageOkOrderSet({newOrderStats:true});\r\n                            this.props.setOkNewOrderView();\r\n                        }\r\n\r\n                        try{\r\n                            if(global.Metrika.Markers[4].active == '1') {\r\n                                ym('reachGoal', global.Metrika.Markers[4].marker);\r\n                            }\r\n                        }catch (e) {\r\n\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Адресов---  \",err);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Button size=\"xl\" onClick={()=>{this.setDataServer()}} className=\"WeightFontBold\">Завершить заказ</Button>\r\n        );\r\n    };\r\n}\r\n\r\nexport default NewOrderServer;","import React, {useState} from 'react';\r\n\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport {Div,PanelHeader,HeaderButton, IOS,platform,Placeholder} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport ProductList from \"./catalog/ProductList\";\r\nimport Icon28Search from '@vkontakte/icons/dist/28/search';\r\nimport ym from 'react-yandex-metrika';\r\n\r\nrequire('./global/index.js');\r\n\r\nclass SearchResultProductBlock extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            arrayProduct:this.props.arrayProduct,\r\n            settingsFilterSearch:{\r\n                typeSearch: global.settingsFilterSearch.typeSearch\r\n            }\r\n            ,\r\n            search: global.searchProduct\r\n        }\r\n    }\r\n\r\n    hndlClick = (aP) => {\r\n        //console.log('--- ', 'Нажали на кнопку '+aP);\r\n        this.setState({ activePanel: aP });\r\n        //global.settingsFilterSearch.typeProduct = false;\r\n    };\r\n\r\n    setProductModal = (aP) => {\r\n        // console.log('--- ', 'Установили товар в модалку '+aP+' - - - -XTTT');\r\n        this.setState({ productModal: aP })\r\n    };\r\n\r\n    setActiveCategory = (aP) => {\r\n        // console.log('--- ', 'Установили категорию '+aP);\r\n        this.setState({ ActiveCategory: aP })\r\n    };\r\n\r\n    getCountButton(typeProduct,counts,setCart){\r\n        const Buttons =\r\n            <div className=\"CounterInCart\">\r\n                <div className=\"minus\" onClick={() => {setCart(typeProduct,'-');}}>\r\n                    -\r\n                </div>\r\n                {counts}\r\n                <div className=\"pluse\" onClick={() => {setCart(typeProduct);}}>\r\n                    +\r\n                </div>\r\n            </div>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n\r\n    getButtonInCartProduct(typeProduct,setCart){\r\n        //console.log(this.props.CartProducts,'---0---');\r\n        if(!!this.props.CartProducts){\r\n            var ButOk = false;\r\n            var id_CartPr = '';\r\n            this.props.CartProducts.map((data,key)=>{\r\n                if(data.id_Product === typeProduct.id_Product & data.type_product === typeProduct.type_product){\r\n                    ButOk = true;\r\n                    id_CartPr = key;\r\n                }\r\n            });\r\n\r\n            if(ButOk === true){\r\n                //console.log('Выполняется условие товар есть');\r\n                return  this.getCountButton(typeProduct,this.props.CartProducts[id_CartPr]['count'],setCart);\r\n            }else{\r\n                //console.log('Выполняется условие товара нет');\r\n                return this.getInCarts(typeProduct,setCart);\r\n            }\r\n        }else{\r\n            //console.log('Выполняется условие корзина пуста, вывод просто кнопки');\r\n            return this.getInCarts(typeProduct,setCart);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getInCarts(typeProduct,setCart){\r\n        // console.log(setCart);\r\n        const Buttons =\r\n            <button onClick={() => {\r\n                setCart(typeProduct);\r\n                try {\r\n                    if (global.Metrika.Markers[1].active == '1') {\r\n                        ym('reachGoal', global.Metrika.Markers[1].marker);\r\n                    }else{\r\n                        //   console.log('Цель отключена');\r\n                    }\r\n                }catch (e) {\r\n                    // console.log(e,global.Metrika);\r\n                }\r\n            }}>\r\n                В корзину\r\n            </button>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.state.arrayProduct);\r\n    }\r\n\r\n    getArrayCategoryProduct(){\r\n        const ArCat = Object.keys(this.state.arrayProduct);\r\n        const ResultProductList =  ArCat.map((data,key)=>{\r\n            //console.log(data,key, 'оророро');\r\n\r\n            var ResultCatsSearch =\r\n                <ProductList\r\n                    onClickProduct={this.hndlClick.bind(this,'Panels_Product')}\r\n                    productsLists={this.state.arrayProduct[data].ProductList}\r\n                    key={this.state.arrayProduct[data].id_Category}\r\n                    idCategorys={data}\r\n                    nameCategory=\"sets\"\r\n                    setCart={this.props.setCart.bind(this)}\r\n                    getButtonInCartProduct={this.getButtonInCartProduct.bind(this)}\r\n                    setProductModal={this.setProductModal.bind(this)}\r\n                    searchProduct={this.props.varSearch}\r\n\r\n                    showModal={this.props.showModal.bind(this)}\r\n                    hideModals={this.props.hideModals.bind(this,null)}\r\n\r\n                    clrStatus={false}\r\n                />;\r\n\r\n            return (ResultCatsSearch);\r\n\r\n        });\r\n        return ResultProductList;\r\n    }\r\n\r\n    getProductSearchResult(OPT) {\r\n\r\n        return (\r\n            this.getArrayCategoryProduct()\r\n        );\r\n    }\r\n\r\n    getStatusSearch(){\r\n        var statusText = false;\r\n        var statusFiltes = false;\r\n\r\n        this.props.varSearch === '' || this.props.varSearch === undefined ? statusText = false : statusText = true;\r\n        global.settingsFilterSearch.typeProduct === false ? statusFiltes = false : statusFiltes = true;\r\n\r\n        if(statusFiltes === true || statusText === true){\r\n            //console.log(statusFiltes,statusText);\r\n            return true;\r\n        }else{\r\n            //console.log(statusFiltes,statusText);\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render () {\r\n\r\n        const osname = platform();\r\n\r\n\r\n\r\n\r\n        return (<Div style={{background:\"#FFFFFF\",paddingTop:\"60px\"}}>\r\n            {\r\n                this.getStatusSearch() === false ?\r\n                    <Placeholder\r\n                        icon={<Icon28Search />}\r\n                        header=\"Поиск пуст\"\r\n                    >\r\n                       Начните вводить название товара или выберите фильтр\r\n                    </Placeholder>\r\n                    :\r\n                    this.getProductSearchResult()\r\n            }\r\n        </Div>);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SearchResultProductBlock;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { platform, IOS } from '@vkontakte/vkui';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\n\r\nimport persik from '../img/persik.png';\r\nimport './Persik.css';\r\n\r\nconst osName = platform();\r\n\r\nconst Persik = props => (\r\n\t<Panel id={props.id}>\r\n\t\t<PanelHeader\r\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\r\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\r\n\t\t\t</HeaderButton>}\r\n\t\t>\r\n\t\t\tPersik\r\n\t\t</PanelHeader>\r\n\t\t<img className=\"Persik\" src={persik} alt=\"Персик Это Кот\"/>\r\n\t</Panel>\r\n);\r\n\r\nPersik.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Persik;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { platform, IOS } from '@vkontakte/vkui';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport { View, Group, List, Cell } from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nimport persik from '../img/persik.png';\r\nimport './Persik.css';\r\n\r\nconst osName = platform();\r\n\r\nconst Persik = props => (\r\n    <Panel id={props.id}>\r\n        <PanelHeader\r\n            left={<HeaderButton onClick={props.go} data-to=\"home\">\r\n                {osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\r\n            </HeaderButton>}\r\n        >\r\n            Persik\r\n        </PanelHeader>\r\n        <Div>\r\n            <h2 size=\"x3\" level=\"1\">Это не совсем персик</h2>\r\n            <View activePanel=\"main\">\r\n                <Panel id=\"main\">\r\n                    <PanelHeader>VKUI</PanelHeader>\r\n                    <Group title=\"Items\">\r\n                        <List>\r\n                            <Cell>Hello</Cell>\r\n                            <Cell>World</Cell>\r\n                        </List>\r\n                    </Group>\r\n                </Panel>\r\n            </View>\r\n        </Div>\r\n        <img className=\"Persik\" src={persik} alt=\"Персик Это Кот\"/>\r\n    </Panel>\r\n);\r\n\r\nPersik.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    go: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Persik;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nimport UserInfo from './ProfileUser/UserInfo';\r\nimport Persik from './Persik';\r\nimport NoPersik from './Nopersik';\r\n\r\nconst ProfileUserPage = (dataUsers) => {\r\n\tconst [activePanel, setActivePanel] = useState('homeUsers');\r\n\tconst [fetchedUser, setUser] = useState(null);\r\n\t//const [popout, setPopout] = useState(<ScreenSpinner size='large' />);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\t// connect.subscribe(({ detail: { type, data }}) => {\r\n\t\t// \tif (type === 'VKWebAppUpdateConfig') {\r\n\t\t// \t\tconst schemeAttribute = document.createAttribute('scheme');\r\n\t\t// \t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\r\n\t\t// \t\tdocument.body.attributes.setNamedItem(schemeAttribute);\r\n\t\t// \t}\r\n\t\t// });\r\n\t\tasync function fetchData() {\r\n\t\t\tconst user = await connect.sendPromise('VKWebAppGetUserInfo');\r\n\t\t\tsetUser(user);\r\n\t\t\t//setPopout(null);\r\n\t\t\t//console.log(connect);\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\tconst go = e => {\r\n\t\tsetActivePanel(e.currentTarget.dataset.to);\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<View activePanel={activePanel}>\r\n\t\t\t<UserInfo\r\n\t\t\t\tid='homeUsers'\r\n\t\t\t\tfetchedUser={fetchedUser}\r\n\t\t\t\tgo={go}\r\n\t\t\t\tdataUsers={dataUsers}\r\n\t\t\t\tsetActivePanels={setActivePanel.bind(this)}\r\n\t\t\t\tsetStatusNotification={dataUsers.setStatusNotification.bind(this)}\r\n\t\t\t\tsetShowUserOrderList={dataUsers.setShowUserOrderList.bind(this)}\r\n\t\t\t/>\r\n\t\t</View>\r\n\t);\r\n}\r\n\r\nexport default ProfileUserPage;\r\n\r\n","import 'core-js/features/map';\r\nimport 'core-js/features/set';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport App from './StartPageVKapp';\r\n// import App from './App2';\r\n// import registerServiceWorker from './sw';\r\nimport { YMInitializer } from 'react-yandex-metrika';\r\n\r\n\r\n// Init VK  Mini App\r\nconnect.send('VKWebAppInit');\r\n\r\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\r\n// расскомментируйте строку с registerServiceWorker();\r\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\r\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\r\n// registerServiceWorker();\r\n\r\nReactDOM.render(\r\n        <App />\r\n    , document.getElementById('root'));\r\n\r\nReactDOM.render(\r\n    <YMInitializer\r\n        accounts={[87591449]}\r\n        options = { {\r\n            clickmap:true,\r\n            trackLinks:true,\r\n            accurateTrackBounce:true,\r\n            webvisor:true\r\n        } }\r\n        version = \"2\"\r\n    />\r\n    , document.getElementById('Metrickss'));\r\n","// globals/index.js\r\n\r\nglobal.URLHTTP = 'https:';\r\nglobal.URL = '//starfish.ebee.me/';\r\nglobal.URLAPI = 'https://starfish.ebee.me/';\r\n\r\nglobal.CityIdSystem = '&CityIdSystem=1';\r\n\r\n global.phonenumberCollVisual = '+7 (921) 900-25-59';\r\n global.phonenumberColl = 'tel:+79219002559';\r\n global.linkSocSeti = '//vk.com/im?sel=-95244578';\r\n\r\nglobal.ApiKey = '03478f08258a5b0e7f4a1e83dae33da9'+global.CityIdSystem;\r\n\r\nglobal.CityListBind = [];\r\n\r\nglobal.searchProduct = '';\r\n\r\nglobal.settingsFilterSearch = {\r\n    typeSearch:0,\r\n    typeProduct: false\r\n}\r\n\r\nglobal.ii =0;\r\n\r\nglobal.Metrika = {}","module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","import React from 'react';\r\nimport { Div, Search, Cell } from '@vkontakte/vkui';\r\n// import Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\n// import Icon24Back from '@vkontakte/icons/dist/24/back';\r\n// import ModalProduct from '../ModalProduct.js';\r\nimport OneProduct from \"./OneProduct\";\r\nimport ym from 'react-yandex-metrika';\r\n\r\nimport axios from \"axios\";\r\nimport Icon24Filter from '@vkontakte/icons/dist/24/filter';\r\nrequire('../../panels/global/index.js');\r\n\r\nclass ProductList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activePanel: 'panel1',\r\n            nameCategory: 'none',\r\n            productsLists: null,\r\n            products:[{\"1\":{\"title\":\"ЕКАРНЫЙ БАБАЙ\"}}],\r\n            // activefilter:null\r\n        }\r\n\r\n    }\r\n\r\n    // ClickOneFilter(a){\r\n    //     this.setState({activefilter:a});\r\n    // }\r\n    //\r\n    // ClickOneFilterDeleted(){\r\n    //     this.setState({activefilter:null});\r\n    // }\r\n\r\n    render() {\r\n\r\n        function ReverceCatalog(Pr, filtercategorys = null){\r\n            //\r\n            // var res = Object.keys(Pr).reduceRight(function (arr, last, index, coll) {\r\n            //     // console.log(last, index);\r\n            //     return (arr = arr.concat(last))\r\n            // }, []);\r\n\r\n            let ProductLists = [];\r\n            let ProductsListActive = Pr;\r\n            Object.keys(ProductsListActive).map((id,num)=>{\r\n                // console.log(ProductsListActive[id]);\r\n                ProductsListActive[id].map((type)=>{\r\n                    ProductLists.push({...type,\r\n                        id:id,\r\n                        img:\"https:\"+type.img\r\n                    });\r\n                });\r\n                // ProductList.push(OneProducts);\r\n                //return OneProducts;\r\n            });\r\n\r\n            let SortCategory = ProductLists.sort(( a, b ) => a.position - b.position);\r\n\r\n            let resS = [];\r\n            SortCategory.map((dd,num)=>{\r\n                resS.push(dd.id_Product);\r\n            });\r\n            // console.log(SortCategory,resS);\r\n\r\n            return resS;\r\n        }\r\n\r\n        function SearchProductTitle(Pr,DSr){\r\n            //console.log(Pr);\r\n\r\n            const Objs = Object.keys(Pr);\r\n\r\n            const retr = [];\r\n\r\n           Objs.forEach(function (oneProduct, keyId, array) {\r\n               if(testInput(DSr, Pr[oneProduct][0]['title'])){\r\n                   retr[keyId] = oneProduct;\r\n                  // console.log(Pr[oneProduct][0]);\r\n               }\r\n                }\r\n            );\r\n            return retr;\r\n        }\r\n\r\n        function SearchProductFilterCategory(Pr,filterActive = null){\r\n            // console.log('Фильтруем');\r\n\r\n            const Objs = Object.keys(Pr);\r\n\r\n            const retr = [];\r\n\r\n           Objs.forEach(function (oneProduct, keyId, array) {\r\n               if(testInput(filterActive, Pr[oneProduct][0]['filters'][0])){\r\n                   retr[keyId] = oneProduct;\r\n                  // console.log(Pr[oneProduct][0]);\r\n               }\r\n                }\r\n            );\r\n            return retr;\r\n        }\r\n\r\n\r\n        function SearchProductDescription(Pr,DSr){\r\n            //console.log(Pr);\r\n\r\n            const Objs = Object.keys(Pr);\r\n\r\n            const retr = [];\r\n\r\n           Objs.forEach(function (oneProduct, keyId, array) {\r\n               if(testInput(DSr, Pr[oneProduct][0]['description'])){\r\n                   retr[keyId] = oneProduct;\r\n               }\r\n                }\r\n            );\r\n            return retr;\r\n        }\r\n\r\n\r\n        function SearchProductType(Pr,DSr,ListIdProduct){\r\n            const retr = [];\r\n\r\n            ListIdProduct.forEach(function (oneProduct, keyId, array) {\r\n               if(testType(DSr, Pr[oneProduct][0]['modyficate'])){\r\n                   retr[keyId] = oneProduct;\r\n               }\r\n           }\r\n            );\r\n            return retr;\r\n        }\r\n\r\n        function testType(re,modyficate) {\r\n            var status = false;\r\n            if(modyficate.length <=0){\r\n                status = false;\r\n            }else{\r\n                modyficate.forEach(function(oneProduct, keyId, array){\r\n                    if(oneProduct.mod === re){\r\n                        status = true;\r\n                    }\r\n                });\r\n            }\r\n\r\n            return status;\r\n        }\r\n\r\n        function testInput(re, str) {\r\n\r\n            if(str === undefined){\r\n                str = '';\r\n            }\r\n\r\n            console.log('Выполняем замену тут ',re, str);\r\n\r\n            re = re.replace(/\\\\/g,\"\").replace(/ /g,\"_\").replace(/-/g,\"_\").toLowerCase();\r\n            str = str.replace(/\\\\/g,\"\").replace(/ /g,\"_\").replace(/-/g,\"_\").toLowerCase();\r\n\r\n            var midstring;\r\n            if (str.search(re) != -1) {\r\n                midstring = true;\r\n            } else {\r\n                midstring = false;\r\n            }\r\n\r\n            return midstring;\r\n        }\r\n\r\n        function compare(a, b) {\r\n            if (a.price < b.price) {\r\n                return -1;\r\n            }\r\n            if (a.price > b.price) {\r\n                return 1;\r\n            }\r\n            // a должно быть равным b\r\n            return 0;\r\n        }\r\n\r\n        function comparePrice(Pr){\r\n            //console.log(Pr);\r\n            return Object.keys(Pr).sort(compare)\r\n        }\r\n\r\n\r\n        function ArrayProducts(Pr,ClickProductF,setProductModal,setCart, getButtonInCartProduct,ReverceStatus = 0,SearchText = null,filtercategorys = null) {\r\n            var CatalogLists = [];\r\n\r\n            // console.log('Фильтры '+filtercategorys);\r\n\r\n            if(filtercategorys!==null){\r\n                CatalogLists = SearchProductFilterCategory(Pr,filtercategorys);\r\n            }else {\r\n\r\n                if (ReverceStatus === 0) {\r\n                    CatalogLists = ReverceCatalog(Pr, filtercategorys);\r\n                }\r\n\r\n                if (ReverceStatus === 1) {\r\n                    CatalogLists = comparePrice(Pr);\r\n                }\r\n\r\n                if (ReverceStatus === 2) {\r\n                    CatalogLists = Object.keys(Pr);\r\n                }\r\n\r\n                if (ReverceStatus === 3) {\r\n                    if (global.settingsFilterSearch.typeSearch === 0) {\r\n                        CatalogLists = SearchProductTitle(Pr, SearchText);\r\n                    } else {\r\n                        CatalogLists = SearchProductDescription(Pr, SearchText);\r\n                    }\r\n                    try {\r\n                        if (global.Metrika.Markers[2].active == '1') {\r\n                            ym('reachGoal', global.Metrika.Markers[2].marker);\r\n                        }\r\n                    } catch (e) {\r\n\r\n                    }\r\n                }\r\n            }\r\n\r\n            if(global.settingsFilterSearch.typeProduct === false){}else{\r\n                CatalogLists = SearchProductType(Pr, global.settingsFilterSearch.typeProduct,CatalogLists);\r\n            }\r\n\r\n\r\n            //console.log('|||||||||||||||||||||||||||||||',CatalogLists.length);\r\n\r\n            const ArrayPr = CatalogLists.map((oneProduct, keyId) =>\r\n                <OneProduct\r\n                    key={'Products_'+keyId}\r\n                    product={Pr[oneProduct]}\r\n                    ClickProduct={ClickProductF.bind(this)}\r\n                    setCart={setCart.bind(this)}\r\n                    setProductModal={setProductModal.bind(this)}\r\n                    getButtonInCartProduct={getButtonInCartProduct.bind(this)}\r\n                />\r\n            );\r\n\r\n            if(ArrayPr.length <=0){\r\n               return false;\r\n            }else{\r\n                return ArrayPr;\r\n            }\r\n\r\n        }\r\n\r\n\r\n        function ShowProductCategory(nameCategorys){\r\n            // console.log('ShowProductCategory ',nameCategorys);\r\n            if(nameCategorys.nameCategorys === 'sets'){\r\n                // console.log('d-d-d-d-',nameCategorys.productsLists[nameCategorys.idCategory]);\r\n                const resGetSets = <GetSets\r\n                    SearchState={nameCategorys.SearchState}\r\n                    key={nameCategorys.key}\r\n                    names={nameCategorys.nameCategorys}\r\n                    ProductArray={nameCategorys.productsLists}\r\n                    ClickProduct={nameCategorys.ClickProduct.bind(this)}\r\n                    setCart={nameCategorys.setCart.bind(this)}\r\n                    setProductModal={nameCategorys.setProductModal.bind(this)}\r\n                    getButtonInCartProduct={nameCategorys.getButtonInCartProduct.bind(this)}\r\n                    clrStatus={nameCategorys.clrStatus}\r\n                    filterCategorys={nameCategorys.filterCategorys}\r\n                    filtersOPT={nameCategorys.filtersOPT}\r\n                />;\r\n                if(resGetSets === false){\r\n\r\n                    return false;\r\n                }else{\r\n                    //console.log(resGetSets);\r\n                    return (resGetSets);\r\n                }\r\n\r\n            }\r\n            if(nameCategorys.nameCategorys === 'sushi'){\r\n                return (<GetSushi names={nameCategorys.nameCategorys}/>);\r\n            }\r\n            if(nameCategorys.nameCategorys === 'roli'){\r\n                return (<GetRoli names={nameCategorys.nameCategorys}/>);\r\n            }else{\r\n                return (<GetNoneCat names={nameCategorys.nameCategorys}/>);\r\n            }\r\n\r\n        }\r\n\r\n        function GetButtonFilterCategory(filters,clickOneFilter,clickOneFilterDeleted,activeFilter){\r\n            if(typeof (filters) === 'object' ){\r\n              return  Object.keys(filters).map((numb,int)=>{\r\n                  if(numb===activeFilter){\r\n                      return(\r\n                          <div className=\"activeFiltersCategorys\" onClick={()=>{clickOneFilterDeleted(numb)}}>{filters[numb]}</div>\r\n                      )\r\n                  }else{\r\n                      return(\r\n                          <div className=\"FiltersCategorys\" onClick={()=>{clickOneFilter(numb)}}>{filters[numb]}</div>\r\n                      )\r\n                  }\r\n              });\r\n            }else{\r\n                return false;\r\n            }\r\n        }\r\n\r\n\r\n        function GetSets(ArrayPr) {\r\n          // console.log('SearchState ',ArrayPr.SearchState );\r\n            if(ArrayPr.SearchState == '' || ArrayPr.SearchState === false || ArrayPr.SearchState === undefined){\r\n                return (\r\n                    <div>\r\n                        {ArrayPr.clrStatus === true ? <div className=\"clrHeight\"></div> : \"\" }\r\n                        <div className=\"ScrollBarFilter\" style={{\r\n                            display:\"flex\",\r\n                            justifyContent:\"flex-start\",\r\n                            alignItems:\"center\",\r\n                            flexWrap:\"nowrap\",\r\n                            overflow:\"auto\",\r\n                            paddingTop:15,\r\n                        }}>{GetButtonFilterCategory(ArrayPr.filterCategorys,ArrayPr.filtersOPT.clickOneFilter.bind(this),ArrayPr.filtersOPT.clickOneFilterDeleted.bind(this),ArrayPr.filtersOPT.activefilter)}</div>\r\n                        <Div id={\"block_categorys_\"+ArrayPr.names} key={\"block_categorys_\"+ArrayPr.names} className=\"blockCategoryFlex\">\r\n                            {ArrayProducts(ArrayPr.ProductArray,ArrayPr.ClickProduct.bind(this),ArrayPr.setProductModal.bind(this),ArrayPr.setCart.bind(this),ArrayPr.getButtonInCartProduct.bind(this),0,null,ArrayPr.filtersOPT.activefilter)}\r\n                        </Div>\r\n                    </div>\r\n                );\r\n            }else{\r\n\r\n                const ResPrVal = ArrayProducts(ArrayPr.ProductArray,ArrayPr.ClickProduct.bind(this),ArrayPr.setProductModal.bind(this),ArrayPr.setCart.bind(this),ArrayPr.getButtonInCartProduct.bind(this),3,ArrayPr.SearchState);\r\n\r\n                if(ResPrVal === false){\r\n                   //console.log('Нет данных',ResPrVal);\r\n                    return false;\r\n                }else{\r\n                    return (\r\n                        <div>\r\n                        {ArrayPr.clrStatus === true ? <div className=\"clrHeight\"></div> : \"\" }\r\n                            <Div id={\"block_categorys_\"+ArrayPr.names} key={\"block_categorys_\"+ArrayPr.names} className=\"blockCategoryFlex\">\r\n                                {ResPrVal}\r\n                            </Div>\r\n                        </div>\r\n                    );\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n\r\n        function SearchFn(ArrayPr,SrText) {\r\n           //console.log('ArrayPr ',ArrayPr);\r\n            return (\r\n                <Div id={\"block_categorys_\"+ArrayPr.names} key={\"block_categorys_\"+ArrayPr.names} className=\"blockCategoryFlex\">\r\n                    {ArrayProducts(ArrayPr.ProductArray,ArrayPr.ClickProduct.bind(this),ArrayPr.setProductModal.bind(this),ArrayPr.setCart.bind(this),ArrayPr.getButtonInCartProduct.bind(this),3,SrText)}\r\n                </Div>\r\n            );\r\n        }\r\n\r\n        function GetSushi(names) {\r\n            return (\r\n                <Div id={names.names} className=\"blockCategoryFlex\">\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Суши\" src={global.URLAPI+\"/images/tovars/croppedImg_93445642.png\"}/></Div><Div className=\"titleProduct\">Суши с креветкой</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Суши\" src={global.URLAPI+\"/images/tovars/croppedImg_93445642.png\"}/></Div><Div className=\"titleProduct\">Суши с лососем</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Суши\" src={global.URLAPI+\"/images/tovars/croppedImg_93445642.png\"}/></Div><Div className=\"titleProduct\">Суши краб</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Суши\" src={global.URLAPI+\"/images/tovars/croppedImg_93445642.png\"}/></Div><Div className=\"titleProduct\">Суши копченый лосот</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                </Div>\r\n            );\r\n        }\r\n\r\n        function GetRoli(names) {\r\n            return (\r\n                <Div id={names.names} className=\"blockCategoryFlex\">\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Роллы\" src={global.URLAPI+\"/images/tovars/croppedImg_1061187804.jpeg\"}/></Div><Div className=\"titleProduct\">Ролл с тунцом</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\"> <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Роллы\" src={global.URLAPI+\"/images/tovars/croppedImg_1061187804.jpeg\"}/></Div><Div className=\"titleProduct\">Ролл с лососем</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\"> <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Роллы\" src={global.URLAPI+\"/images/tovars/croppedImg_1061187804.jpeg\"}/></Div><Div className=\"titleProduct\">Ролл Филадельфия</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\"> <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Роллы\" src={global.URLAPI+\"/images/tovars/croppedImg_1061187804.jpeg\"}/></Div><Div className=\"titleProduct\">Филадельфия с крабом</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\"> <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                </Div>\r\n            );\r\n        }\r\n\r\n        function GetNoneCat(names){\r\n            return (\r\n                <Div id={names} className=\"blockCategoryFlex\">\r\n                <h1>К сожаление категория пуста!</h1>\r\n                </Div>\r\n            );\r\n        }\r\n\r\n\r\n\r\n        // function GetModalProduct(product){\r\n        //     return(\r\n        //\r\n        //     )\r\n        // }\r\n\r\n        if(this.props.clrStatus === undefined){\r\n            var clrStatus = true;\r\n        }else{\r\n            var clrStatus = this.props.clrStatus;\r\n        }\r\n\r\n        const ResultCategoryReturn = <ShowProductCategory\r\n            SearchState={this.props.searchProduct}\r\n            productsLists={this.props.productsLists}\r\n            nameCategorys={this.props.nameCategory}\r\n            filterCategorys={this.props.filterCategorys}\r\n            idCategory={this.props.idCategorys}\r\n            ClickProduct={this.props.onClickProduct.bind(this,'Panels_Product')}\r\n            setCart={this.props.setCart.bind(this)}\r\n            setProductModal={this.props.setProductModal.bind(this)}\r\n            getButtonInCartProduct={this.props.getButtonInCartProduct.bind(this)}\r\n            clrStatus={clrStatus}\r\n\r\n            filtersOPT={{activefilter: this.props.activefilter,clickOneFilter:this.props.ClickOneFilter.bind(this),clickOneFilterDeleted:this.props.ClickOneFilterDeleted.bind(this)}}\r\n\r\n        />;\r\n\r\n        if(ResultCategoryReturn === false){\r\n            return (\"\");\r\n        }else{\r\n            //console.log(ResultCategoryReturn);\r\n            return (\r\n                ResultCategoryReturn\r\n            );\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default ProductList;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Alert, Div,Input,FormLayout, Button, Select, Search, Footer, Cell } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nclass FormNewAddress extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n                city: '',\r\n                street: '',\r\n                streetSearch: '',\r\n                home: '',\r\n                entrance: '',\r\n                level: '',\r\n                flat: '',\r\n                comment:'',\r\n            streetCityVisual:'',\r\n            streetName:null,\r\n            streetList:{},\r\n            search:'',\r\n            pauseLoadStreet:true\r\n        }\r\n\r\n        this.addressItems = [\r\n            // { label: 'Город', name: 'city', statusChech:'yes', minValue:5, valPls:'' },\r\n            //{ label: 'Название улицы', name: 'street', statusChech:'yes', minValue:4, valPls:'' },\r\n            { label: '№ дома', name: 'home', statusChech:'yes', minValue:0, valPls:'' },\r\n            { label: '№ квартиры/офиса', name: 'flat', statusChech:'', minValue:0, valPls:'' },\r\n            { label: '№ подъезда', name: 'entrance', statusChech:'', minValue:0, valPls:'' },\r\n            { label: 'Этаж', name: 'level', statusChech:'', minValue:0, valPls:''},\r\n            { label: 'Примечание', name: 'comment', statusChech:'', minValue:0, valPls:'Пример: Квартира сестры' }\r\n        ];\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onInput = this.onInput.bind(this);\r\n        this.openDefault = this.openDefault.bind(this);\r\n\r\n        this.closePopout = this.closePopout.bind(this);\r\n\r\n        if(this.props.AddressEdit){\r\n            this.state = {\r\n                    id:this.props.AddressEdit.id,\r\n                    city: this.props.AddressEdit.city,\r\n                    street: this.props.AddressEdit.street,\r\n                    home: this.props.AddressEdit.home,\r\n                    entrance: this.props.AddressEdit.podezd,\r\n                    level: this.props.AddressEdit.etaj,\r\n                    flat: this.props.AddressEdit.kvartira,\r\n                    comment: this.props.AddressEdit.comment,\r\n                streetCityVisual:this.props.AddressEdit.city+' '+this.props.AddressEdit.street,\r\n                streetName:this.props.AddressEdit.street,\r\n                streetList:{},\r\n                search:this.props.AddressEdit.street,\r\n                }\r\n        }\r\n    }\r\n\r\n    onChange(e) {\r\n        const { name, value } = e.currentTarget;\r\n        // if((value === null || value === '') & name === 'city'){}else {\r\n        //     this.setState({[name]: value});\r\n        // }\r\n        this.setState({[name]: value});\r\n       // console.log(this.state);\r\n    }\r\n\r\n    onInput(e) {\r\n        console.log(e);\r\n        this.setState({ search: e });\r\n        if(e.length >2) {\r\n            this.getStreetList(e, 1);\r\n        }else{\r\n            this.setStreetList({});\r\n        }\r\n        // console.log(e.target.value,'Ввели');\r\n        // this.getStreetList(e.target.value,1)\r\n        // return value;\r\n    }\r\n\r\n\r\n    openDefault () {\r\n        this.props.setPopout({ popout:\r\n                <Alert\r\n                    actions={[{\r\n                        title: 'Исправить',\r\n                        autoclose: true,\r\n                        style: 'cancel'\r\n                    }]}\r\n                    onClose={this.closePopout}\r\n                >\r\n                    <h2>Не все поля адреса заполнены</h2>\r\n                    <p>Внимательно заполните все поля, для сохранения адреса доставки!</p>\r\n                </Alert>\r\n        });\r\n    }\r\n\r\n\r\n\r\n    saveNewAddress(){\r\n        if(this.state.city === '' || this.state.street === '' || this.state.home === ''){\r\n            this.openDefault();\r\n        }else{\r\n           // console.log('Все ок, отправлем адрес на сохранение');\r\n            this.props.setPopout({ popout:<ScreenSpinner />});\r\n            //Функция для отправки адреса на сервер.\r\n\r\n            axios(global.URLAPI+'api/setAddressUser&apiKey='+global.ApiKey+'',\r\n                {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                    data: {\r\n                        addressInfo:this.state,\r\n                        idUserVK:this.props.userInfo.id\r\n                    },\r\n                    responseType:'text'\r\n                })\r\n                .then(({ data }) => {\r\n                    if(\"error\" in data){\r\n                        console.log(data.error,'|',data.errorInfo);\r\n                    }else{\r\n                        if(data.result.result_add === true){\r\n                            console.log('Обновляем адреса',data);\r\n                                this.props.getAddressUserSystem();\r\n                            this.props.setPopout({ popout:null});\r\n                            this.props.setAddressDefault(0);\r\n                        }else{\r\n                            console.log('Ошибка ',data);\r\n                        }\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"ERROR: ---Запрос Новый Адрес---  \",err);\r\n                });\r\n        }\r\n    }\r\n\r\n    saveEditAddress(){\r\n        if(this.state.city === '' || this.state.street === '' || this.state.home === ''){\r\n            this.openDefault();\r\n        }else{\r\n           // console.log('Все ок, отправлем адрес на сохранение');\r\n            this.props.setPopout({ popout:<ScreenSpinner />});\r\n            //Функция для отправки адреса на сервер.\r\n\r\n            axios(global.URLAPI+'api/editAddressUser&apiKey='+global.ApiKey+'',\r\n                {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                    data: {\r\n                        addressInfo:this.state,\r\n                        idUserVK:this.props.userInfo.id\r\n                    },\r\n                    responseType:'text'\r\n                })\r\n                .then(({ data }) => {\r\n                    if(\"error\" in data){\r\n                        console.log(data.error,'|',data.errorInfo);\r\n                    }else{\r\n                        if(data.result.result_add === true){\r\n                            console.log('Обновляем адреса',data);\r\n                                this.props.getAddressUserSystem();\r\n                            this.props.setPopout({ popout:null});\r\n                            //this.props.setAddressDefault(0);\r\n                        }else{\r\n                            console.log('Ошибка ',data);\r\n                        }\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"ERROR: ---Запрос Новый Адрес---  \",err);\r\n                });\r\n        }\r\n    }\r\n\r\n    getStreetList(S,idC){\r\n        console.log(S,idC,'Передали');\r\n        this.setState({pauseLoadStreet:true});\r\n       // this.props.setPopout({ popout:<ScreenSpinner />});\r\n        axios(global.URLAPI+'api/getStreetList&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'GET',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    nameStreet:S,\r\n                    city_users_id:idC\r\n                },\r\n                params:{\r\n                    nameStreet:S,\r\n                    city_users_id:idC\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    if(\"result\" in data){\r\n                        console.log('Получили список вариантов',data.result);\r\n                        this.setStreetList(data.result);\r\n                       // this.props.setPopout({ popout:null});\r\n                    }else{\r\n                        console.log('Ошибка ',data);\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Получение списка улиц---  \",err);\r\n            });\r\n    }\r\n\r\n\r\n    closePopout () {\r\n        this.props.setPopout({ popout: null });\r\n    }\r\n\r\n    getCitySelect(idCity,def = null){\r\n        if(idCity in global.CityListBind) {\r\n            const ListCityOrigin = global.CityListBind[idCity].listCity;\r\n            const ListCitys = Object.keys(global.CityListBind[idCity].listCity);\r\n            const ListOption = ListCitys.map((data, key) => {\r\n                return (<option\r\n                    key={key}\r\n                    value={ListCityOrigin[data].title}\r\n                >\r\n                    {\r\n                        ListCityOrigin[data].title\r\n                    }\r\n                </option>);\r\n            });\r\n            return (\r\n                ListOption\r\n            );\r\n        }else{\r\n            return (\"\");\r\n        }\r\n    }\r\n\r\n    setStreetList(list){\r\n        this.setState({streetList : list,pauseLoadStreet:true});\r\n        console.log('прпрпрпр',this.state.streetList);\r\n        this.setState({pauseLoadStreet:false});\r\n    }\r\n\r\n    setStreetCityAdres(Localitytype,LocalityName,LocalityId,typeStreet,streetName) {\r\n        this.setState({\r\n            city: LocalityName,\r\n            street: typeStreet+', '+streetName,\r\n            streetSearch: streetName,\r\n            streetCityVisual: Localitytype+' '+LocalityName+' '+typeStreet + ' ' + streetName,\r\n        });\r\n    }\r\n\r\n\r\n\r\n    getFormSetStreetName(){\r\n        return(\r\n            <div className=\"searckBoxses\">\r\n                <Search value={this.state.search}  onChange={this.onInput} after={null} placeholder=\"Введите улицу\"/>\r\n                <div style={{minHeight:\"400px\"}}>\r\n                {this.state.pauseLoadStreet === true ? \"\" :\r\n                    Object.keys(this.state.streetList).length > 0 ?\r\n                        Object.keys(this.state.streetList).map((number,id) =>\r\n                            <Cell onClick={()=>{this.setStreetCityAdres(this.state.streetList[number].typeLocality,this.state.streetList[number].LocalityName,this.state.streetList[number].idLocality,this.state.streetList[number].typeStreet,this.state.streetList[number].name);}} className=\"streetCellChecker\" key={this.state.streetList[number].id}>\r\n                                <div className=\"nameCity\">{this.state.streetList[number].LocalityName}</div>\r\n                                <div className=\"nameStreet\">{this.state.streetList[number].typeStreet} {this.state.streetList[number].name}</div>\r\n                            </Cell>\r\n                        )\r\n                        :\r\n                        <Cell className=\"streetCellChecker\" key=\"noneStreet\">\r\n                            Ничего не найдено\r\n                        </Cell>\r\n                }\r\n                </div>\r\n                <div style={{padding:\"160px 0\"}}></div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    getOkStreetNameValue(){\r\n        return(<FormLayout>\r\n            {/*<Select placeholder=\"Город / Населенный пункт\" onChange={this.onChange} name=\"city\" key={\"input_city\"} top=\"Город\">*/}\r\n            {/*    {this.getCitySelect(1)}*/}\r\n            {/*</Select>*/}\r\n            <Input\r\n                type=\"text\"\r\n                name=\"street\"\r\n                key={\"input_street\"}\r\n\r\n                value={\r\n                    this.state.streetCityVisual\r\n                }\r\n                status='valid'\r\n                onClick={()=>{this.setState({search:this.state.streetSearch,street:'',streetSearch:''})}}\r\n            />\r\n            {this.addressItems.map(({ label, name, statusChech, minValue, valPls }) => (\r\n                <Input\r\n                    type=\"text\"\r\n                    name={name}\r\n                    key={\"input_\"+name}\r\n                    top={label}\r\n                    onChange={this.onChange}\r\n                    value={\r\n                        this.state[name]\r\n                    }\r\n                    status={\r\n                        statusChech ?\r\n                            this.state[name] ?\r\n                                this.state[name].length >=minValue  ? 'valid' : 'error'\r\n                                : 'error'\r\n                            : \"\"\r\n                    }\r\n                    bottom={\r\n                        statusChech ?\r\n                            this.state[name] ?\r\n                                this.state[name].length >=minValue  ? '' : 'Введенные значение не корректно '+this.state[name].length\r\n                                : 'Обязательно к заполнению'\r\n                            : \"\"\r\n                    }\r\n                    placeholder={valPls}\r\n                />\r\n            ))}\r\n            <Button size=\"l\" style={{background:\"#e63743\"}} onClick={()=>{this.saveNewAddress(); if(this.props.hideModals){this.props.hideModals()}}}>Подтвердить адрес</Button>\r\n        </FormLayout>);\r\n    }\r\n\r\n\r\n    getFormSetStreetNameEdit(){\r\n        return(\r\n            <div className=\"searckBoxses\">\r\n                <Search value={this.state.search}  onChange={this.onInput} after={null}  placeholder=\"Введите улицу\"/>\r\n                <div style={{minHeight:\"400px\"}}>\r\n                {this.state.pauseLoadStreet === true ? \"\" :\r\n                    Object.keys(this.state.streetList).length > 0 ?\r\n                        Object.keys(this.state.streetList).map((number,id) =>\r\n                            <Cell onClick={()=>{this.setStreetCityAdres(this.state.streetList[number].typeLocality,this.state.streetList[number].LocalityName,this.state.streetList[number].idLocality,this.state.streetList[number].typeStreet,this.state.streetList[number].name);}} className=\"streetCellChecker\" key={this.state.streetList[number].id}>\r\n                                <div className=\"nameCity\">{this.state.streetList[number].LocalityName}</div>\r\n                                <div className=\"nameStreet\">{this.state.streetList[number].typeStreet} {this.state.streetList[number].name}</div>\r\n                            </Cell>\r\n                        )\r\n                        :\r\n                        <Cell className=\"streetCellChecker\" key=\"noneStreet\">\r\n                            Ничего не найдено\r\n                        </Cell>\r\n                }\r\n                </div>\r\n                <div style={{padding:\"160px 0\"}}></div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    getOkStreetNameValueEdit(){\r\n        return(<FormLayout>\r\n\r\n            <Input\r\n                type=\"text\"\r\n                name=\"street\"\r\n                key={\"input_street\"}\r\n\r\n                value={\r\n                    this.state.streetCityVisual\r\n                }\r\n                status='valid'\r\n                onClick={()=>{this.setState({search:this.state.streetSearch,street:'',streetSearch:''})}}\r\n            />\r\n\r\n            {this.addressItems.map(({ label, name, statusChech, minValue, valPls }) => (\r\n                <Input\r\n                    type=\"text\"\r\n                    name={name}\r\n                    key={\"input_\"+name}\r\n                    top={label}\r\n                    onChange={this.onChange}\r\n                    status={\r\n                        statusChech ?\r\n                            this.state[name] ?\r\n                                this.state[name].length >minValue  ? 'valid' : 'error'\r\n                                : 'error'\r\n                            : \"\"\r\n                    }\r\n                    value={this.state[name]}\r\n                    bottom={\r\n                        statusChech ?\r\n                            this.state[name] ?\r\n                                this.state[name].length >minValue  ? '' : 'Введенные значение не корректно'\r\n                                : 'Обязательно к заполнению'\r\n                            : \"\"\r\n                    }\r\n                    placeholder={valPls}\r\n                />\r\n            ))}\r\n            <Button size=\"l\" style={{background:\"#e63743\"}} onClick={()=>{this.saveEditAddress(); if(this.props.hideModals){this.props.hideModals()}}}>Завершить редактирование</Button>\r\n        </FormLayout>);\r\n    }\r\n\r\n\r\n    getNulledForm(){\r\n        return(\r\n                this.state.street !== '' ? this.getOkStreetNameValue() : this.getFormSetStreetName()\r\n        );\r\n    }\r\n\r\n\r\n    getEditForm(){\r\n        return(\r\n            this.state.street !== '' ? this.getOkStreetNameValueEdit() : this.getFormSetStreetNameEdit()\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Div>\r\n                {this.props.AddressEdit ? this.getEditForm() : this.getNulledForm()}\r\n            </Div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default FormNewAddress;"],"sourceRoot":""}